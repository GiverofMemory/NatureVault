version=pmwiki-2.2.133 ordered=1 urlencoded=1
So if it has been traded 500 times then it's value is 1/2 a normal collectible.  This is an awesome way to intruduce variability in value of collectibles that is easily verified and also helps reduce the size of the ledger over time.  Another thing to introduce is encryp0ted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the proivate key.  This shouldn't be the standard bui it would be good for when you want to trade them offline and not reqire a internet comnnection to trade them or to recievet hem.  Perhaps the app verifies it online once and then it can be traded and the giver and reciever both don't know the private key so they can't double spend.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it.=
agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.101 Safari/537.36
author=
charset=UTF-8
csum=Firstly you cannot simply tell the network to give a [[#collect|collectible]] to someone else's key, unlike digital coins (actually you can, in a different way).  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.  This is actually an all-around benefit, since it can be done offline if desired, and also instantly.   !!!!Trade option 2  Another option for trade is for the receiver to generate a new private-public key and tell the sender the new public key.  Then the current owner sends a key change request to the server (signed with the current old private key).  This way no encrypted communication methods need to be used.  The downside with this is that offline trading is not possible, unlike the previous option of sharing the private key.  
ctime=1609988487
host=68.231.69.235
name=NatureVault.DigitalCollectibleNetwork
rev=843
targets=NatureVault.Chromaton,Profiles.NatureHacker,Category.Cryptics
text=(:include SkinsHeader:)%0a(:Summary:A Next Generation Scalable Crypto-Collectible Network:)%0a(:Published:1/6/2021:)%0a(:Author:[[~NatureHacker]]:)%0a(:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site Licence]]:)%0a(:Update:2/11/2021:)%0a(:Maintainer:[[~NatureHacker]]:)%0a(:Categories:[[!Cryptics]]:)%0a(:Also:[[Chromaton]], [[Monaton]]. [[https://www.naturevault.org/wiki/pmwiki.php/CryptoProjects/CollectBit|CollectBit]]:)%0a(:Archive:[[https://web.archive.org/web/20210212011550/http://www.naturevault.org/wiki/pmwiki.php/NatureVault/DigitalCollectibleNetwork|Archive.org]], [[https://archive.is/JUdpm|Archive.is]], [[https://archive.is/1UeCR|(OLD)Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|(OLD)Archive.org]]:)%0a(:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a%0a%0a%0a!!Overview%0a%0aA digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://bitcointalk.org/index.php?topic=5307018.new#new|bitcointalk]]) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's[[#mine|(*)]] or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection by customers.  %0a%0a!!!!Pitch%0aCurrent cryptocurrency is "trust-less" with mechanisms that enforce a rigid and inflexible consensus.  However these mechanisms can always be gamed.  In the case of typical blockchain, the people with the most hashpower have the most vote, culminating in the possibility of owning 51%25 of the network and therefore controlling it entirely.  Proof-of-stake is similar, with the person(s) owning the most coins having more vote and ability to attack the network.%0a%0a"Trust-less" might be a good term for it.  But "trust" is replaced with "faith".  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks affecting a significant percentage of coins besides bitcoin. State actors, given enough incentive such as killing competition to their own digital currencies, might even attack Bitcoin too someday.%0a%0aI prefer trust over faith.  Let us, as the customers, have the choice of which nodes to [[#rep|trust]], and provide opportunities for them to win our trust.  Some of these opportunities can be nodes [[#stake|staking]] collectibles, getting [[#vouch|vouches]], staying free from [[#dispute|disputes]] and maintaining good [[#customer|customer]] service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other [[#node|node(s)]] all without any transactions being lost since the database is distributed by nature.%0a%0aNode selection by the [[#customer|customer]] will be primarily based on [[#rep|reputation]]. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your [[#rep|reputation]] other than being "good".  This makes it difficult for the nodes to carry out an attack, since [[#rep|reputation]] is slow to build and fast to loose - and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a%0a!!Collectible[[#collect]]%0aThe units of value that we discuss here will be referred to as either tokens or collectibles, these terms are interchangeable.  However, three types of tokens/collectibles can exist on this network ([[#nft|NFT's]], [[#lft|LFT's]], and [[#fft|FFT's]], and also [[#contract|contracts]]).%0a%0aA collectible is just another form  of Digital Property [[https://www.naturehacker.org/2017/12/the-future-is-digital-property-dp.html?m=1|#]].%0a%0aWhy collectible and not coin?%0a%0aFirstly it is advantageous from a regulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the [[#price|value of a couple sticks of gum]], it is small enough to give pretty good granularity to transactions.  Also the [[#value|more a collectible has been traded, the lower it's value]], which will make payment possibilities even more granular.%0a%0aA collectible on our network is like a password.  In reality it is the private key (password) of a public key that has a challenge based on it completed with proof of work.  The proof of completed challenge (proof of work) is inextricably linked to the given public and private key and cannot be separated from it.  Basically a line on the [[#private|privatenet]] is one collectible on our network.%0a%0aIn online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling an account receives payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in Steam or iTunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password (this is no different than Bitcoin, you have to trust the seller will send your good once you have paid them the Bitcoin). Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferal]] process in the DCN, which is not an accident, since the DCN [[#transferal|transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a%0a!!Mining [[#miner]]%0a!!!Overview [[#mine]]%0aMining does not need an internet connection and miners create and complete their own challenges that meet the [[#requirements|requirements]] of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.  GPU's can help support the CPU though and speed it up moderately when working in conjunction.%0a%0aEvery time a [[#fact|factorization]] is completed that meets the [[#requirements|requirements]] of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more [[#collect|collectible]] enters circulation; which is the [[#emission|emission]].%0a%0a!!!Mining challenge%0a%0a# First the miner see's what [[#length|bit length]] of number is required to be accepted by the network of nodes.  %0a%0a# The miner then creates a private key.  %0a%0a# The miner then creates a [[#publickey|public key]] from the private key.  %0a%0a# Next the miner uses a nonce of his choosing, then hashes the nonce with the public key and a BCH block hash (see [[#time|time stamping]]) using something like Skein 1024 or more easily [[https://codebeautify.org/shake-256-hash-generator|SHAKE256-1024]] (and converted from [[https://www.rapidtables.com/convert/number/hex-to-decimal.html|Hex to decimal]]) to generate a large random number.%0a%0a# Then the miner truncates the number to the [[#length|bit length]] and other [[#requirements|requirements]] that the network of nodes require.%0a%0a# [[#saved]]The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, or seems to be by not having small factors [[https://math.stackexchange.com/questions/2239252/how-are-large-prime-numbers-found#2239271|#]], it can be [[#prime|saved secretly for use in RSA encryption]].%0a%0a# The miner now completes a basic ECM.  If it passes (has no factors found), the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length, or 34%25 if using GPU,]] to verify it is semi-prime; which is true if no factors are found.  If factors are found the challenge number fails, and the nonce needs to be changed and a new potential challenge number hashed.  Currently at ~150 digit numbers it takes ~300 tries to generate an acceptable challenge number.%0a%0a# The miner now completes a [[#fact|factorization]] of the number (See [[#howto|how to mine]]) and records it.%0a%0a#The miner checks that the [[#fact|factorization]] meets the [[#requirements|requirements of the nodes]].%0a%0a# The public key, nonce, and [[#fact|factorization]] constitutes one "[[#collect|digital collectible]]".  The [[#fact|factorization]] is the "Proof of Work".%0a%0a# This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]], then it is valid.  Alternatively the miner can submit the [[#collect|digital collectible]] to the [[#node|network of nodes]] immediately for safekeeping and so it always keeps it's value.%0a%0a# The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the new owner of the collectible.  This step requires broadcasting the transaction to trusted [[#node|node(s)]] for storage on the [[#ledger|ledger]].%0a%0a!!!How to mine [[#howto]]%0a%0aSoftware and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|See post #3, working!]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private and [[#publickey|public key's]] ([[https://www.puttygen.com/|PuTTYgen works, use ECDSA nistp521]]), and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a%0a!!!Making money mining%0aMiners make money by creating and completing challenges that meet the [[#length|requirements]] of the [[#node|nodes]].%0a%0aMiners should distribute their collectibles as widely as possible.  There will likely multiple networks soft forked from each-other with different transactions on their ledger, however most should have similar difficulty requirements so would likely accept the same collectibles from miners.  These different networks, by definition, will not sync their ledgers, so it is up to the miners to send their mining awards to the networks separately.  There could be certain unaffiliated or multi-affiliated nodes that provide this service to miners and give you a rundown of what networks are currently accepting what difficulty of mining challenges.%0a%0aAlso even hard-forked networks that have different difficulty requirements you could likely "merge mine" for these too.  Say one network requires a difficulty of 153 digit numbers whereas another requires 150 digit difficulty.  You could mine a 153 digit number then submit it to both networks since that would fulfill requirements of both.%0a%0a!!!!Physical collectibles[[#physical]]%0aIf a miner is well trusted, another thing they could do is sell physical collectibles.  The way this should be done is a trusted miner randomly and securely generates a private key, public key, and completes the mining challenge.  They then should submit the collectible to trusted nodes to be registered.  However the private key could be saved physically on a paper or QR code or something and this hidden inside a physical item such as a ceramic disk (like a poker chip) or other item that must be destroyed to retrieve the code.  Of course the miner could potentially "spend" the collectible without your knowledge so a miner would have to develop a good reputation to be trusted with this. Also an [[#jubilee|expiration date of 7 years]] after it was registered should be put on the physical collectible as a "trade by" date.%0a%0a%0a!!!Transferal of Collectible [[#transferal]]%0aAfter a [[#collect|collectible]] is mined it goes either directly to a node for recording, is secretly saved for later use, or given to a [[#customer|customer]] who then submits it to the network.  How this transferal of a [[#collect|collectible]] works is displayed in the diagram below.%0aAttach:restible.png%0a%0a!!!!Private keys%0a[[Chromaton]] was designed as a convenient and efficient way to transfer private keys.  %0a%0aIf the collectible is already on the network then only the private key needs to be given during a trade.  The reason for this is using the private key, the holder of the private key can recreate the public key so they know what the public key is.  Also the nonce and factor are all on the ledger already.  So if someone gets a private key then they own the crypto-collectible as long as they can then change the private key before the previous owner can.  Therefore the reciever of the collectible will need to have an internet connection to verify their ownership of the collectible.  The giver does not need an internet connection, but needs to have had an internet connection at some point so they could have gotten the collectible onto the network.  Otherwise if they mined the collectible and never submitted it, in addition to the private key they would also need to give the new owner the nonce and factors proving work so the new owner can submit it to the network.%0a%0a!!!!Layer 2: Fully offline trading (Cash)%0aIn addition to [[#physical|physical collectibles]] for offline trading, another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require an internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an app intermediary does.  For example, You could send a collectible to your phone app.  Now the phone, when online, submits it to the network with a key change that only it knows.  Now the phone has the new private key offline encrypted and you don't know what it is.  Now when you transfer to a friend offline via Bluetooth for example, your app signs the key over to your friends app.  Now both apps hold the (encrypted) private key but the app programming now eliminates the original app from double spending.  Now your friend can do the same process to someone else.  To cash out from your app, when you do get online, ask the app to give the collectibles to you (via a QR code or something) and now once that is done they can no longer be traded in the app itself without resending them to the app again and the app changing the private key again to something only it knows.%0a%0aIn order to prevent hacked apps bieng used where users can double spend, recieving app would verify the integrity of the sending app by verifying its hash.%0a%0a!!!Time-stamping collectibles [[#time]]%0aSince we have [[#value|deterioration]] of collectibles, we will probably want a way to determine how old a collectible is without having to rely on archives of nodes records of when they received it.  One way we can have collectibles timestamped is to use the timestamping function of a blockchain.  Bitcoin Cash would be an ideal candidate since it is based on the trusted bitcoin code and also has a rolling checkpoint every 10 blocks.  What this means for us is when we generate a random number to factor, we can seed it with the block-hash of a 10 block old bitcoin cash block (actually should be the 11th which is immutable).  This means that we know that the collectible mined is newer than that block in the bitcoin cash chain.  So a node couldn't claim that the collectible needs to be deleted since it is 49 years old, in reality it is only 1 year old and the node is lying.  It can be proven exactly how old that collectible is, regardless of the nodes recollection.  Well, the block could be younger than it is claimed, but when we are talking about deterioration, the newer the better anyway so the miner is incentivized to use the newest bitcoin cash block (that they know will never experience a restructuring and change) that they can so their collectible lasts the longest on the network.%0a%0aThis means that [[#node|nodes]] on the network will need to keep the block headers of Bitcoin Cash blocks in their memory (hard drive) which shouldn't take up too much space since the blocks themselves are not needed.  Basically the node keeps time via bitcoin cash headers.%0a%0aIf for some reason Bitcoin Cash network ever fails, then we can switch to using another blockchain-based cryptocurrency as a time keeper.  We simply would continue to hold the bitcoin cash block headers up to the time the network failed, and switch to a new cryptocurrency's block headers for new collectibles.%0a%0aTo do this when generating a large random number could be as follows.  Create a private key that only you know.  Hash that private key using whatever algorithm is chosen by the network (ECDSA or SHA-3 or something, we [[#howto|chose to go with ECDSA nistp521]]) to get a public key.  Next hash that public key with a 10 block old bitcoin cash block-hash.  Then hash that with Skien-1024 or something to generate our large random number and truncate to the amount of digits required, etc.  Knowing the block-hash and nonce that was used (recorded in our database) you can sign to prove you own the given public key.%0a%0aAttach:miningchallenge.png%0a%0aAll three, the Public key, BCH Block-hash, and Nonce (as well as the number (n)) are all known and recorded in the database.  The private key is not, it is a secret recorded and known only by the owner of the token.  They use this private key to sign for the public key to prove ownership for transferring the token.  However, they do not need to sign to get the number accepted to the network.  This is because someone can make an unspendable token if they want, with the public key a [[#burn|burn]] address.  Also signing for a public key may reduce security in the case that the hashing algorithm is ever cracked.  So, signing should only ever be done once, and at the time of transfer when they are assigning the token to a new public key altogether.%0a%0aAttach:miningchallengepublic.png%0a%0aAs you can see above, if we want to make an [[#nft|NFT]] or [[#lft|LFT]] we can include the metadata within the mining challenge.  However I also want it to be possible to later link metadata to an [[#fft|FFT]] that is in the [[#private|privatenet]] as seen [[#nft|here]].%0a!!!Real World Value of the DCN Mining Challenge%0a!!!!Determining security of a given bit length%0aKnowing the speed of factoring large numbers, and the market price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data of these exact metrics, which is priceless.%0a!!!!Prime number discovery [[#prime]]%0aOur network will also help discover large prime numbers, which when kept secret, are digital commodities [[https://www.naturehacker.org/2017/12/the-future-is-digital-property-dp.html?m=1|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network (DCN) that uses primes instead of [[#fact|factorizations]] as it's proof of work (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a%0aAlso the knowledge of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelihood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]]. Alternatively, if using the sieve of eratosthenes, these composites can be added to the sieve, speeding it up [[https://www.programming9.com/tutorials/competitive-programming/412-sieve-of-eratosthenes-fastest-algorithm-to-find-prime-numbers|#]]%0a%0a!!!!People power%0aThe practice of factoring large numbers is a valuable tool both for creating our own strong encryption or breaking that of bad actors. The People having this power helps keep bad actors and those who would exert power over others in check.  Power to the people.%0a%0a!!!!Dis-incentivizing bad uses of technology%0aFactoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring random challenges, there would be less risk to encryption keys being attacked for the value they hold or for other monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yourself.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a!!Nodes [[#node]]%0aNodes are not miners and have a huge and important role in a Digital [[#collect|Collectible]] Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a [[#rep|trusted node]].  What this means is when a miner gives the collectible they mined to the [[#customer|customer]], the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a [[#premium|fee for this service]], and are incentivized to share the info they gain with other nodes to increase their [[#rep|trustworthiness]].  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the [[#rep|trust]] people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a%0aBelow we will propose some example ways for miners/customers to interact with nodes.  Of course these things can be automated if desired so this will be a simplification for illustration.%0a%0a!!!Submitting new collectibles to node [[#submit]]%0aAs seen in the picture below, a miner or a primary owner of a [[#collect|collectible]] (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, recent BCH block hash, Nonce, bit length of the random number that was factored, and the proof of work prime factors.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a%0aYou do not ever need to submit the private key to the network.  Keep the private key secret (referencing the public key) and you will only give this to someone else (secretly, ie: encrypted) when you want to transfer the collectible to another person.%0aAttach:record.png%0a%0a%0a!!!Changing collectible ownership request[[#keychange]]%0aFirstly you cannot simply tell the network to give a [[#collect|collectible]] to someone else's key, unlike digital coins (actually you can, in a different way).  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.  This is actually an all-around benefit, since it can be done offline if desired, and also instantly.%0a%0aAs seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible[[#middle|(*)]], and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0aAttach:keychange.png%0a%0a!!!!Trade option 2%0a%0aAnother option for trade is for the receiver to generate a new private-public key and tell the sender the new public key.  Then the current owner sends a key change request to the server (signed with the current old private key).  This way no encrypted communication methods need to be used.  The downside with this is that offline trading is not possible, unlike the previous option of sharing the private key.%0a%0a!!!!Joining collectibles [[#join]]%0aIf there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 [[#collect|collectibles]], but each containing their own separate proof of work.  These can be called "Joined Keys" or "Joined Collectibles".  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for [[#customer|customers]], nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a [[#premium|premium paid service]] since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a%0a*[[#middle]]In order to prevent a man-in-the-middle attack during transit, the digital signature could be that of the hash of the old public key combined with the new public key.  This way someone intercepting the transmission can't use your signature as a blank check and change the new public key you requested to a different value without you knowing.%0a%0a*Joined keys are very similar to [[#stake|staked collectibles]], the only differences are slightly different format in the ledger and also they are not necessarily owned by the hosting [[#node|node]].  Joined keys can also be used as [[#stake|staked collectibles]] for nodes.%0a!!!Responsibilities%0a!!!!Source Control[[#source]]%0aNodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as Subversion) likely of SQL files and host them with at least daily updates and provide real-time syncing of databases.  What this does is allow new nodes to get the latest SQL and get nearly all the entries, then real-time sync to get fully up to date and stay in communication for real time changes.  %0a%0aSource control is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a%0a!!!!Displaying Trust [[#rep]]%0aNodes can stake collectibles, forge reliable trusting connections with other trusted nodes, get other nodes to vouch for them, set good policies, and be responsive to [[#customer|customers]]; in order to build trust with the community.%0a!!!Rights%0a%0a!!!!Setting public key requirements [[#publickey]]%0aNodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].  I don't see why this requirement cannot change over time, to make network wide collision searches even less effective.  This changing of the key format over time could also lead to old collectibles having a higher value than new ones due to rarity.  This fits with the spirit of collectibles but would harm fungibility.  Again this is up to the nodes to decide.  To start we are just using basic ECDSA nistp521 public keys which can be easily generated using [[https://www.puttygen.com/|PuTTYgen]].%0a%0a!!!!Setting collectible requirements [[#requirements]]%0aThe nodes set the requirements for [[#collect|collectibles]] they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the [[#miner|miners]] meet all the following requirements.  The nodes set the rules and ultimately the [[#customer|customers]] are liable to make sure their trusted nodes are setting good rules.  Here are some highly suggested requirements the nodes can set, some tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a%0a# Number to factor needs to meet [[#length|bit length]] requirements.%0a%0a# Number to factor cannot have any leading or trailing zeroes or fives.%0a%0a# Number to factor must be odd.%0a%0a# [[#fact|Factorization]] consists of finding '''two''' prime factors, the smallest of which is within 28%25 of 1/2 the bit length (0.36 x digit length, rounded up).%0a%0a!!!!!Setting bit length requirements [[#length]]%0a%0aSee also [[#tts|Token Time Standards]]%0a%0aThe bit length of a number to factor is a variable that is controlled by the nodes.  The bit length requirement of the numbers to factor is the Difficulty.  Here are some rules the nodes should enforce.%0a%0a# Difficulty should be reevaluated every set interval and adjusted if needed.  This interval should be between 1 month and 1 year and should be consistent.%0a%0a# Difficulty should be set so that an enthusiast PC working full time can complete 1 challenge and thus earn one collectible every week for example.  [[#tts|Other Standards]] can also exist.%0a%0a# Requirements should be set so that GPU's cannot be used to significantly speed up completing the challenge, and that GPU's cannot be used solely to complete a challenge in anywhere near the time a CPU can do it.  For example, the bit length of the factors required should not be so low as to allow GPU's to ECM to find acceptable factors in less than twice the time that a CPU could find an acceptable factor.  Basically we want using CPU's to be the only reasonable option.  GPU's can help by speeding up ECM, but we want the majority of time taken to complete the challenge to require the use of GNFS which is CPU only.  Of course if a better algorithm is found for large number factorization that works even better than GNFS on CPU's, then by all means use that [[https://www.schneier.com/blog/archives/2021/03/no-rsa-is-not-broken.html|#]], and adjust difficulty accordingly.%0a%0a# Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 2 decimal digits per adjustment interval.  So if difficulty is adjusted yearly, then if the digit length requirement this year is 151+, then next year it should be set to either 149+ or 153+ or somewhere in between. This means each period would have a max of roughly ~30%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go up and down on difficulty often, they may be colluding with speculating miners and should be suspect.%0a%0aNote: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our "one collectible per PC-week" [[#emission|emission]] goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].  Or perhaps around a 150 digit number [[https://mersenneforum.org/showthread.php?t=24390|#]].  We are going to start with 151 digits.%0a%0a!!!!Determining Factorization [[#fact]]%0aA full "prime factorization" of a Semi-Prime number will likely be needed to maintain high difficulty.  So we would need to find a number with only 2 factors that are somewhat near half the length of the number to factor.  So basically we are looking for RSA-like numbers.  Therefore we need to find two prime factors near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC, and is super-polynomial but sub-exponential [[https://en.wikipedia.org/wiki/General_number_field_sieve|#]]) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.  The reason we can't use a single prime factor, is the rest of the factors can be small and lead to some numbers being much faster than others.  With requiring two large factors, we know that any number that meets those requirements is of similar difficulty.  RSA numbers would fit this requirement nicely.%0a%0aWe can say, for example, that a semi-prime with two prime factors, the smallest of which within (less than or equal to) 28%25 of half the size of the number, needs to be found (just multiply the digit requirement, say 151 times 0.36 and round up to find the minimum factor digit length for the smallest of the 2 factors.  IE: 151*0.36 = 54.36 -> 55).  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a54.36 rounded up to 55 digits.  The 28%25 is set to make it so it wouldn't be favorable to just use a GPU to ECM a bunch of candidates up to say 52 digits instead of using GNFS.  Requiring factors to be within 28%25 of half the bit length is set to ensure that the maximum amount of CPU time is required, which prevents significant GPU speed up.  If GPU's are found to be gaining a significant advantage over CPU's, then this percentage away from half the bitlength should be lowered to keep CPU's necessary and fastest at completing challenges.  So if we had a challenge of 151 digits and GPU's could ECM 55 digit factors too fast, then perhaps lowering the percentage to 25%25 to require 57 digit factors would help.  However in general to keep pace with new CPU's coming out, only the bitlength of the challenge number would be changed, not the percentage length of the factor.%0a%0a!!!!Determining Emission [[#emission]]%0aThe nodes, by setting and enforcing the [[#length|bit length]] of the number that miners factor (difficulty), emission of the [[#collect|collectible]] is controlled.%0a%0aThe emission has no upper limit.  We believe that miners, nodes, and [[#customer|customers]] are all essential, and always essential.  And if emission is ever throttled, then that is saying we want miners to quit, which we never do.  Emission must be able to scale up with more people joining/using the network and demand, just like if there is more gold demand there will be more gold mined.%0a%0aEmission is controlled that for every enthusiast PC worth of computing power that is on earth mining, there will be one collectible added to the ledger per week.  So if the world has 5,000 PC's worth of power mining the collectible, then 5,000 collectibles will be added to the ledger every week.  See [[#ledger|ledger]] for some calculations predicting emission. This will keep the value of the collectible quite stable as long as the nodes are controlling difficulty well and the amount of miners will scale up with demand for the collectibles.%0a%0a!!!!Determining Price[[#price]]%0aThe price is not controlled directly but I expect each [[#collect|collectible]] to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0029 coins of Monero which, at $150 per coin, earns you about 43 cents.%0a%0aUnlike in [[#ref|RPOW]] where each collectible is valued in terms of how much work it took to create and thus future miners will be able to mine value easier, our collectibles (on the [[#private|privatenet]]) are all of the same value (Fully Fungible Tokens - FFT) because no matter how much processing power they took to create, they took 1 pc week of work to create when they were accepted onto the network.  This means collectibles mined with a ryzen 7 in 2021 would still be worth the same as those mined with a ryzen 29 in the year 2041.  Also since you can't create a super large proof of work like in RPOW and break it into smaller ones, supercomputers or quantum computers won't be able to outcompete smaller miners since they would have to spend their time creating lots of small collectibles just like everyone else.%0a%0a!!!Premium paid service [[#premium]]%0a%0aNodes will make income the following ways:%0a%0a* Accepting [[#submit|submissions]] and [[#keychange|transactions]] directly from customers.  Nodes would update their ledgers based on other nodes for free because they want to have the full database, but for a customer to submit to them directly they may require a small fee or a subscription.  Some nodes may do one or both of these things for free though to increase their [[#rep|reputation]].%0a%0a* Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to make income.  Contracts are sort of like premium transactions and are in the publicnet so it would make sense for nodes to require payment or subscription for a [[#customer|customer]] to submit these.  Nodes would need to sync with other node's contracts for free though to maintain a complete database.%0a%0a* Joining multiple collectibles to the same public key.  [[#join|Joining collectibles]] also would likely be something that nodes either charge a fee or require the customer have a subscription before performing.  Joining collectibles takes collectibles from the privatenet or new collectibles and joins them to one public key, thus rendering them unfit for privatenet and moved to the publicnet.  This makes all those collectibles linked to one common identity so should be discouraged by the nodes due to loss of fungibility; and requiring a fee or high tier subscription makes sense. %0a%0a**Joining collectibles can also be done directly by miners by using the same public key and using different nonces to create new proofs of work.  This would be common in [[#stake|staked collectibles]]. These would also likely be treated by nodes similarly to a [[#customer|customer]] requested joining since the nodes would have to join the proofs of work to the public key themselves as well, especially if a miner submitted them separately.%0a%0a**Unjoining collectibles can also be a service that nodes perform for customers, but as far as I can predict it would require the collectibles maintain a link to the others they were once joined to.  This is especially true if they were shared across the network, and nodes would have prior record of them being joined in the past leading to traceability.%0a%0a* Allowing customers to [[#dispute|dispute]] transactions.  Now we are getting into something I think few nodes would be willing to do for free.  Disputing transactions put the reputation of the node on the line as well as likely taking actual human work to review for veracity of the claims.  Also disputes are not something that other nodes need to sync with unless they too want to enter into the dispute. The node would likely only allow customers to submit disputes for a fee or especially a high tier subscription, especially if the [[#customer|customer]] has many disputes or the customer's disputes are important enough for the node to stake collectibles on them.%0a%0aAs you can probably tell, one way for a new node to gain [[#rep|reputation]] quickly would be to offer some or all of the above services for free.  [[#customer|Customers]] are going to be willing to give a node the benefit of the doubt and try to build a trusting relationship with a node that is willing to give them a good deal.%0a%0a%0a!!Ledger [[#ledger]]%0aThe ledger is the distributed database of accepted [[#collect|collectibles]] stored and served by the [[#node|nodes]].  It consists of a [[#private|Privatenet]] and [[#public|Publicnet]].%0a%0aDoing some calculations based on Monero blockchain, they appear to have about 244,000 PC's worth of mining power.  This would mean if we scaled to the size of Monero, we would be adding 244,000 entries into our database per week, 12.7 million per year.  At 100 bytes per entry [[https://answers.microsoft.com/en-us/msoffice/forum/msoffice_access-mso_other-msoversion_other/how-many-record-microsoft-access-can-hold/967f1817-aba9-44fa-b058-1b895c25fa19|#]] this equates to only 1.27 GB per year, much less than Bitcoin or other cryptocurrencies.  Our protocol is very light.  Here are some resources about database size solutions [[https://serverfault.com/questions/412774/fast-database-to-store-1-billion-records|#]] [[http://www.iasptk.com/large-can-mysql-database-become/|#]].%0a!!!Privatenet[[#private]]%0aPrivatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each [[#collect|collectible]] has its own public key, so is un-linkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  [[#collect|Collectibles]] should be given in person, such as payment via bluetooth or card like RFID, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a!!!!Privatenet format%0aAttach:privatenet.png%0aNotice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The new owner chooses a public key to change the old one to, and the node allows them to sign for both the new public key and old public key combined using the old private key (notice the signature next to the new public key after the "/"). Presumably they know the private key for the new public key they selected, otherwise is now [[#burn|burned]] and cannot be spent again.%0a%0aAlso the new public key should be a hash of the old public key and the new private key.  This way the chain of keys cannot be deleted but must all be kept in order for everything to be verified.  This is important so a bad node couldn't just steal ownership by making false entries.%0a%0aAlso notice also that the bit length is different for each collectible.  This is fine and denotes that they were an acceptable bit length at the time that they were accepted on the network.  They all have the same value to the network.%0a%0a!!!!Proof of Burn[[#burn]]%0a*This section needs to be revjsited and rewritten%0aProof of burn is proving that you made a [[#collect|collectible]] un-spendable.%0a%0aProof of burn is an elegant solution to a complex problem.  Say you want to create a search engine where websites can bid on their search rankings for different search terms.  Great.  So who gets the collectibles that were bid? Instead of giving the collectibles to a 3rd party and making someone rich off this competition, proof of burn means that in essence the bid value is split between every holder of collectibles on the network by making collectibles more rare.%0a%0aProof of burn is accomplished by [[#keychange|transferring]] the collectible to a public key that provably no one could own the private key to.  Public keys are hashed from private keys, so if you create the public key "PaulWalkerisStillAlive1", it is impossible that you just so happen to have the private key to that public key.  So signing that you change the key to that burn address, you are verifying that the collectible is lost forever.  Proof of burn can even be used in this way for posting short messages for just the cost of burning a collectible.%0a%0aBecause of proof of burn (including [[#dispute|disputes]]) and lost keys, and because the emission is adjusted on Moore's law and not price; the price of each collectible should steadily increase slowly over time, slightly above inflation.  This is while it stays the same difficulty to mine forever, namely an enthusiast PC-week of work per collectible.%0a!!!Publicnet [[#public]]%0aPublicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  [[#collect|Collectibles]] on the publicnet are not fully fungible, as a feature, due to their trace-ability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], [[#join|joined keys]], and [[#contract|contracts]]. Out of these, [[#join|joined keys]] and [[#contract|contracts]] are a little different; as all contracts and joined keys on the network are recorded, not just that one node's.  %0a%0aIf someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a!!!!Components of the Publicnet%0a!!!!!Staked collectibles[[#stake]]%0aStaked collectibles are [[#collect|collectibles]] that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as [[#rep|trustworthy]].  See also [[#vouch|vouches]]. [[#join|Joined keys]] are nearly identical to staked collectibles however the format in the [[#ledger|ledger]] is a bit different and they are not necessarily owned by the hosting node.  [[#join|Joined keys]] can also be used as staked collectibles by a node.%0a!!!!!!Staked Collectible Format%0aAttach:staked.png%0aNotice that this node has 5 collectibles staked between 2 different addresses.  Staking is one reason why you would want to have many collectibles under one key, that way you only have to sign once for multiple collectibles. If you are determined to be a "bad node" your staked collectibles would be blacklisted from the other nodes and lost forever, similar to [[#burn|proof of burn]].%0a!!!!!Vouches[[#vouch]]%0aA vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectibles they staked on the bad node.  You cannot vouch the same collectibles on two different nodes reputation at the same time, including your own.  The reason for this is if you and your friend get banned at the same time, your loss would be limited which isn't fair.%0a!!!!!!Vouches Format%0aAttach:vouch.png%0a%0aNotice that there is a time listed in the picture above.  Nodes can't be expected to vouch for another in real time, so they list a date and time they last checked the other node's accuracy.  This requires node [[#source|source control]] so one can find what a ledger looked like when a node vouched for them.%0a!!!!!Contracts[[#contract]]%0aContracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a [[#collect|collectible]] "giving to 'node y' for expenses". Then when node y receives the private key for the [[#collect|collectible]] from you, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as a signed acknowledgement of the contract and by accepting the payment they are accepting the terms.  The reciever should leave a memo like: "accepting as full payment from customer".%0a%0aSince contracts do not need to be signed for on-demand, unlike vouches and staked collectibles, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these collectibles are now tied to identifying information and, as such, are not fully fungible.  Also all contracts on the entire network need to be recorded by every node.  This is in contrast with [[#stake|staked collectibles]], [[#vouch|vouches]], and [[#dispute|disputes]]; which only pertain to one [[#node|node]].%0a%0aEither one of the nodes or both could publish contracts on behalf of one of their [[#customer|customers]].  In other words, you do not need to own your own node to make contracts, but you do need your own node to have [[#stake|staked collectibles]] or [[#vouch|vouches]] or [[#dispute|disputes]].  The reason for this is contracts are linked to a collectible and published whereas [[#stake|staked collectibles]] and [[#vouch|vouches]] and [[#dispute|disputes]] are linked to a a node's public ip/identity.%0a%0aIf a contract is breached, a [[#dispute|dispute]] can be logged by node(s) and appropriate action taken.  It should be noted though that a dispute should not revert ownership of the collectible back to the giver, but should rather just blacklist the collectible entirely.  This is to remove incentive of a giver to fraudulently dispute transactions. In this way the settlement for a dispute is splitting the disputed value among all collectible holders, in the same way as [[#burn|proof of burn]].%0a!!!!!!Contracts format%0a%25width=750px%25Attach:contracts.png%0aIn addition to what is listed in the diagram above:%0a* If this was a node to node contract then there can also be the node IP address or other identifying info listed in the contract, and/or this can go in the part of the publicnet that the node is signing to verify.%0a%0a* The giver might be able to sign one more message afterwards about his feedback of the receiver.  Whether or not if this is allowed, the giver can always ask their trusted [[#node|node]] to [[#dispute|dispute]] the transaction.%0a%0aHere is an  explanation of the diagram:%0a# First the giver has a collectible with a public key that he owns the private key to.  Then he writes a message.  Next he signs the message and public key with his private key.  He sends this to the node(s).  %0a%0a# Next the giver sends his private key of the collectible to the receiver.  This is done outside of the network hence the dashed line.%0a%0a# The receiver then creates a new desired public key for the collectible.  She also writes a message.  She then signs the entire transaction with the private key of her newly desired public key.  This signing with her private key is optional, so a burn address can be used as the new public key if desired.%0a%0a# The receiver also signs it with the giver's private key to prove she owns it.%0a%0a!!!!!!Smart contracts%0aSince we will have immutable [[#time|timekeeping]] in the form of the collectibles accepted into the network, we can use these bitcoin cash block hashes in order to keep time and execute time based contracts.%0a%0a!!!!!Disputes[[#dispute]]%0aTo be a trustworthy node, you have to be willing to go to war for the truth and your [[#customer|customers]].  Agreeableness is great and can enhance consensus, but consensus on a lie is worthless and harms everyone. %0a%0aDisputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist ([[#burn|burn]]) the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked collectible address(es) and even potentially blacklist the staked collectibles of the nodes vouching for the bad node.  %0a%0aDepending on the severity of the transgression, the disputing node could also blacklist the offending IP temporarily because they do not trust syncing transactions with the bad node.  I suggest the IP ban is not permanent since there are only a limited amount of IP's available.  A nine month IP ban should suffice and/or when the rest of the nodes concur and blacklist the bad node's staked collectibles.%0a%0aThe disputing node would write a reasoning for the dispute.  Just like a nodes vouches and staked collectibles, a dispute should be signed for on-demand by the disputing node. %0a%0aNodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they could blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent, than for a [[#customer|customer]] to get their collectible(s) back.%0a%0aIf consensus is not reached and the outcome is unfair enough, this could cause a fork in the network, which is OK however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If a fork occurs yet both forks maintain the same [[#requirements|collectible requirements]] for miners and thus the miners support both networks, this is considered a soft fork. If the network itself and the consensus thereof proves itself to be bad, and it is too onerous to maintain a fork that complies with [[#requirements|collectible requirement]] of the other fork(s), a new network/hard fork needs to be created and good customers, miners, and nodes should move to and support the new network exclusively.%0a%0aDisputes are another service that nodes can provide their customers.  If a [[#customer|customer]] has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.  The affected customer should provide as much evidence as possible to the node to make a decision on the veracity of the claims.  Accepting disputes from customers can be a [[#premium|premium offering]] from nodes and would likely be a paid feature and also there could be a limit to the number of disputes a node will hear from a customer in a given time period.%0a%0aNodes are constantly at war and that shows that the network is alive and robust.%0a!!!!!!Dispute format%0aAttach:dispute.png%0a%0a!!!!Forks%0aWhere there are [[#dispute|disputes]], there will be forks!  This is OK.  I will describe what I expect to see in terms of forks.%0a%0aSoft forks may be common.  A soft fork occurs when groups of nodes cannot agree on what the proper ledger should look like.  However they do roughly agree what difficulty mining should be.  Miners then can continue to support both networks.  It is in everyone's best interest to try to not split miners work, because the more miners the more widely accepted your network will be.%0a%0aHard forks really need to be deliberate.  I foresee some groups that just want their own ecosystem, which is totally fine.  One way to achieve this is to set the difficulty to completely different levels.  So for example they could set their difficulty target to 1 collectible mined for every 2 weeks of PC-work, instead of 1 week.  This choice is arbitrary, but I chose 1 week so people would feel incentivized to mine if even just with their laptop or even smartphone.  Another group could set it to even 1 day of PC-work.  While this would definitely incentivize people with slower devices to mine, it also would be cumbersome with how many collectibles need to be transferred for each purchase.  I think 1 week is a happy medium.  Everyone likes to get paid weekly.%0a%0aYou shouldn't hard fork unless you have a group of miners that really want to mine on your chosen difficulty.  In any case, miners will likely still be able to contribute to your new network, unless your difficulty is higher than the majority of other networks.  If the main network is 1 pc-week of work, and you set yours to 10, not many miners are going to accommodate you.  But if instead of 1 week of pc-work you set it to 3 days of pc-work, then miners would likely contribute their collectibles to the main network, and also to yours since theirs would qualify on your network too.  Kind of like merged mining.  Miners will tend to keep the networks and nodes in some sort of consensus on difficulty.%0a!!!!Key verification%0a[[https://stackoverflow.com/questions/16879230/public-key-signing-verification#16879250|#]]%0a!!!!Homomorphic swaps%0a[[https://bitcointalk.org/index.php?topic=4980960.0|#]]%0a%0a!!!Value modulation[[#value]]%0a%0a!!!!Deterioration%0aI believe a fun, interesting, and functional mechanism could be collectible deterioration.  Since collectibles would be able to be mined indefinitely with no dampers, having deterioration of preexisting collectibles would make sense.  What we could do is have each trade of a collectible reduce it's value.  This makes sense because every time a collectible is traded it expands the database.  So when it is traded 1000 times, it is deleted.  So this would mean a collectible that has only ever been added to a database and never traded would have a value of 1000/1000.  One that has been traded 500 times would have a value of 500/1000 which is 1/2.  So this is one way also that partial collectibles could be traded.  Lets say you want to pay someone 2.5 collectibles, you could give them 2 untraded collectibles and one that has been traded 500 times. This will improve granularity of payments.  Many people would likely seek out partial collectibles so they can more easily make more exact (you can always overshoot someone's asking price) payments.%0a%0aThis would also make "new" collectibles more valuable (more collectible) which is a fun thing to consider.%0a%0aThis will also help prevent [[https://www.officialhacker.com/dust-attack/|dust attacks]] where collectibles are transferred back and forth for no reason other than overload the network.%0a!!!!Sabbat[[#sabbat]]%0aAnother thing that could be done is a collectible that has not been transferred for 7 years, would be deleted, no matter how much value it has left.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to use and not hoard collectibles.  Software could favor old collectibles to be spent from a persons stash before new ones, so that a person always maintains a fresh stock of collectibles.%0a%0aIf a collectible is only transferred once every 7 years, it could theoretically last 7,000 years before deletion.%0a%0a!!!!Publicnet considerations: Jubilee[[#jubilee]]%0aIn general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabbat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabbat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabbat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the [[#public|publicnet]] collectible (in essence a claim to the metadata).  The exact time that the asset is scheduled to be deleted must be fully public knowledge and will be known based on the BCH Blockhash that was used to generate the number.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must broadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "public bid" (say a day or week) where the largest proof of work submitted wins the ownership of the collectible, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].  Also we could require that the proof of work factorization began no earlier than 1 year before the expiration date (again by looking at the BCH block hash used to generate the number n) so that people can fairly compete for the expiring asset.%0a%0aSince publicnet collectibles do not face deterioration, we need to create a way to prevent dust spam, trading the collectible back and forth for no reason but to spam the network.  So transferring publicnet collectibles should incur a small fee by the node you send the transaction to, to prevent dust spam.  [[#private|Privatenet]] collectible transfers need not incur a network fee for transfers since a small bit of the value (1/1000th) is burned every transfer.%0a!!Warfare%0aWhile war is allowed in current cryptocurrencies to fight for truth, it is a very symmetric war.  In order to fight the only option you have is to "get rich" and buy more mining power or hard fork.  This is not ideal, and has almost never worked to reverse fraud.  Manual intervention (hard forks) have been the only way hacked coins have been restored in current cryptocurrencies.%0a%0aIn a DCN, asymmetrical war can be waged.  Various tactics can be used such as mining decisions, increasing your node's trustworthiness, convincing other nodes to vouch for you, creating convincing disputes, soft forks, and hard forks as a last resort, etc to turn the tide of the network in the favor of truth and fairness.%0a%0a%0a!!Customer[[#customer]]%0aWhile it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  This is similar to gold buyers; they are the customer of gold miners and the customer of safekeeping services (banks/safety deposit boxes). They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there are no trustworthy nodes, to start one themselves or compensate someone else to do it.%0a%0a'Hodl'ing customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work/Moore's law.%0a%0a!!NFT's and Tokens [[#nft]]%0aDCN is compatible with creating Tokens ([[#lft|LFT's]]) and NFT's as a part of the [[#public|publicnet]].  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This section is mostly for Non-Fungible Token's (NFT's) or less fungible tokens (LFT's) ie: tokens linked to metadata.  In LFT's the metadata can be the same for a set of tokens, for example if they are linked to a company.  The [[#private|privatenet]] is entirely made of fully fungible tokens with no link to anything.%0a%0aIf the public key already exists in the [[#private|privatenet]] then it would be deleted there and moved to the [[#public|publicnet]] when it is linked to metadata.  Of course the public key would need to be signed for by the owner of the corresponding private key to verify the transfer.%0a%0aAttach:realasset.png%0aNotice in line 2 there are two keys.  This is because the collectible has transferred ownership and there is a new owner.  In this case there is the IPFS of the data of the token/NFT that the digital collectible is referring to, and the IPFS doesn't change with a change in ownership since it is immutable.%0a%0aAnother option for Line 2 is that it is a [[#multikey|multi-key asset]] which requires signatures of all of the keys listed to sign for it.  In general though, the last key listed is the one used to sign for the asset for the next transfer.%0a%0aAttach:publichash.png%0aAbove is the process for linking metadata to a previously made FFT, entry in the privatenet.  This way people can mine FFT's exclusively if they want and sell them to others who want to convert them into NFT's or LFT's.  If the miner is also the one wanting to make NFT's or LFT's, then they can use the process [[#time|here]] instead.%0a%0a%0a!!!Tokens of real assets%0aA digital collectible on the network can be linked to a real world asset by using a third party metadata service like IPFS to link the public key of the collectible to metadata and/or by using memo's in the [[#public|publicnet]].  Metadata can be added to the DCN ledger but many would probably want to use a third party service like IPNS to keep records straightforward.  In the case of using IPNS, the metadata of the real asset would be listed in the IPFS database, and the link to the IPFS entry would be added to the [[#public|publicnet]].%0a%0a!!!!Multi-key signature [[#multikey]]%0aA real asset can be linked to multiple digital collectibles, where each digital collectible will need to be signed for in order to sign for the real asset.  These multiple signatures required is a multi-key sig.  The uses for this can be that multiple people are all needed to sign for something, or just to enhance security that if one of the keys was broken by hacking, the hacker cannot sign without hacking the other keys as well.%0a%0a!!LFT's[[#lft]]%0aLFT stands for Less Fungible Token.  This is a token with a set metadata (so is a part of the [[#public|publicnet]]) but the metadata is not fully unique.  The purpose is they are redeemable for a certain product, so they are fungible between each other, but not fungible between tokens of a different product.  For example TEEF Powder could make tokens, and each token is redeemable once for a TEEF Powder product.  So each TEEF Powder token would have the same value (in theory but some people may pay more for older tokens).  But they would not have the same value as BeeBop tokens.  This is why they are called "Less Fungible".%0a%0aFor example if TEEF Powder made tokens, they would put TEEFPOWDER in the metadata section (see [[#nft|NFT]]) followed by a unique number.  For example one LFT could be TEEFPOWDER00000012.  As the business owner I know that I created this LFT and have this entry in my own personal database.  This way if someone else created a coin with metadata TEEFPOWDER0958, it wouldn't be valid in my own database since I don't have that number recorded.  For the ones I create, I keep a database and customers can redeem their token for my product. The way LFT's will degrade is the same as an NFT, if they are not traded for 7 years.  If they are traded at least once every 7 years, they will degrade after 49 years.  So when the 49 years is up, the token will be deleted from all databases.  Then there will be a window where you can bid on the token with proof of work.  The highest proof of work submitted with that metadata over a time period, say 1 week, gets to claim that metadata for their chosen public key with corresponding proof of work.  So the morale of the story is, if I create tokens that are good for one of my products, the potential is that they will never go away.  As the business owner you would have to publish your database of what tokens YOU deem still redeemable for your product. Even if the token is [[#burn|burned]], someone can still claim ownership of it.  So this is why only the business owner can determine which tokens are still redeemable.%0a%0aFor integrity of the network, each node should verify that the metadata of each submitted token is fully unique.%0a!!FFT's [[#fft]]%0aFFT refers to Fully Fungible Tokens and are the native token of the [[#private|privatenet]] and thus are the same as NFT's and LFT's however they contain no metadata.%0a%0aFFT's can be converted to an [[#nft|NFT]] or [[#lft|LFT]] but only if it has never been traded.  So businesses and artist would buy brand new FFT's from miners much like they would buy canvasses to paint on.  %0a%0a!!Token Time Standards (TTS) [[#tts]]%0a%0aSee also [[#length|Determining bit length]]%0a%0aA Token Time Standard are token standards on Digital Collectible Networks.  It looks like TTS-10080.  The "10080" part is how many minutes of CPU-WORK it will take to mint the collectible.  So TTS-10080 would take 1 week (10,080 minutes) to mint.  For tokens above 1 week, Days are used instead of minutes.  So TTS-30d is a token that takes 1 CPU-Month to mint.  When we say CPU we mean standard decent new desktop processor.  So in 2021 that would be at least a 4 core processor.  In addition to the technical designation, we are going to give them common name monikers.  We are using the "Whale" theme so each will be given a whale name.  So TTS-10080 would be a "Beluga Token" or "Beluga Token Standard"  We don't plan to go below 20 minutes as anything faster wouldn't add any GPU resistance.%0a%0aHere are some standards%0a%0aTTS-365d "Blue" (1 year)%0a%0aTTS-300d "Fin" (10 months)%0a%0aTTS-270d "Sei" (9 months)%0a%0aTTS-180d "Humpback" (6 months)%0a%0aTTS-100d "Gray" (100 days)%0a%0aTTS-90d "Minke" (3 months)%0a%0a%25color=red%25TTS-30d "Orca" (1 month [30 days])%25%25%0a%0aTTS-14d "Pilot" (2 weeks)%0a%0aTTS-10d "Shepherd" (10 days)%0a%0a%25color=blue%25TTS-10080 "Beluga" (1 week)%25%25%0a%0aTTS-4320 "Narwhal" (3 days)%0a%0aTTS-2880 "Ginko" (2 days)%0a%0aTTS-1440 "Risso" (1 day)%0a%0aTTS-720 "Hubbs" (12 hours)%0a%0aTTS-600 "Perrin" (10 hours)%0a%0aTTS-480 "Bottlenose" (8 hours)%0a%0aTTS-180 "Irrawaddy" (3 hours)%0a%0aTTS-100 "Dusky" (100 minutes)%0a%0aTTS-60 "Hourglass" (1 hour)%0a%0aTTS-45 "Franciscana" (45 minutes)%0a%0aTTS-30 "Tucuxi" (30 minutes) %0a%0aTTS-20 "Vaquita" (20 minutes)%0a%0aAnd of course more standards can be added if needed. Yes we skipped sperm..ik the memes, ik.  Each network fork can decide which standards they accept.%0a%0aOrca token could be a voting token, perhaps they could only be valid for 1 year after creation.%0a!!DeFi%0a[[#contract|Contracts]] allow for Decentralized Finance on the DCN.  Since each piece of value has a unique code, it is easy to contractually obligate certain collectibles to someone at a set time or if conditions are met.  The node will execute the contract such as locking collectibles.  However the private key for each collectible are needed to be able to transfer ownership so there may need to be custodial services for private keys in contracts.%0a%0a!!Multi-sig (centralized) collectibles%0a%0aGames (or anything/anyone else) could use multi signature tokens to keep them only tradable on their network.  For example a public key can be provided by the game client and also the player to hash and create the challenge number, and require authentication by both before it can be transferred.  This can help games and programs like social media or anything else, maintain compliance of not letting value be traded outside the program.%0a%0aThis tech can be integrated into games or other programs or things.  For example when a player crafts ingredients into an item, a challenge can be created and completed by their own computer while the player waits, in order to mint the item.%0a%0a!!Software Truly Decentralized%0a%0aOpen source software will be provided but is not required.  The network dictates outcomes not methods.  The outcomes required are mining requirements and database syncing.  Ultimatly the user can create and run their own software, use off-the-shelf software, or use software we develop.  There is no difference.  %0a%0aThis is a massive difference from blockchain projects where "he who controls the github controls the coin".  This legacy method puts a massive point of failure where the devs with github privileges can be hired like in the case of Blockstream and the direction of the project can be controlled.%0a%0aA digital collectible network participant can use any software they desire that achieves the specified aims.  This is similar to the worldwide web where you can use apache's webserver software, or you can use something else and you can still participate in the same network.%0a%0a%0a!!Uses[[#use]]%0aThe DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in border-less or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.  %0a%0aAs sort of a standard branding, companies, groups, or organizations can refer to a DCN that they run as "CollectX" if desired. For example TEEF powder brand can refer to their DCN as "CollectTEEF".  %0a%0aA brand can absolutely "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and [[#customer|customers]] choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or pay-walled in any way, then the system is no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a%0a!!Attack vectors%0a!!!Mining%0aSearching for easy to factor numbers [[https://mersenneforum.org/showthread.php?t=24797|#]]. This would mean we should make the process of generating a number perhaps a bit time consuming.%0a!!Other resources on DCN:%0a%0a[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|Toppling the Blockchain]]%0a%0a[[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|Bitcoin vs DCN]]%0a%0a!!Links%0aReddit gnfs on gpu [[https://www.reddit.com/r/crypto/comments/pzzim/general_number_field_sieve/|#]]%0a%0aGPU can help with polynomial selection, 10-30× faster,%0alots of fast cores best for sieving [[https://www.researchgate.net/publication/257391254_Methods_and_Implementations_for_Integer_Factorization|#]]%0a%0aGNFS polynomial selection on GPU, sieving on CPU, and post processing on clusters for multithreaded linear algebra (post #21) [[https://forums.anandtech.com/threads/nfs-home-needs-some-crunch.2248278/|#]]%0a%0aPoS vs PoW [[https://etherplan.com/2019/10/07/why-proof-of-stake-is-less-secure-than-proof-of-work/9077/|#]]%0a%0aXRP trusted ledger consensus [[https://arxiv.org/pdf/1802.07242.pdf|#]]%0a%0aWorking Mining guide, see post #3 [[https://www.mersenneforum.org/showthread.php?t=23078|#]]%0a%0aOnline factoring applet for testing things [[https://www.alpertron.com.ar/ECM.HTM|#]]%0a%0aRegistering a public key with IPNS [[https://docs.ipfs.io/concepts/ipns/|#]]%0a%0aCADO vs GGNFS vs Msieve [[https://mersenneforum.org/showthread.php?t=23303|#]].%0a%0aFactoring as a service rsa-512 [[http://fc16.ifca.ai/preproceedings/19_Valenta.pdf|#]].%0a%0aAdjusting parameters necessary for numbers over RSA-160 [[https://mersenneforum.org/showthread.php?t=24390|#]].%0a%0aThe great factoring challenge [[https://fastlizard4.org/wiki/The_Great_Factoring_Challenge|#]].%0a%0aEasy to factor numbers [[https://mersenneforum.org/showthread.php?t=24797|#]].%0a%0aDCN post on the mersenne forum [[https://web.archive.org/web/20210401144113/https://mersenneforum.org/showthread.php?t=26659|#]]%0a%0aDCN post on the bitcointalk forum [[https://bitcointalk.org/index.php?topic=5307018.new#new|#]].%0a%0aECDLP is not secure from GPU and other speedup attacks like RSA is [[https://www.researchgate.net/publication/220337256_ECDLP_on_GPU|#]].%0a%0aGenerate random decimal numbers for testing [[https://onlinerandomtools.com/generate-random-decimal-numbers|#]].%0a%0aThe economic practice of jubilee [[https://www.marketplace.org/2020/04/02/covid-19-debt-jubilee-forgiveness-easing/|#]].%0a%0aGGNFS help, may need to do ECM before GNFS on a random number [[https://mersenneforum.org/showthread.php?t=5013&page=2|#]].%0a%0aNew Factoring Possibility, not prone to speedup [[https://news.1j.nz/t0/VYPG|#]].%0a%0aMultithreaded ECM driver to weed out numbers with small factors [[https://www.mersenneforum.org/showpost.php?p=518249&postcount=109|#]].%0a%0aECM to NFS crossover digits [[https://math.stackexchange.com/questions/2452998/expected-number-of-digits-of-the-smallest-prime-factor|#]] forum [[https://mersenneforum.org/showthread.php?t=26707|#]].%0a%0aECM parameters for certain digits [[https://www.rieselprime.de/ziki/Elliptic_curve_method|#]].%0a%0aSemi-prime (2 factor) rarity [[https://en.wikipedia.org/wiki/Semiprime|#]] and properties [[https://www.researchgate.net/publication/272041598_On_distribution_of_semiprime_numbers/link/5ba123f3a6fdccd3cb61e520/download|#]].%0a%0aEstimate prime rarity [[https://math.stackexchange.com/questions/3386029/number-primes-digits|#]] around 1 prime every 392 numbers at the 10^153 level [[https://www.wolframalpha.com/input/?i=1%252F%2528%2528%252810%255E153%2529%252F%2528153ln%252810%2529%2529-%252810%255E152%2529%252F%2528152ln%252810%2529%2529%2529%252F%252810%255E153%2529%2529|#]].%0a!!References [[#ref]]%0a%0a[[http://www.weidai.com/bmoney.txt|B-money]]%0a%0a[[https://unenumerated.blogspot.com/2005/12/bit-gold.html|Bit gold]]%0a%0a[[https://bitcoin.org/bitcoin.pdf|Bitcoin]] [[Attach:bitcoin.txt| [txt] ]]%0a%0a[[https://nakamoto.com/the-cypherpunks/|The cypherpunks]]%0a%0a[[https://github.com/OpenCoin/opencoin-historic/blob/master/standards/protocol.txt|Open Coin]]%0a%0a[[https://nakamotoinstitute.org/shelling-out/|History of Collectibles]]%0a%0a[[https://nakamotoinstitute.org/finney/rpow/|RPOW]]%0a!!Disclaimer%0aThis is a living document, both because it is a wiki, and also because I haven't thought of everything.  The whole purpose of the network is the nodes call the shots, not me.  The nodes need to be willing to take a risk to stand up for the truth against the other nodes if necessary. The customers have to hold the node's feet to the fire so that the nodes serve the customers and the good of the network, which is to everyone's benefit.  To the miners, try to be accommodating and service as many networks as you can, and keep mining :) ~[[~NatureHacker]].%0a%0a!!FAQ%0a%0a# Can I send a collectible over the network to someone elses public key, so that I don't have to send a bunch of private keys over encrypted communication, one for each collectible I send?  Basically, can I just tell the network that a public key now owns all of my 1000 collectibles?%0a%0aYes, this is called [[#join|"joining"]] (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be forever in the [[#public|publicnet]], since they can no longer ''ever'' be traded with their own private key and must be signed for by the current public key owner. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node for various reasons.%0a%0a
time=1623866605
author:1623866605=
diff:1623866605:1623465882:=144,145c144,145%0a%3c Firstly you cannot simply tell the network to give a [[#collect|collectible]] to someone else's key, unlike digital coins (actually you can, in a different way).  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.  This is actually an all-around benefit, since it can be done offline if desired, and also instantly.%0a%3c %0a---%0a> Firstly you cannot simply tell the network to give a [[#collect|collectible]] to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.  This is actually an all-around benefit, since it can be done offline if desired, and also instantly.%0a> %0a148,152d147%0a%3c %0a%3c !!!!Trade option 2%0a%3c %0a%3c Another option for trade is for the receiver to generate a new private-public key and tell the sender the new public key.  Then the current owner sends a key change request to the server (signed with the current old private key).  This way no encrypted communication methods need to be used.  The downside with this is that offline trading is not possible, unlike the previous option of sharing the private key.%0a%3c %0a
host:1623866605=68.231.69.235
author:1623465882=
diff:1623465882:1622772534:=9c9%0a%3c (:Also:[[Chromaton]], [[Monaton]]. [[https://www.naturevault.org/wiki/pmwiki.php/CryptoProjects/CollectBit|CollectBit]]:)%0a---%0a> (:Also:[[Chromaton]], [[Monaton]]:)%0a
host:1623465882=68.231.69.235
author:1622772534=
diff:1622772534:1622131312:=78c78%0a%3c Miners make money by creating and completing challenges that meet the [[#length|requirements]] of the [[#node|nodes]].%0a---%0a> Miners make money by creating and completing challenges that meet the [[#requirements|requirements]] of the [[#node|nodes]].%0a
host:1622772534=68.231.69.235
author:1622131312=
diff:1622131312:1622129823:=452,453c452,453%0a%3c !!Software Truly Decentralized%0a%3c %0a---%0a> !!Truly Decentralized Software%0a> %0a456,458c456%0a%3c This is a massive difference from blockchain projects where "he who controls the github controls the coin".  This legacy method puts a massive point of failure where the devs with github privileges can be hired like in the case of Blockstream and the direction of the project can be controlled.%0a%3c %0a%3c A digital collectible network participant can use any software they desire that achieves the specified aims.  This is similar to the worldwide web where you can use apache's webserver software, or you can use something else and you can still participate in the same network.%0a---%0a> This is a massive difference from blockchain projects where "he who controls the github controls the coin".  This legacy method puts a massive point of failure where the devs with github privileges can be hired like in the case of Blockstream and the direction of the project can  be controlled.%0a
host:1622131312=68.231.69.235
author:1622129823=
diff:1622129823:1621685649:=451,458d450%0a%3c %0a%3c !!Truly Decentralized Software%0a%3c %0a%3c Open source software will be provided but is not required.  The network dictates outcomes not methods.  The outcomes required are mining requirements and database syncing.  Ultimatly the user can create and run their own software, use off-the-shelf software, or use software we develop.  There is no difference.  %0a%3c %0a%3c This is a massive difference from blockchain projects where "he who controls the github controls the coin".  This legacy method puts a massive point of failure where the devs with github privileges can be hired like in the case of Blockstream and the direction of the project can  be controlled.%0a%3c %0a%3c %0a
host:1622129823=68.231.69.235
author:1621685649=
diff:1621685649:1621634930:=441,442d440%0a%3c %0a%3c Orca token could be a voting token, perhaps they could only be valid for 1 year after creation.%0a
host:1621685649=68.231.69.235
author:1621634930=
diff:1621634930:1620752967:=408c408%0a%3c %25color=red%25TTS-30d "Orca" (1 month [30 days])%25%25%0a---%0a> TTS-30d "Orca" (1 month [30 days])%0a
host:1621634930=68.231.69.235
author:1620752967=
diff:1620752967:1620747517:=392c392%0a%3c A Token Time Standard are token standards on Digital Collectible Networks.  It looks like TTS-10080.  The "10080" part is how many minutes of CPU-WORK it will take to mint the collectible.  So TTS-10080 would take 1 week (10,080 minutes) to mint.  For tokens above 1 week, Days are used instead of minutes.  So TTS-30d is a token that takes 1 CPU-Month to mint.  When we say CPU we mean standard decent new desktop processor.  So in 2021 that would be at least a 4 core processor.  In addition to the technical designation, we are going to give them common name monikers.  We are using the "Whale" theme so each will be given a whale name.  So TTS-10080 would be a "Beluga Token" or "Beluga Token Standard"  We don't plan to go below 20 minutes as anything faster wouldn't add any GPU resistance.%0a---%0a> A Token Time Standard are token standards on Digital Collectible Networks.  It looks like TTS-10080.  The "10080" part is how many minutes of CPU-WORK it will take to mint the collectible.  So TTS-10080 would take 1 week (10,080 minutes) to mint.  In addition to the technical designation, we are going to give them common name monikers.  We are using the "Whale" theme so each will be given a whale name.  So TTS-10080 would be a "Beluga Token" or "Beluga Token Standard"  We don't plan to go below 20 minutes as anything faster wouldn't add any GPU resistance.%0a
host:1620752967=68.231.69.235
author:1620747517=
diff:1620747517:1620747383:=414c414%0a%3c %25color=blue%25TTS-10080 "Beluga" (1 week)%25%25%0a---%0a> %25Blue%25TTS-10080 "Beluga" (1 week)%25%25%0a
host:1620747517=68.231.69.235
author:1620747383=
diff:1620747383:1620747337:=414c414%0a%3c %25Blue%25TTS-10080 "Beluga" (1 week)%25%25%0a---%0a> %25Blue%25TTS-10080 "Beluga" (1 week)%0a
host:1620747383=68.231.69.235
author:1620747337=
diff:1620747337:1620747289:=414c414%0a%3c %25Blue%25TTS-10080 "Beluga" (1 week)%0a---%0a> TTS-10080 "Beluga" (1 week)%0a
host:1620747337=68.231.69.235
author:1620747289=
diff:1620747289:1620747255:=389,390d388%0a%3c %0a%3c See also [[#length|Determining bit length]]%0a
host:1620747289=68.231.69.235
author:1620747255=
diff:1620747255:1620747121:=179,181d178%0a%3c %0a%3c See also [[#tts|Token Time Standards]]%0a%3c %0a186c183%0a%3c # Difficulty should be set so that an enthusiast PC working full time can complete 1 challenge and thus earn one collectible every week for example.  [[#tts|Other Standards]] can also exist.%0a---%0a> # Difficulty should be set so that an enthusiast PC working full time can complete 1 challenge and thus earn one collectible every week.%0a
host:1620747255=68.231.69.235
author:1620747121=
diff:1620747121:1620745614:=385c385%0a%3c !!Token Time Standards (TTS) [[#tts]]%0a---%0a> !!Token Time Standards (TTS) [[#TTS]]%0a
host:1620747121=68.231.69.235
author:1620745614=
diff:1620745614:1620745526:=387c387%0a%3c A Token Time Standard are token standards on Digital Collectible Networks.  It looks like TTS-10080.  The "10080" part is how many minutes of CPU-WORK it will take to mint the collectible.  So TTS-10080 would take 1 week (10,080 minutes) to mint.  In addition to the technical designation, we are going to give them common name monikers.  We are using the "Whale" theme so each will be given a whale name.  So TTS-10080 would be a "Beluga Token" or "Beluga Token Standard"  We don't plan to go below 20 minutes as anything faster wouldn't add any GPU resistance.%0a---%0a> A Token Time Standard are token standards on Digital Collectible Networks.  It looks like TTS-10080.  The "10080" part is how many minutes of CPU-WORK it will take to mint the collectible.  So TTS-10080 would take 1 week (10,080 minutes) to mint.  In addition to the technical designation, we are going to give them common name monikers.  We are using the "Whale" theme so each will be given a whale name.  We don't plan to go below 20 minutes as anything faster wouldn't add any GPU resistance.%0a
host:1620745614=68.231.69.235
author:1620745526=
diff:1620745526:1620745303:=435c435%0a%3c And of course more standards can be added if needed. Yes we skipped sperm..ik the memes, ik.  Each network fork can decide which standards they accept.%0a---%0a> And of course more standards can be added if needed. Yes we skipped sperm..ik the memes, ik.%0a
host:1620745526=68.231.69.235
author:1620745303=
diff:1620745303:1620745270:=409c409%0a%3c TTS-10080 "Beluga" (1 week)%0a---%0a> TTS-7d "Beluga" (1 week)%0a
host:1620745303=68.231.69.235
author:1620745270=
diff:1620745270:1620083615:=384,435d383%0a%3c %0a%3c !!Token Time Standards (TTS) [[#TTS]]%0a%3c %0a%3c A Token Time Standard are token standards on Digital Collectible Networks.  It looks like TTS-10080.  The "10080" part is how many minutes of CPU-WORK it will take to mint the collectible.  So TTS-10080 would take 1 week (10,080 minutes) to mint.  In addition to the technical designation, we are going to give them common name monikers.  We are using the "Whale" theme so each will be given a whale name.  We don't plan to go below 20 minutes as anything faster wouldn't add any GPU resistance.%0a%3c %0a%3c Here are some standards%0a%3c %0a%3c TTS-365d "Blue" (1 year)%0a%3c %0a%3c TTS-300d "Fin" (10 months)%0a%3c %0a%3c TTS-270d "Sei" (9 months)%0a%3c %0a%3c TTS-180d "Humpback" (6 months)%0a%3c %0a%3c TTS-100d "Gray" (100 days)%0a%3c %0a%3c TTS-90d "Minke" (3 months)%0a%3c %0a%3c TTS-30d "Orca" (1 month [30 days])%0a%3c %0a%3c TTS-14d "Pilot" (2 weeks)%0a%3c %0a%3c TTS-10d "Shepherd" (10 days)%0a%3c %0a%3c TTS-7d "Beluga" (1 week)%0a%3c %0a%3c TTS-4320 "Narwhal" (3 days)%0a%3c %0a%3c TTS-2880 "Ginko" (2 days)%0a%3c %0a%3c TTS-1440 "Risso" (1 day)%0a%3c %0a%3c TTS-720 "Hubbs" (12 hours)%0a%3c %0a%3c TTS-600 "Perrin" (10 hours)%0a%3c %0a%3c TTS-480 "Bottlenose" (8 hours)%0a%3c %0a%3c TTS-180 "Irrawaddy" (3 hours)%0a%3c %0a%3c TTS-100 "Dusky" (100 minutes)%0a%3c %0a%3c TTS-60 "Hourglass" (1 hour)%0a%3c %0a%3c TTS-45 "Franciscana" (45 minutes)%0a%3c %0a%3c TTS-30 "Tucuxi" (30 minutes) %0a%3c %0a%3c TTS-20 "Vaquita" (20 minutes)%0a%3c %0a%3c And of course more standards can be added if needed. Yes we skipped sperm..ik the memes, ik.%0a
host:1620745270=68.231.69.235
author:1620083615=
diff:1620083615:1620083102:=390,391d389%0a%3c %0a%3c This tech can be integrated into games or other programs or things.  For example when a player crafts ingredients into an item, a challenge can be created and completed by their own computer while the player waits, in order to mint the item.%0a
host:1620083615=68.231.69.235
author:1620083102=
diff:1620083102:1620083002:=389c389%0a%3c Games (or anything/anyone else) could use multi signature tokens to keep them only tradable on their network.  For example a public key can be provided by the game client and also the player to hash and create the challenge number, and require authentication by both before it can be transferred.  This can help games and programs like social media or anything else, maintain compliance of not letting value be traded outside the program.%0a---%0a> Games (or anything/anyone else) could use multi signature tokens to keep them only tradable on their network.  For example a public key can be provided by the game client and also the player, and require authentication by both before it can be transferred.  This can help games and programs like social media or anything else, maintain compliance of not letting value be traded outside the program.%0a
host:1620083102=68.231.69.235
author:1620083002=
diff:1620083002:1620081587:=388,389d387%0a%3c %0a%3c Games (or anything/anyone else) could use multi signature tokens to keep them only tradable on their network.  For example a public key can be provided by the game client and also the player, and require authentication by both before it can be transferred.  This can help games and programs like social media or anything else, maintain compliance of not letting value be traded outside the program.%0a
host:1620083002=68.231.69.235
author:1620081587=
diff:1620081587:1619807172:=386,387d385%0a%3c %0a%3c !!Multi-sig (centralized) collectibles%0a
host:1620081587=68.231.69.235
author:1619807172=
diff:1619807172:1619807146:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within (less than or equal to) 28%25 of half the size of the number, needs to be found (just multiply the digit requirement, say 151 times 0.36 and round up to find the minimum factor digit length for the smallest of the 2 factors.  IE: 151*0.36 = 54.36 -> 55).  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within (less than or equal to) 28%25 of half the size of the number, needs to be found (just multiply the digit requirement, say 151 times 0.36 and round up to find the minimum factor digit length for the smallest of the 2 factors 151*0.36 = 54.36 -> 55).  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619807172=68.231.69.235
author:1619807146=
diff:1619807146:1619807120:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within (less than or equal to) 28%25 of half the size of the number, needs to be found (just multiply the digit requirement, say 151 times 0.36 and round up to find the minimum factor digit length for the smallest of the 2 factors 151*0.36 = 54.36 -> 55).  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within (less than or equal to) 28%25 of half the size of the number, needs to be found (just multiple digit requirement, say 151 times 0.36 and round up to find the minimum factor digit length for the smallest of the 2 factors 151*0.36 = 54.36 -> 55).  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619807146=68.231.69.235
author:1619807120=
diff:1619807120:1619807020:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within (less than or equal to) 28%25 of half the size of the number, needs to be found (just multiple digit requirement, say 151 times 0.36 and round up to find the minimum factor digit length for the smallest of the 2 factors 151*0.36 = 54.36 -> 55).  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within (less than or equal to) 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619807120=68.231.69.235
author:1619807020=
diff:1619807020:1619807001:=176c176%0a%3c # [[#fact|Factorization]] consists of finding '''two''' prime factors, the smallest of which is within 28%25 of 1/2 the bit length (0.36 x digit length, rounded up).%0a---%0a> # [[#fact|Factorization]] consists of finding '''two''' prime factors, the smallest of which is within 28%25 of 1/2 the bit length (0.36 x digit length).%0a
host:1619807020=68.231.69.235
author:1619807001=
diff:1619807001:1619806950:=176c176%0a%3c # [[#fact|Factorization]] consists of finding '''two''' prime factors, the smallest of which is within 28%25 of 1/2 the bit length (0.36 x digit length).%0a---%0a> # [[#fact|Factorization]] consists of finding '''two''' prime factors, the smallest of which is within 28%25 of 1/2 the bit length.%0a
host:1619807001=68.231.69.235
author:1619806950=
diff:1619806950:1619806907:=165c165%0a%3c Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].  I don't see why this requirement cannot change over time, to make network wide collision searches even less effective.  This changing of the key format over time could also lead to old collectibles having a higher value than new ones due to rarity.  This fits with the spirit of collectibles but would harm fungibility.  Again this is up to the nodes to decide.  To start we are just using basic ECDSA nistp521 public keys which can be easily generated using [[https://www.puttygen.com/|PuTTYgen]].%0a---%0a> Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].  I don't see why this requirement cannot change over time, to make network wide collision searches even less effective.  This changing of the key format over time could also lead to old collectibles having a higher value than new ones due to rarity.  This fits with the spirit of collectibles but would harm fungibility.  Again this is up to the nodes to decide.  To start we are just using basic ECDSA nistp521 public keys.%0a
host:1619806950=68.231.69.235
author:1619806907=
diff:1619806907:1619806852:=165c165%0a%3c Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].  I don't see why this requirement cannot change over time, to make network wide collision searches even less effective.  This changing of the key format over time could also lead to old collectibles having a higher value than new ones due to rarity.  This fits with the spirit of collectibles but would harm fungibility.  Again this is up to the nodes to decide.  To start we are just using basic ECDSA nistp521 public keys.%0a---%0a> Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].  I don't see why this requirement cannot change over time, to make network wide collision searches even less effective.  This changing of the key format over time could also lead to old collectibles having a higher value than new ones due to rarity.  This fits with the spirit of collectibles but would harm fungibility.  Again this is up to the nodes to decide.%0a
host:1619806907=68.231.69.235
author:1619806852=
diff:1619806852:1619806822:=61c61%0a%3c # The miner now completes a basic ECM.  If it passes (has no factors found), the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length, or 34%25 if using GPU,]] to verify it is semi-prime; which is true if no factors are found.  If factors are found the challenge number fails, and the nonce needs to be changed and a new potential challenge number hashed.  Currently at ~150 digit numbers it takes ~300 tries to generate an acceptable challenge number.%0a---%0a> # The miner now completes a basic ECM.  If it passes (has no factors found), the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length, 34%25 if using GPU]] to verify it is semi-prime; which is true if no factors are found.  If factors are found the challenge number fails, and the nonce needs to be changed and a new potential challenge number hashed.  Currently at ~150 digit numbers it takes ~300 tries to generate an acceptable challenge number.%0a
host:1619806852=68.231.69.235
author:1619806822=
diff:1619806822:1619757504:=61c61%0a%3c # The miner now completes a basic ECM.  If it passes (has no factors found), the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length, 34%25 if using GPU]] to verify it is semi-prime; which is true if no factors are found.  If factors are found the challenge number fails, and the nonce needs to be changed and a new potential challenge number hashed.  Currently at ~150 digit numbers it takes ~300 tries to generate an acceptable challenge number.%0a---%0a> # The miner now completes a basic ECM.  If it passes (has no factors found), the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length]] to verify it is semi-prime; which is true if no factors are found.  If factors are found the challenge number fails, and the nonce needs to be changed and a new potential challenge number hashed.  Currently at ~150 digit numbers it takes ~300 tries to generate an acceptable challenge number.%0a
host:1619806822=68.231.69.235
author:1619757504=
diff:1619757504:1619757052:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within (less than or equal to) 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619757504=68.231.69.235
author:1619757052=
diff:1619757052:1619756798:=195c195%0a%3c 54.36 rounded up to 55 digits.  The 28%25 is set to make it so it wouldn't be favorable to just use a GPU to ECM a bunch of candidates up to say 52 digits instead of using GNFS.  Requiring factors to be within 28%25 of half the bit length is set to ensure that the maximum amount of CPU time is required, which prevents significant GPU speed up.  If GPU's are found to be gaining a significant advantage over CPU's, then this percentage away from half the bitlength should be lowered to keep CPU's necessary and fastest at completing challenges.  So if we had a challenge of 151 digits and GPU's could ECM 55 digit factors too fast, then perhaps lowering the percentage to 25%25 to require 57 digit factors would help.  However in general to keep pace with new CPU's coming out, only the bitlength of the challenge number would be changed, not the percentage length of the factor.%0a---%0a> 54.36 rounded up to 55 digits.  The 28%25 is set to make it so it wouldn't be favorable to just use a GPU to ECM a bunch of candidates up to say 52 digits instead of using GNFS.  Requiring factors to be within 28%25 of half the bit length is set to ensure that the maximum amount of CPU time is required, which prevents significant GPU speed up.  If GPU's are found to be gaining a significant advantage over CPU's, then this percentage should be lowered to keep CPU's necessary and fastest at completing challenges.%0a
host:1619757052=68.231.69.235
author:1619756798=
diff:1619756798:1619756739:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same. So for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same as for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619756798=68.231.69.235
author:1619756739=
diff:1619756739:1619756706:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  So for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same as for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  so for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same as for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619756739=68.231.69.235
author:1619756706=
diff:1619756706:1619756662:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the smaller of the two factors be set to something within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  so for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same as for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  so for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same as for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619756706=68.231.69.235
author:1619756662=
diff:1619756662:1619756566:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the challenge number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  so for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same as for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  so for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same as for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619756662=68.231.69.235
author:1619756566=
diff:1619756566:1619756347:=185c185%0a%3c # Requirements should be set so that GPU's cannot be used to significantly speed up completing the challenge, and that GPU's cannot be used solely to complete a challenge in anywhere near the time a CPU can do it.  For example, the bit length of the factors required should not be so low as to allow GPU's to ECM to find acceptable factors in less than twice the time that a CPU could find an acceptable factor.  Basically we want using CPU's to be the only reasonable option.  GPU's can help by speeding up ECM, but we want the majority of time taken to complete the challenge to require the use of GNFS which is CPU only.  Of course if a better algorithm is found for large number factorization that works even better than GNFS on CPU's, then by all means use that [[https://www.schneier.com/blog/archives/2021/03/no-rsa-is-not-broken.html|#]], and adjust difficulty accordingly.%0a---%0a> # Requirements should be set so that GPU's cannot be used to significantly speed up completing the challenge, and that GPU's cannot be used solely to complete a challenge in anywhere near the time a CPU can do it.  For example, the bit length of the factors required should not be so low as to allow GPU's to ECM to find acceptable factors in less than twice the time that a CPU could find an acceptable factor.  Basically we want using CPU's to be the only reasonable option.  GPU's can help by speeding up ECM, but we want the majority of time taken to complete the challenge to require the use of GNFS which is CPU only.%0a
host:1619756566=68.231.69.235
author:1619756347=
diff:1619756347:1619756292:=185c185%0a%3c # Requirements should be set so that GPU's cannot be used to significantly speed up completing the challenge, and that GPU's cannot be used solely to complete a challenge in anywhere near the time a CPU can do it.  For example, the bit length of the factors required should not be so low as to allow GPU's to ECM to find acceptable factors in less than twice the time that a CPU could find an acceptable factor.  Basically we want using CPU's to be the only reasonable option.  GPU's can help by speeding up ECM, but we want the majority of time taken to complete the challenge to require the use of GNFS which is CPU only.%0a---%0a> # Requirements should be set so that GPU's cannot be used to significantly speed up completing the challenge, and that GPU's cannot be used solely to complete a challenge in anywhere near the time a CPU can do it.  For example, the bit length of the factors required should not be so low as to allow GPU's to ECM to find acceptable factors in less than twice the time that a CPU could find an acceptable factor.  Basically we want using CPU's to be the only reasonable option.  GPU's can help by speeding up ECM, but we want the majority of time taken to complete the challenge to require the use of GNFS.%0a
host:1619756347=68.231.69.235
author:1619756292=
diff:1619756292:1619756093:=176c176%0a%3c # [[#fact|Factorization]] consists of finding '''two''' prime factors, the smallest of which is within 28%25 of 1/2 the bit length.%0a---%0a> # [[#fact|Factorization]] consists of finding '''two''' prime factors at least 5%25 higher than 1/3 the bit length.%0a
host:1619756292=68.231.69.235
author:1619756093=
diff:1619756093:1619755807:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required (the percentage number) is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules.  so for example if we wanted to increase difficulty significantly, then since we were requiring 151 digit numbers this year, next year we would require 153 digit numbers, but we would keep the 28%25 requirement the same as for 151 digit number the 28%25 requirement would mean a min factor at least 55 digits, and for a 153 digit number that would mean a min factor of at least 56 digits (always round up). The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619756093=68.231.69.235
author:1619755807=
diff:1619755807:1619755764:=194c194%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and/or maximum size of the factors required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a---%0a> We can say, for example, that a semi-prime with two prime factors, the smallest of which within +/- 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within +/- 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factors required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a
host:1619755807=68.231.69.235
author:1619755764=
diff:1619755764:1619755644:=192c192%0a%3c A full "prime factorization" of a Semi-Prime number will likely be needed to maintain high difficulty.  So we would need to find a number with only 2 factors that are somewhat near half the length of the number to factor.  So basically we are looking for RSA-like numbers.  Therefore we need to find two prime factors near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC, and is super-polynomial but sub-exponential [[https://en.wikipedia.org/wiki/General_number_field_sieve|#]]) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.  The reason we can't use a single prime factor, is the rest of the factors can be small and lead to some numbers being much faster than others.  With requiring two large factors, we know that any number that meets those requirements is of similar difficulty.  RSA numbers would fit this requirement nicely.%0a---%0a> A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelihood we only need to find two prime factors near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC, and is super-polynomial but sub-exponential [[https://en.wikipedia.org/wiki/General_number_field_sieve|#]]) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.  The reason we can't use a single prime factor, is the rest of the factors can be small and lead to some numbers being much faster than others.  With requiring two large factors, we know that any number that meets those requirements is of similar difficulty.  RSA numbers would fit this requirement nicely.%0a
host:1619755764=68.231.69.235
author:1619755644=
diff:1619755644:1619755405:=185,189c185,189%0a%3c # Requirements should be set so that GPU's cannot be used to significantly speed up completing the challenge, and that GPU's cannot be used solely to complete a challenge in anywhere near the time a CPU can do it.  For example, the bit length of the factors required should not be so low as to allow GPU's to ECM to find acceptable factors in less than twice the time that a CPU could find an acceptable factor.  Basically we want using CPU's to be the only reasonable option.  GPU's can help by speeding up ECM, but we want the majority of time taken to complete the challenge to require the use of GNFS.%0a%3c %0a%3c # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 2 decimal digits per adjustment interval.  So if difficulty is adjusted yearly, then if the digit length requirement this year is 151+, then next year it should be set to either 149+ or 153+ or somewhere in between. This means each period would have a max of roughly ~30%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go up and down on difficulty often, they may be colluding with speculating miners and should be suspect.%0a%3c %0a%3c Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our "one collectible per PC-week" [[#emission|emission]] goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].  Or perhaps around a 150 digit number [[https://mersenneforum.org/showthread.php?t=24390|#]].  We are going to start with 151 digits.%0a---%0a> # Requirements should be set so that GPU's cannot be used to significantly speed up completing the challenge, and that GPU's cannot be used solely to complete a challenge in anywhere near the time a CPU can do it.  for example, the bit length of the factors required should not be so low as to allow GPU's to ECM to find acceptable factors in less than double the time that a CPU could find an acceptable factor.%0a> %0a> # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have a max of roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go up and down on difficulty often, they may be colluding with speculating miners and should be suspect.%0a> %0a> Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our "one collectible per PC-week" [[#emission|emission]] goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].  Or perhaps around a 150 digit number [[https://mersenneforum.org/showthread.php?t=24390|#]].%0a
host:1619755644=68.231.69.235
author:1619755405=
diff:1619755405:1619755108:=184,185d183%0a%3c %0a%3c # Requirements should be set so that GPU's cannot be used to significantly speed up completing the challenge, and that GPU's cannot be used solely to complete a challenge in anywhere near the time a CPU can do it.  for example, the bit length of the factors required should not be so low as to allow GPU's to ECM to find acceptable factors in less than double the time that a CPU could find an acceptable factor.%0a
host:1619755405=68.231.69.235
author:1619755108=
diff:1619755108:1619632662:=192,193c192,193%0a%3c We can say, for example, that a semi-prime with two prime factors, the smallest of which within +/- 28%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within +/- 28%25 of half the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factors required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. The 28%25 rule for a 151 digit number would mean that the smallest factor needs to be 151/2 = 75.5 * .72 = %0a%3c 54.36 rounded up to 55 digits.  The 28%25 is set to make it so it wouldn't be favorable to just use a GPU to ECM a bunch of candidates up to say 52 digits instead of using GNFS.  Requiring factors to be within 28%25 of half the bit length is set to ensure that the maximum amount of CPU time is required, which prevents significant GPU speed up.  If GPU's are found to be gaining a significant advantage over CPU's, then this percentage should be lowered to keep CPU's necessary and fastest at completing challenges.%0a---%0a> We can say, for example, that two prime factors within +/-7%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within +/-7%25 of half the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factors required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a> %0a
host:1619755108=68.231.69.235
author:1619632662=
diff:1619632662:1619632594:=109c109%0a%3c To do this when generating a large random number could be as follows.  Create a private key that only you know.  Hash that private key using whatever algorithm is chosen by the network (ECDSA or SHA-3 or something, we [[#howto|chose to go with ECDSA nistp521]]) to get a public key.  Next hash that public key with a 10 block old bitcoin cash block-hash.  Then hash that with Skien-1024 or something to generate our large random number and truncate to the amount of digits required, etc.  Knowing the block-hash and nonce that was used (recorded in our database) you can sign to prove you own the given public key.%0a---%0a> To do this when generating a large random number could be as follows.  Create a private key that only you know.  Hash that private key using whatever algorithm is chosen by the network (ECDSA or SHA-3 or something, we chose to go with ECDSA nistp521) to get a public key.  Next hash that public key with a 10 block old bitcoin cash block-hash.  Then hash that with Skien-1024 or something to generate our large random number and truncate to the amount of digits required, etc.  Knowing the block-hash and nonce that was used (recorded in our database) you can sign to prove you own the given public key.%0a
host:1619632662=68.231.69.235
author:1619632594=
diff:1619632594:1619632370:=109c109%0a%3c To do this when generating a large random number could be as follows.  Create a private key that only you know.  Hash that private key using whatever algorithm is chosen by the network (ECDSA or SHA-3 or something, we chose to go with ECDSA nistp521) to get a public key.  Next hash that public key with a 10 block old bitcoin cash block-hash.  Then hash that with Skien-1024 or something to generate our large random number and truncate to the amount of digits required, etc.  Knowing the block-hash and nonce that was used (recorded in our database) you can sign to prove you own the given public key.%0a---%0a> To do this when generating a large random number could be as follows.  Create a private key that only you know.  Hash that private key using whatever algorithm is chosen by the network (ECDSA or SHA-3 or something) to get a public key.  Next hash that public key with a 10 block old bitcoin cash block-hash.  Then hash that with Skien-1024 or something to generate our large random number and truncate to the amount of digits required, etc.  Knowing the block-hash and nonce that was used (recorded in our database) you can sign to prove you own the given public key.%0a
host:1619632594=68.231.69.235
author:1619632370=
diff:1619632370:1619632190:=95c95%0a%3c If the collectible is already on the network then only the private key needs to be given during a trade.  The reason for this is using the private key, the holder of the private key can recreate the public key so they know what the public key is.  Also the nonce and factor are all on the ledger already.  So if someone gets a private key then they own the crypto-collectible as long as they can then change the private key before the previous owner can.  Therefore the reciever of the collectible will need to have an internet connection to verify their ownership of the collectible.  The giver does not need an internet connection, but needs to have had an internet connection at some point so they could have gotten the collectible onto the network.  Otherwise if they mined the collectible and never submitted it, in addition to the private key they would also need to give the new owner the nonce and factors proving work so the new owner can submit it to the network.%0a---%0a> If the collectible is already on the network then only the private key needs to be given during a trade.  The reason for this is using the private key, the holder of the private key can recreate the public key so they know what the public key is.  Also the nonce and factor are all on the ledger already.  So if someone gets a private key then they own the crypto-collectible as long as they can then change the private key before the previous owner can.  Therefore the reciever of the collectible will need to have an internet connection to verify their ownership of the collectible.  The giver does not need an internet connection, but needs to have had an internet connection at some point so they could have gotten the collectible onto the network.  Otherwise if they mined the collectible and never submitted it, in addition to the private key they would also need to give the new owner the nonce and factor proving work so the new owner can submit it to the network.%0a
host:1619632370=68.231.69.235
author:1619632190=
diff:1619632190:1619632090:=95c95%0a%3c If the collectible is already on the network then only the private key needs to be given during a trade.  The reason for this is using the private key, the holder of the private key can recreate the public key so they know what the public key is.  Also the nonce and factor are all on the ledger already.  So if someone gets a private key then they own the crypto-collectible as long as they can then change the private key before the previous owner can.  Therefore the reciever of the collectible will need to have an internet connection to verify their ownership of the collectible.  The giver does not need an internet connection, but needs to have had an internet connection at some point so they could have gotten the collectible onto the network.  Otherwise if they mined the collectible and never submitted it, in addition to the private key they would also need to give the new owner the nonce and factor proving work so the new owner can submit it to the network.%0a---%0a> If the collectible is already on the network then only the private key needs to be given.  The reason for this is using the private key, the holder of the private key can recreate the public key so they know what the public key is.  Also the nonce and factor are all on the ledger already.  So if someone gets a private key then they own the crypto-collectible as long as they can then change the private key before the previous owner can.  Therefore the reciever of the collectible will need to have an internet connection to verify their ownership of the collectible.  The giver does not need an internet connection, but needs to have had an internet connection at some point so they could have gotten the collectible onto the network.  Otherwise if they mined the collectible and never submitted it, in addition to the private key they would also need to give the new owner the nonce and factor proving work so the new owner can submit it to the network.%0a
host:1619632190=68.231.69.235
author:1619632090=
diff:1619632090:1619631969:=82c82%0a%3c Also even hard-forked networks that have different difficulty requirements you could likely "merge mine" for these too.  Say one network requires a difficulty of 153 digit numbers whereas another requires 150 digit difficulty.  You could mine a 153 digit number then submit it to both networks since that would fulfill requirements of both.%0a---%0a> Also even hard-forked networks that have different difficulty requirements you could likely "merge mine" for these too.  Say one network requires a difficulty of 460+ bit numbers whereas another requires a 400+ bit difficulty.  You could mine a 460 bit number then submit it to both networks since that would fulfill requirements of both.%0a
host:1619632090=68.231.69.235
author:1619631969=
diff:1619631969:1619631698:=61c61%0a%3c # The miner now completes a basic ECM.  If it passes (has no factors found), the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length]] to verify it is semi-prime; which is true if no factors are found.  If factors are found the challenge number fails, and the nonce needs to be changed and a new potential challenge number hashed.  Currently at ~150 digit numbers it takes ~300 tries to generate an acceptable challenge number.%0a---%0a> # The miner now completes a basic ECM.  If it passes (has no factors found), the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length]] to verify it is semi-prime; which is true if no factors are found.%0a
host:1619631969=68.231.69.235
author:1619631698=
diff:1619631698:1619631668:=75c75%0a%3c Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|See post #3, working!]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private and [[#publickey|public key's]] ([[https://www.puttygen.com/|PuTTYgen works, use ECDSA nistp521]]), and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a---%0a> Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|See post #3, working!]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private and [[#publickey|public key's]] ([[https://www.puttygen.com/|PuTTYgen works, use ECDSA 521]]), and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a
host:1619631698=68.231.69.235
author:1619631668=
diff:1619631668:1619631650:=75c75%0a%3c Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|See post #3, working!]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private and [[#publickey|public key's]] ([[https://www.puttygen.com/|PuTTYgen works, use ECDSA 521]]), and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a---%0a> Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|See post #3, working!]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private and [[#publickey|public key's]] [[https://www.puttygen.com/|PuTTYgen works, use ECDSA 521]], and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a
host:1619631668=68.231.69.235
author:1619631650=
diff:1619631650:1619631538:=75c75%0a%3c Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|See post #3, working!]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private and [[#publickey|public key's]] [[https://www.puttygen.com/|PuTTYgen works, use ECDSA 521]], and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a---%0a> Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|See post #3, working!]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a
host:1619631650=68.231.69.235
author:1619631538=
diff:1619631538:1619631488:=61c61%0a%3c # The miner now completes a basic ECM.  If it passes (has no factors found), the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length]] to verify it is semi-prime; which is true if no factors are found.%0a---%0a> # The miner now completes a basic ECM.  If it passes, the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length]] to verify it is semi-prime.%0a
host:1619631538=68.231.69.235
author:1619631488=
diff:1619631488:1619631328:=60,61d59%0a%3c %0a%3c # The miner now completes a basic ECM.  If it passes, the miner completes a [[https://mersenneforum.org/showthread.php?t=26707|detailed ECM to optimally 32%25 of the number length]] to verify it is semi-prime.%0a
host:1619631488=68.231.69.235
author:1619631328=
diff:1619631328:1619631241:=55c55%0a%3c # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key and a BCH block hash (see [[#time|time stamping]]) using something like Skein 1024 or more easily [[https://codebeautify.org/shake-256-hash-generator|SHAKE256-1024]] (and converted from [[https://www.rapidtables.com/convert/number/hex-to-decimal.html|Hex to decimal]]) to generate a large random number.%0a---%0a> # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key and a BCH block hash (see [[#time|time stamping]]) using something like Skein 1024 or more easily [[https://codebeautify.org/shake-256-hash-generator|SHAKE256-1024]] to generate a large random number.%0a
host:1619631328=68.231.69.235
author:1619631241=
diff:1619631241:1619631033:=55c55%0a%3c # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key and a BCH block hash (see [[#time|time stamping]]) using something like Skein 1024 or more easily [[https://codebeautify.org/shake-256-hash-generator|SHAKE256-1024]] to generate a large random number.%0a---%0a> # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key and a BCH block hash (see [[#time|time stamping]]) using something like Skein 1024 to generate a large random number.%0a
host:1619631241=68.231.69.235
author:1619631033=
diff:1619631033:1618510892:=39c39%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling an account receives payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in Steam or iTunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password (this is no different than Bitcoin, you have to trust the seller will send your good once you have paid them the Bitcoin). Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferal]] process in the DCN, which is not an accident, since the DCN [[#transferal|transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling an account receives payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in Steam or iTunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferal]] process in the DCN, which is not an accident, since the DCN [[#transferal|transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a
host:1619631033=68.231.69.235
author:1618510892=
diff:1618510892:1618492066:=442c442%0a%3c ECM to NFS crossover digits [[https://math.stackexchange.com/questions/2452998/expected-number-of-digits-of-the-smallest-prime-factor|#]] forum [[https://mersenneforum.org/showthread.php?t=26707|#]].%0a---%0a> ECM to NFS crossover digits [[https://math.stackexchange.com/questions/2452998/expected-number-of-digits-of-the-smallest-prime-factor|#]].%0a
host:1618510892=192.168.1.8
author:1618492066=
diff:1618492066:1618491829:=446c446%0a%3c Semi-prime (2 factor) rarity [[https://en.wikipedia.org/wiki/Semiprime|#]] and properties [[https://www.researchgate.net/publication/272041598_On_distribution_of_semiprime_numbers/link/5ba123f3a6fdccd3cb61e520/download|#]].%0a---%0a> Semi-prime (2 factor) rarity [[https://en.wikipedia.org/wiki/Semiprime|#]]%0a
host:1618492066=192.168.1.8
author:1618491829=
diff:1618491829:1618491381:=448c448%0a%3c Estimate prime rarity [[https://math.stackexchange.com/questions/3386029/number-primes-digits|#]] around 1 prime every 392 numbers at the 10^153 level [[https://www.wolframalpha.com/input/?i=1%252F%2528%2528%252810%255E153%2529%252F%2528153ln%252810%2529%2529-%252810%255E152%2529%252F%2528152ln%252810%2529%2529%2529%252F%252810%255E153%2529%2529|#]].%0a---%0a> Estimate prime rarity [[https://math.stackexchange.com/questions/3386029/number-primes-digits|#]]%0a
host:1618491829=192.168.1.8
author:1618491381=
diff:1618491381:1618491098:=447,448d446%0a%3c %0a%3c Estimate prime rarity [[https://math.stackexchange.com/questions/3386029/number-primes-digits|#]]%0a
host:1618491381=192.168.1.8
author:1618491098=
diff:1618491098:1618471686:=445,446d444%0a%3c %0a%3c Semi-prime (2 factor) rarity [[https://en.wikipedia.org/wiki/Semiprime|#]]%0a
host:1618491098=192.168.1.8
author:1618471686=
diff:1618471686:1618471530:=443,444d442%0a%3c %0a%3c ECM parameters for certain digits [[https://www.rieselprime.de/ziki/Elliptic_curve_method|#]].%0a
host:1618471686=192.168.1.8
author:1618471530=
diff:1618471530:1618467941:=441,442d440%0a%3c %0a%3c ECM to NFS crossover digits [[https://math.stackexchange.com/questions/2452998/expected-number-of-digits-of-the-smallest-prime-factor|#]].%0a
host:1618471530=192.168.1.3
author:1618467941=
diff:1618467941:1618013616:=174c174%0a%3c # [[#fact|Factorization]] consists of finding '''two''' prime factors at least 5%25 higher than 1/3 the bit length.%0a---%0a> # [[#fact|Factorization]] consists of finding '''two''' prime factors within +/-7%25 of half the bit length.%0a
host:1618467941=192.168.1.8
author:1618013616=
diff:1618013616:1618005150:=135c135%0a%3c As seen in the picture below, a miner or a primary owner of a [[#collect|collectible]] (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, recent BCH block hash, Nonce, bit length of the random number that was factored, and the proof of work prime factors.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a [[#collect|collectible]] (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work prime factors.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a
host:1618013616=68.231.69.235
author:1618005150=
diff:1618005150:1618005118:=361c361%0a%3c Above is the process for linking metadata to a previously made FFT, entry in the privatenet.  This way people can mine FFT's exclusively if they want and sell them to others who want to convert them into NFT's or LFT's.  If the miner is also the one wanting to make NFT's or LFT's, then they can use the process [[#time|here]] instead.%0a---%0a> Above is the process for linking metadata to a previously made FFT, entry in the privatenet.  This way people can mine FFT's exclusively if they want and sell them to others who want to convert them into NFT's or LFT's.  If the miner is also the one wanting to make NFT's or LFT's, then they can use the process [[|here]] instead.%0a
host:1618005150=192.168.1.8
author:1618005118=
diff:1618005118:1618004923:=355a356,358%0a> %0a> Attach:publichash.png%0a> %0a359,363d361%0a%3c %0a%3c Attach:publichash.png%0a%3c Above is the process for linking metadata to a previously made FFT, entry in the privatenet.  This way people can mine FFT's exclusively if they want and sell them to others who want to convert them into NFT's or LFT's.  If the miner is also the one wanting to make NFT's or LFT's, then they can use the process [[|here]] instead.%0a%3c %0a%3c %0a
host:1618005118=192.168.1.8
author:1618004923=
diff:1618004923:1618004841:=115c115%0a%3c As you can see above, if we want to make an [[#nft|NFT]] or [[#lft|LFT]] we can include the metadata within the mining challenge.  However I also want it to be possible to later link metadata to an [[#fft|FFT]] that is in the [[#private|privatenet]] as seen [[#nft|here]].%0a---%0a> As you can see above, if we want to make an [[#nft|NFT]] or [[#lft|LFT]] we can include the metadata within the mining challenge.  However I also want it to be possible to later link metadata to an [[#fft|FFT]] that is in the [[#private|privatenet]] as seen here.%0a
host:1618004923=192.168.1.8
author:1618004841=
diff:1618004841:1618002767:=112,115d111%0a%3c %0a%3c Attach:miningchallengepublic.png%0a%3c %0a%3c As you can see above, if we want to make an [[#nft|NFT]] or [[#lft|LFT]] we can include the metadata within the mining challenge.  However I also want it to be possible to later link metadata to an [[#fft|FFT]] that is in the [[#private|privatenet]] as seen here.%0a
host:1618004841=192.168.1.8
author:1618002767=
diff:1618002767:1617783131:=352,353d351%0a%3c %0a%3c Attach:publichash.png%0a
host:1618002767=192.168.1.8
author:1617783131=
diff:1617783131:1617780464:=431,432d430%0a%3c %0a%3c Multithreaded ECM driver to weed out numbers with small factors [[https://www.mersenneforum.org/showpost.php?p=518249&postcount=109|#]].%0a
host:1617783131=192.168.1.8
author:1617780464=
diff:1617780464:1617657687:=429,430d428%0a%3c %0a%3c New Factoring Possibility, not prone to speedup [[https://news.1j.nz/t0/VYPG|#]].%0a
host:1617780464=192.168.1.8
author:1617657687=
diff:1617657687:1617657029:=107c107%0a%3c To do this when generating a large random number could be as follows.  Create a private key that only you know.  Hash that private key using whatever algorithm is chosen by the network (ECDSA or SHA-3 or something) to get a public key.  Next hash that public key with a 10 block old bitcoin cash block-hash.  Then hash that with Skien-1024 or something to generate our large random number and truncate to the amount of digits required, etc.  Knowing the block-hash and nonce that was used (recorded in our database) you can sign to prove you own the given public key.%0a---%0a> To do this when generating a large random number could be as follows.  Create a private key that only you know.  Hash that private key using whatever algorithm is chosen by the network (ECDSA or SHA-3 or something) to get a public key.  Next hash that public key with a 10 block old bitcoin cash block-hash.  Then hash that with Skien-1024 or something to generate our large random number and truncate to the amount of digits required, etc.  Knowing the block-hash that was used (recorded in our database) you can sign to prove you own the given public key.%0a
host:1617657687=68.231.69.235
author:1617657029=
diff:1617657029:1617656914:=55c55%0a%3c # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key and a BCH block hash (see [[#time|time stamping]]) using something like Skein 1024 to generate a large random number.%0a---%0a> # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key and a BCH block hash (see ) using something like Skein 1024 to generate a large random number.%0a
host:1617657029=68.231.69.235
author:1617656914=
diff:1617656914:1617656458:=55c55%0a%3c # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key and a BCH block hash (see ) using something like Skein 1024 to generate a large random number.%0a---%0a> # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key using something like Skein 1024 to generate a large random number.%0a
host:1617656914=68.231.69.235
author:1617656458=
diff:1617656458:1617656428:=26c26%0a%3c Node selection by the [[#customer|customer]] will be primarily based on [[#rep|reputation]]. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your [[#rep|reputation]] other than being "good".  This makes it difficult for the nodes to carry out an attack, since [[#rep|reputation]] is slow to build and fast to loose - and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a---%0a> Node selection by the [[#customer|customer]] will be primarily based on [[#rep|reputation]]. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your [[#rep|reputation]] other than being "good".  This makes it difficult for the nodes to carry out an attack, since [[#rep|reputation]] is slow to build qnd fast to loose - and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a
host:1617656458=192.168.1.3
author:1617656428=
diff:1617656428:1617610386:=26c26%0a%3c Node selection by the [[#customer|customer]] will be primarily based on [[#rep|reputation]]. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your [[#rep|reputation]] other than being "good".  This makes it difficult for the nodes to carry out an attack, since [[#rep|reputation]] is slow to build qnd fast to loose - and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a---%0a> Node selection by the [[#customer|customer]] will be primarily based on [[#rep|reputation]]. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your [[#rep|reputation]] other than being "good".  This makes it difficult for the nodes to carry out an attack, since [[#rep|reputation]] is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a
host:1617656428=192.168.1.3
author:1617610386=
diff:1617610386:1617588044:=427,428d426%0a%3c %0a%3c GGNFS help, may need to do ECM before GNFS on a random number [[https://mersenneforum.org/showthread.php?t=5013&page=2|#]].%0a
host:1617610386=192.168.1.8
author:1617588044=
diff:1617588044:1617587838:=186c186%0a%3c We can say, for example, that two prime factors within +/-7%25 of half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the size of the factors be set to something between within +/-7%25 of half the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factors required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that two prime factors of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factors be set to something between 7/16th and 1/2 of the bit length. The maximum size should be either 1/2 the bit length or one bit more than 1/2 of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factors required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1617588044=192.168.1.3
author:1617587838=
diff:1617587838:1617585704:=170c170%0a%3c # [[#fact|Factorization]] consists of finding '''two''' prime factors within +/-7%25 of half the bit length.%0a---%0a> # [[#fact|Factorization]] consists of finding '''two''' prime factors between say 7/16th and one half the bit length.%0a
host:1617587838=192.168.1.3
author:1617585704=
diff:1617585704:1617423703:=184c184%0a%3c A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelihood we only need to find two prime factors near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC, and is super-polynomial but sub-exponential [[https://en.wikipedia.org/wiki/General_number_field_sieve|#]]) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.  The reason we can't use a single prime factor, is the rest of the factors can be small and lead to some numbers being much faster than others.  With requiring two large factors, we know that any number that meets those requirements is of similar difficulty.  RSA numbers would fit this requirement nicely.%0a---%0a> A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelihood we only need to find two prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC, and is super-polynomial but sub-exponential [[https://en.wikipedia.org/wiki/General_number_field_sieve|#]]) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.  The reason we can't use a single prime factor, is the rest of the factors can be small and lead to some numbers being much faster than others.  With requiring two large factors, we know that any number that meets those requirements is of similar difficulty.  RSA numbers would fit this requirement nicely.%0a
host:1617585704=68.231.69.235
author:1617423703=
diff:1617423703:1617423655:=334c334%0a%3c Since publicnet collectibles do not face deterioration, we need to create a way to prevent dust spam, trading the collectible back and forth for no reason but to spam the network.  So transferring publicnet collectibles should incur a small fee by the node you send the transaction to, to prevent dust spam.  [[#private|Privatenet]] collectible transfers need not incur a network fee for transfers since a small bit of the value (1/1000th) is burned every transfer.%0a---%0a> Since publicnet collectibles do not face deterioration, we need to create a way to prevent dust spam, trading the collectible back and forth for not reason but to spam the network.  So transferring publicnet collectibles should incur a small fee by the node you send the transaction to, to prevent dust spam.  Privatenet collectible transfers need not incur a network fee for transfers since a small bit of the value is burned every transfer.%0a
host:1617423703=192.168.1.8
author:1617423655=
diff:1617423655:1617419819:=332c332%0a%3c In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabbat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabbat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabbat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the [[#public|publicnet]] collectible (in essence a claim to the metadata).  The exact time that the asset is scheduled to be deleted must be fully public knowledge and will be known based on the BCH Blockhash that was used to generate the number.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must broadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "public bid" (say a day or week) where the largest proof of work submitted wins the ownership of the collectible, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].  Also we could require that the proof of work factorization began no earlier than 1 year before the expiration date (again by looking at the BCH block hash used to generate the number n) so that people can fairly compete for the expiring asset.%0a---%0a> In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabbat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabbat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabbat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "public bid" (say a day or week) where the largest proof of work submitted wins the ownership of the collectible, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a
host:1617423655=192.168.1.8
author:1617419819=
diff:1617419819:1617411685:=426c426%0a%3c The economic practice of jubilee [[https://www.marketplace.org/2020/04/02/covid-19-debt-jubilee-forgiveness-easing/|#]].%0a---%0a> The economic practice of jubilee [[https://www.marketplace.org/2020/04/02/covid-19-debt-jubilee-forgiveness-easing/|#]] [[https://www.kenarchy.org/wp-content/uploads/2020/05/Kenarchy_Volume1.7.pdf|#]].%0a
host:1617419819=192.168.1.3
author:1617411685=
diff:1617411685:1617410589:=426c426%0a%3c The economic practice of jubilee [[https://www.marketplace.org/2020/04/02/covid-19-debt-jubilee-forgiveness-easing/|#]] [[https://www.kenarchy.org/wp-content/uploads/2020/05/Kenarchy_Volume1.7.pdf|#]].%0a---%0a> The economic practice of jubilee [[https://www.marketplace.org/2020/04/02/covid-19-debt-jubilee-forgiveness-easing/|#]].%0a
host:1617411685=68.231.69.235
author:1617410589=
diff:1617410589:1617410448:=425,426d424%0a%3c %0a%3c The economic practice of jubilee [[https://www.marketplace.org/2020/04/02/covid-19-debt-jubilee-forgiveness-easing/|#]].%0a
host:1617410589=68.231.69.235
author:1617410448=
diff:1617410448:1617392161:=370,371d369%0a%3c %0a%3c FFT's can be converted to an [[#nft|NFT]] or [[#lft|LFT]] but only if it has never been traded.  So businesses and artist would buy brand new FFT's from miners much like they would buy canvasses to paint on.  %0a
host:1617410448=192.168.1.3
author:1617392161=
diff:1617392161:1617392109:=445c445%0a%3c Yes, this is called [[#join|"joining"]] (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be forever in the [[#public|publicnet]], since they can no longer ''ever'' be traded with their own private key and must be signed for by the current public key owner. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node for various reasons.%0a---%0a> Yes, this is called [[#join|"joining"]] (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be forever in the [[#public|publicnet]], since they can no longer ''ever'' be traded with their own private key and must be signed for by the current public key owner. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a
host:1617392161=192.168.1.8
author:1617392109=
diff:1617392109:1617390634:=445c445%0a%3c Yes, this is called [[#join|"joining"]] (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be forever in the [[#public|publicnet]], since they can no longer ''ever'' be traded with their own private key and must be signed for by the current public key owner. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a---%0a> Yes, this is called [[#join|"joining"]] (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be forever in the [[#public|publicnet]], since they can no longer be traded with their own private key and must be signed for by the current public key owner. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a
host:1617392109=192.168.1.8
author:1617390634=
diff:1617390634:1617340139:=421,422d420%0a%3c %0a%3c Generate random decimal numbers for testing [[https://onlinerandomtools.com/generate-random-decimal-numbers|#]].%0a
host:1617390634=192.168.1.8
author:1617340139=
diff:1617340139:1617337745:=419,420d418%0a%3c %0a%3c ECDLP is not secure from GPU and other speedup attacks like RSA is [[https://www.researchgate.net/publication/220337256_ECDLP_on_GPU|#]].%0a
host:1617340139=68.231.69.235
author:1617337745=
diff:1617337745:1617337683:=105c105%0a%3c If for some reason Bitcoin Cash network ever fails, then we can switch to using another blockchain-based cryptocurrency as a time keeper.  We simply would continue to hold the bitcoin cash block headers up to the time the network failed, and switch to a new cryptocurrency's block headers for new collectibles.%0a---%0a> If for some reason Bitcoin Cash ever fails, then we can switch to usig another blockchain-based cryptocurrency as a time keeper.  We simply would continue to hold the bitcoin cash block headers up to the time the network failed, and switch to a new cryptocurrencies block headers for new collectibles.%0a
host:1617337745=192.168.1.8
author:1617337683=
diff:1617337683:1617337561:=104,105d103%0a%3c %0a%3c If for some reason Bitcoin Cash ever fails, then we can switch to usig another blockchain-based cryptocurrency as a time keeper.  We simply would continue to hold the bitcoin cash block headers up to the time the network failed, and switch to a new cryptocurrencies block headers for new collectibles.%0a
host:1617337683=192.168.1.8
author:1617337561=
diff:1617337561:1617337409:=102,103d101%0a%3c %0a%3c This means that [[#node|nodes]] on the network will need to keep the block headers of Bitcoin Cash blocks in their memory (hard drive) which shouldn't take up too much space since the blocks themselves are not needed.  Basically the node keeps time via bitcoin cash headers.%0a
host:1617337561=192.168.1.8
author:1617337409=
diff:1617337409:1617337327:=278,280d277%0a%3c %0a%3c !!!!!!Smart contracts%0a%3c Since we will have immutable [[#time|timekeeping]] in the form of the collectibles accepted into the network, we can use these bitcoin cash block hashes in order to keep time and execute time based contracts.%0a
host:1617337409=192.168.1.8
author:1617337327=
diff:1617337327:1617337308:=100c100%0a%3c !!!Time-stamping collectibles [[#time]]%0a---%0a> !!!Time-stamping collectibles%0a
host:1617337327=192.168.1.8
author:1617337308=
diff:1617337308:1617337241:=29c29%0a%3c The units of value that we discuss here will be referred to as either tokens or collectibles, these terms are interchangeable.  However, three types of tokens/collectibles can exist on this network ([[#nft|NFT's]], [[#lft|LFT's]], and [[#fft|FFT's]], and also [[#contract|contracts]]).%0a---%0a> The units of value that we discuss here will be referred to as either tokens or collectibles, these terms are interchangeable.  However, three types of tokens/collectibles can exist on this network ([[#nft|NFT's]], [[#lft|LFT's]], and [[#fft|FFT's]]).%0a
host:1617337308=192.168.1.8
author:1617337241=
diff:1617337241:1617337203:=29c29%0a%3c The units of value that we discuss here will be referred to as either tokens or collectibles, these terms are interchangeable.  However, three types of tokens/collectibles can exist on this network ([[#nft|NFT's]], [[#lft|LFT's]], and [[#fft|FFT's]]).%0a---%0a> The units of value that we discuss here will be referred to as either tokens or collectibles, these terms are interchangeable.  However, three types of tokens/collectibles can exist on this network (NFT's, LFT's, and FFT's).%0a
host:1617337241=192.168.1.8
author:1617337203=
diff:1617337203:1617337172:=361c361%0a%3c !!FFT's [[#fft]]%0a---%0a> !!FFT's%0a
host:1617337203=192.168.1.8
author:1617337172=
diff:1617337172:1617337082:=29,30d28%0a%3c The units of value that we discuss here will be referred to as either tokens or collectibles, these terms are interchangeable.  However, three types of tokens/collectibles can exist on this network (NFT's, LFT's, and FFT's).%0a%3c %0a
host:1617337172=192.168.1.8
author:1617337082=
diff:1617337082:1617336897:=99c99%0a%3c Since we have [[#value|deterioration]] of collectibles, we will probably want a way to determine how old a collectible is without having to rely on archives of nodes records of when they received it.  One way we can have collectibles timestamped is to use the timestamping function of a blockchain.  Bitcoin Cash would be an ideal candidate since it is based on the trusted bitcoin code and also has a rolling checkpoint every 10 blocks.  What this means for us is when we generate a random number to factor, we can seed it with the block-hash of a 10 block old bitcoin cash block (actually should be the 11th which is immutable).  This means that we know that the collectible mined is newer than that block in the bitcoin cash chain.  So a node couldn't claim that the collectible needs to be deleted since it is 49 years old, in reality it is only 1 year old and the node is lying.  It can be proven exactly how old that collectible is, regardless of the nodes recollection.  Well, the block could be younger than it is claimed, but when we are talking about deterioration, the newer the better anyway so the miner is incentivized to use the newest bitcoin cash block (that they know will never experience a restructuring and change) that they can so their collectible lasts the longest on the network.%0a---%0a> Since we have [[#value|deterioration]] of collectibles, we will probably want a way to determine how old a collectible is without having to rely on archives of nodes records of when they received it.  One way we can have collectibles timestamped is to use the timestamping function of a blockchain.  Bitcoin Cash would be an ideal candidate since it is based on the trusted bitcoin code and also has a rolling checkpoint every 10 blocks.  What this means for us is when we generate a random number to factor, we can seed it with the block-hash of a 10 block old bitcoin cash block (actually should be the 11th which is immutable).  This means that we know that the collectible mined is newer than that block in the bitcoin cash chain.  So a node couldn't claim that the collectible needs to be deleted since it is 49 years old, in reality it is only 1 year old and the node is lying.  It can be proven exactly how old that collectible is, regardless of the nodes recollection.%0a
host:1617337082=192.168.1.8
author:1617336897=
diff:1617336897:1617336771:=99c99%0a%3c Since we have [[#value|deterioration]] of collectibles, we will probably want a way to determine how old a collectible is without having to rely on archives of nodes records of when they received it.  One way we can have collectibles timestamped is to use the timestamping function of a blockchain.  Bitcoin Cash would be an ideal candidate since it is based on the trusted bitcoin code and also has a rolling checkpoint every 10 blocks.  What this means for us is when we generate a random number to factor, we can seed it with the block-hash of a 10 block old bitcoin cash block (actually should be the 11th which is immutable).  This means that we know that the collectible mined is newer than that block in the bitcoin cash chain.  So a node couldn't claim that the collectible needs to be deleted since it is 49 years old, in reality it is only 1 year old and the node is lying.  It can be proven exactly how old that collectible is, regardless of the nodes recollection.%0a---%0a> Since we have [[#value|deterioration]] of collectibles, we will probably want a way to determine how old a collectible is without having to rely on archives of nodes records of when they received it.  One way we can have collectibles timestamped is to use the timestamping function of a blockchain.  Bitcoin Cash would be an ideal candidate since it is based on the trusted bitcoin code and also has a rolling checkpoint every 10 blocks.  What this means for us is when we generate a random number to factor, we can seed it with the block-hash of a 10 block old bitcoin cash block.  This means that we know that the collectible mined is newer than that block in the bitcoin cash chain.  So a node couldn't claim that the collectible needs to be deleted since it is 49 years old, in reality it is only 1 year old and the node is lying.  It can be proven exactly how old that collectible is, regardless of the nodes recollection.%0a
host:1617336897=192.168.1.8
author:1617336771=
diff:1617336771:1617322796:=105c105%0a%3c All three, the Public key, BCH Block-hash, and Nonce (as well as the number (n)) are all known and recorded in the database.  The private key is not, it is a secret recorded and known only by the owner of the token.  They use this private key to sign for the public key to prove ownership for transferring the token.  However, they do not need to sign to get the number accepted to the network.  This is because someone can make an unspendable token if they want, with the public key a [[#burn|burn]] address.  Also signing for a public key may reduce security in the case that the hashing algorithm is ever cracked.  So, signing should only ever be done once, and at the time of transfer when they are assigning the token to a new public key altogether.%0a---%0a> All three, the Public key, BCH Block-hash, and Nonce (as well as the number (n)) are all known and recorded in the database.  The private key is not, it is a secret recorded and known only by the owner of the token.  They use this private key to sign for the public key to prove ownership for transferring the token.  However, they do not need to sign to get the number accepted to the network.  This is because someone can make an unspendable token if they want, with the public key a [[#burn|burn]] address.  Also signing for a public key may reduce security in the case that the hashing algorithm is ever cracked.%0a
host:1617336771=192.168.1.8
author:1617322796=
diff:1617322796:1617322595:=104,105d103%0a%3c %0a%3c All three, the Public key, BCH Block-hash, and Nonce (as well as the number (n)) are all known and recorded in the database.  The private key is not, it is a secret recorded and known only by the owner of the token.  They use this private key to sign for the public key to prove ownership for transferring the token.  However, they do not need to sign to get the number accepted to the network.  This is because someone can make an unspendable token if they want, with the public key a [[#burn|burn]] address.  Also signing for a public key may reduce security in the case that the hashing algorithm is ever cracked.%0a
host:1617322796=192.168.1.8
author:1617322595=
diff:1617322595:1617321542:=99c99%0a%3c Since we have [[#value|deterioration]] of collectibles, we will probably want a way to determine how old a collectible is without having to rely on archives of nodes records of when they received it.  One way we can have collectibles timestamped is to use the timestamping function of a blockchain.  Bitcoin Cash would be an ideal candidate since it is based on the trusted bitcoin code and also has a rolling checkpoint every 10 blocks.  What this means for us is when we generate a random number to factor, we can seed it with the block-hash of a 10 block old bitcoin cash block.  This means that we know that the collectible mined is newer than that block in the bitcoin cash chain.  So a node couldn't claim that the collectible needs to be deleted since it is 49 years old, in reality it is only 1 year old and the node is lying.  It can be proven exactly how old that collectible is, regardless of the nodes recollection.%0a---%0a> Since we have [[#deteriorate|deterioration]] of collectibles, we will probably want a way to determine how old a collectible is without having to rely on archives of nodes records of when they received it.  One way we can have collectibles timestamped is to use the timestamping function of a blockchain.  Bitcoin Cash would be an ideal candidate since it is based on the trusted bitcoin code and also has a rolling checkpoint every 10 blocks.  What this means for us is when we generate a random number to factor, we can seed it with the block-hash of a 10 block old bitcoin cash block.  This means that we know that the collectible mined is newer than that block in the bitcoin cash chain.  So a node couldn't claim that the collectible needs to be deleted since it is 49 years old, in reality it is only 1 year old and the node is lying.  It can be proven exactly how old that collectible is, regardless of the nodes recollection.%0a
host:1617322595=192.168.1.8
author:1617321542=
diff:1617321542:1617320222:=102,103d101%0a%3c %0a%3c Attach:miningchallenge.png%0a
host:1617321542=192.168.1.8
author:1617320222=
diff:1617320222:1617294359:=97,101d96%0a%3c %0a%3c !!!Time-stamping collectibles%0a%3c Since we have [[#deteriorate|deterioration]] of collectibles, we will probably want a way to determine how old a collectible is without having to rely on archives of nodes records of when they received it.  One way we can have collectibles timestamped is to use the timestamping function of a blockchain.  Bitcoin Cash would be an ideal candidate since it is based on the trusted bitcoin code and also has a rolling checkpoint every 10 blocks.  What this means for us is when we generate a random number to factor, we can seed it with the block-hash of a 10 block old bitcoin cash block.  This means that we know that the collectible mined is newer than that block in the bitcoin cash chain.  So a node couldn't claim that the collectible needs to be deleted since it is 49 years old, in reality it is only 1 year old and the node is lying.  It can be proven exactly how old that collectible is, regardless of the nodes recollection.%0a%3c %0a%3c To do this when generating a large random number could be as follows.  Create a private key that only you know.  Hash that private key using whatever algorithm is chosen by the network (ECDSA or SHA-3 or something) to get a public key.  Next hash that public key with a 10 block old bitcoin cash block-hash.  Then hash that with Skien-1024 or something to generate our large random number and truncate to the amount of digits required, etc.  Knowing the block-hash that was used (recorded in our database) you can sign to prove you own the given public key.%0a
host:1617320222=192.168.1.8
author:1617294359=
diff:1617294359:1617288720:=116c116%0a%3c As seen in the picture below, a miner or a primary owner of a [[#collect|collectible]] (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work prime factors.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a [[#collect|collectible]] (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work prime factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a
host:1617294359=192.168.1.8
author:1617288720=
diff:1617288720:1617288539:=169,171c169,171%0a%3c A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelihood we only need to find two prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC, and is super-polynomial but sub-exponential [[https://en.wikipedia.org/wiki/General_number_field_sieve|#]]) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.  The reason we can't use a single prime factor, is the rest of the factors can be small and lead to some numbers being much faster than others.  With requiring two large factors, we know that any number that meets those requirements is of similar difficulty.  RSA numbers would fit this requirement nicely.%0a%3c %0a%3c We can say, for example, that two prime factors of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factors, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factors be set to something between 7/16th and 1/2 of the bit length. The maximum size should be either 1/2 the bit length or one bit more than 1/2 of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factors required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelihood we only need to find a single prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC, and is super-polynomial but sub-exponential [[https://en.wikipedia.org/wiki/General_number_field_sieve|#]]) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a> %0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be set to something between 7/16th and 1/2 of the bit length. The maximum size should be either 1/2 the bit length or one bit more than 1/2 of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1617288720=192.168.1.8
author:1617288539=
diff:1617288539:1617288068:=155c155%0a%3c # [[#fact|Factorization]] consists of finding '''two''' prime factors between say 7/16th and one half the bit length.%0a---%0a> # [[#fact|Factorization]] consists of finding one prime factor between 7/16th and one half the bit length.%0a
host:1617288539=192.168.1.8
author:1617288068=
diff:1617288068:1617288038:=399,400d398%0a%3c %0a%3c DCN post on the bitcointalk forum [[https://bitcointalk.org/index.php?topic=5307018.new#new|#]].%0a
host:1617288068=192.168.1.8
author:1617288038=
diff:1617288038:1617288019:=398c398%0a%3c DCN post on the mersenne forum [[https://web.archive.org/web/20210401144113/https://mersenneforum.org/showthread.php?t=26659|#]]%0a---%0a> Post on the mersenne forum [[https://web.archive.org/web/20210401144113/https://mersenneforum.org/showthread.php?t=26659|#]]%0a
host:1617288038=192.168.1.8
author:1617288019=
diff:1617288019:1617283019:=397,398d396%0a%3c %0a%3c Post on the mersenne forum [[https://web.archive.org/web/20210401144113/https://mersenneforum.org/showthread.php?t=26659|#]]%0a
host:1617288019=192.168.1.8
author:1617283019=
diff:1617283019:1617282973:=395,396d394%0a%3c %0a%3c Easy to factor numbers [[https://mersenneforum.org/showthread.php?t=24797|#]].%0a
host:1617283019=192.168.1.8
author:1617282973=
diff:1617282973:1617266044:=393,394d392%0a%3c %0a%3c The great factoring challenge [[https://fastlizard4.org/wiki/The_Great_Factoring_Challenge|#]].%0a
host:1617282973=192.168.1.8
author:1617266044=
diff:1617266044:1617265340:=166c166%0a%3c Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our "one collectible per PC-week" [[#emission|emission]] goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].  Or perhaps around a 150 digit number [[https://mersenneforum.org/showthread.php?t=24390|#]].%0a---%0a> Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our "one collectible per PC-week" [[#emission|emission]] goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a
host:1617266044=192.168.1.3
author:1617265340=
diff:1617265340:1617265229:=391,392d390%0a%3c %0a%3c Adjusting parameters necessary for numbers over RSA-160 [[https://mersenneforum.org/showthread.php?t=24390|#]].%0a
host:1617265340=68.231.69.235
author:1617265229=
diff:1617265229:1617264469:=361,363d360%0a%3c !!Attack vectors%0a%3c !!!Mining%0a%3c Searching for easy to factor numbers [[https://mersenneforum.org/showthread.php?t=24797|#]]. This would mean we should make the process of generating a number perhaps a bit time consuming.%0a
host:1617265229=68.231.69.235
author:1617264469=
diff:1617264469:1617263443:=386,387d385%0a%3c %0a%3c Factoring as a service rsa-512 [[http://fc16.ifca.ai/preproceedings/19_Valenta.pdf|#]].%0a
host:1617264469=192.168.1.3
author:1617263443=
diff:1617263443:1617257130:=384,385d383%0a%3c %0a%3c CADO vs GGNFS vs Msieve [[https://mersenneforum.org/showthread.php?t=23303|#]].%0a
host:1617263443=192.168.1.3
author:1617257130=
diff:1617257130:1617256947:=116c116%0a%3c As seen in the picture below, a miner or a primary owner of a [[#collect|collectible]] (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work prime factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a [[#collect|collectible]] (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a
host:1617257130=192.168.1.8
author:1617256947=
diff:1617256947:1617256879:=380,381d379%0a%3c %0a%3c Online factoring applet for testing things [[https://www.alpertron.com.ar/ECM.HTM|#]]%0a
host:1617256947=192.168.1.8
author:1617256879=
diff:1617256879:1617256811:=379c379,381%0a%3c Working Mining guide, see post #3 [[https://www.mersenneforum.org/showthread.php?t=23078|#]]%0a---%0a> Getting started with factoring [[https://www.mersenneforum.org/showthread.php?t=23078|#]]%0a> %0a> Beginners guide to GNFS [[http://gilchrist.ca/jeff/factoring/nfs_beginners_guide.html|#]]%0a
host:1617256879=192.168.1.8
author:1617256811=
diff:1617256811:1617211334:=71c71%0a%3c Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|See post #3, working!]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a---%0a> Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a
host:1617256811=192.168.1.8
author:1617211334=
diff:1617211334:1617211116:=345,347c345%0a%3c LFT stands for Less Fungible Token.  This is a token with a set metadata (so is a part of the [[#public|publicnet]]) but the metadata is not fully unique.  The purpose is they are redeemable for a certain product, so they are fungible between each other, but not fungible between tokens of a different product.  For example TEEF Powder could make tokens, and each token is redeemable once for a TEEF Powder product.  So each TEEF Powder token would have the same value (in theory but some people may pay more for older tokens).  But they would not have the same value as BeeBop tokens.  This is why they are called "Less Fungible".%0a%3c %0a%3c For example if TEEF Powder made tokens, they would put TEEFPOWDER in the metadata section (see [[#nft|NFT]]) followed by a unique number.  For example one LFT could be TEEFPOWDER00000012.  As the business owner I know that I created this LFT and have this entry in my own personal database.  This way if someone else created a coin with metadata TEEFPOWDER0958, it wouldn't be valid in my own database since I don't have that number recorded.  For the ones I create, I keep a database and customers can redeem their token for my product. The way LFT's will degrade is the same as an NFT, if they are not traded for 7 years.  If they are traded at least once every 7 years, they will degrade after 49 years.  So when the 49 years is up, the token will be deleted from all databases.  Then there will be a window where you can bid on the token with proof of work.  The highest proof of work submitted with that metadata over a time period, say 1 week, gets to claim that metadata for their chosen public key with corresponding proof of work.  So the morale of the story is, if I create tokens that are good for one of my products, the potential is that they will never go away.  As the business owner you would have to publish your database of what tokens YOU deem still redeemable for your product. Even if the token is [[#burn|burned]], someone can still claim ownership of it.  So this is why only the business owner can determine which tokens are still redeemable.%0a---%0a> LFT stands for Less Fungible Token.  This is a token with a set metadata (so is a part of the [[#public|publicnet]]) but the metadata is not fully unique.  For example if TEEF Powder made tokens, they would put TEEFPOWDER in the metadata section (see [[#nft|NFT]]) followed by a unique number.  For example one LFT could be TEEFPOWDER00000012.  As the business owner I know that I created this LFT and have this entry in my own personal database.  This way if someone else created a coin with metadata TEEFPOWDER0958, it wouldn't be valid in my own database since I don't have that number recorded.  For the ones I create, I keep a database and customers can redeem their token for my product. The way LFT's will degrade is the same as an NFT, if they are not traded for 7 years.  If they are traded at least once every 7 years, they will degrade after 49 years.  So when the 49 years is up, the token will be deleted from all databases.  Then there will be a window where you can bid on the token with proof of work.  The highest proof of work submitted with that metadata over a time period, say 1 week, gets to claim that metadata for their chosen public key with corresponding proof of work.  So the morale of the story is, if I create tokens that are good for one of my products, the potential is that they will never go away.  As the business owner you would have to publish your database of what tokens YOU deem still redeemable for your product. Even if the token is [[#burn|burned]], someone can still claim ownership of it.  So this is why only the business owner can determine which tokens are still redeemable.%0a
host:1617211334=192.168.1.8
author:1617211116=
diff:1617211116:1617211089:=349c349%0a%3c FFT refers to Fully Fungible Tokens and are the native token of the [[#private|privatenet]] and thus are the same as NFT's and LFT's however they contain no metadata.%0a---%0a> FFT refers to Fully Fungible Tokens and are the native token of the [[#private|privatenet]].%0a
host:1617211116=192.168.1.8
author:1617211089=
diff:1617211089:1617210894:=345c345%0a%3c LFT stands for Less Fungible Token.  This is a token with a set metadata (so is a part of the [[#public|publicnet]]) but the metadata is not fully unique.  For example if TEEF Powder made tokens, they would put TEEFPOWDER in the metadata section (see [[#nft|NFT]]) followed by a unique number.  For example one LFT could be TEEFPOWDER00000012.  As the business owner I know that I created this LFT and have this entry in my own personal database.  This way if someone else created a coin with metadata TEEFPOWDER0958, it wouldn't be valid in my own database since I don't have that number recorded.  For the ones I create, I keep a database and customers can redeem their token for my product. The way LFT's will degrade is the same as an NFT, if they are not traded for 7 years.  If they are traded at least once every 7 years, they will degrade after 49 years.  So when the 49 years is up, the token will be deleted from all databases.  Then there will be a window where you can bid on the token with proof of work.  The highest proof of work submitted with that metadata over a time period, say 1 week, gets to claim that metadata for their chosen public key with corresponding proof of work.  So the morale of the story is, if I create tokens that are good for one of my products, the potential is that they will never go away.  As the business owner you would have to publish your database of what tokens YOU deem still redeemable for your product. Even if the token is [[#burn|burned]], someone can still claim ownership of it.  So this is why only the business owner can determine which tokens are still redeemable.%0a---%0a> LFT stands for Less Fungible Token.  This is a token with a set metadata (so is a part of the [[#public|publicnet]]) but the metadata is not fully unique.  For example if TEEF Powder made tokens, they would put TEEFPOWDER in the metadata section (see [[#nft|NFT]]) followed by a unique number.  For example one LFT could be TEEFPOWDER00000012.  As the business owner I know that I created this LFT and have this entry in my own personal database.  This way if someone else created a coin with metadata TEEFPOWDER0958, it wouldn't be valid in my own database since I don't have that number recorded.  For the ones I create, I keep a database and customers can redeem their token for my product. The way LFT's will degrade is the same as an NFT, if they are not traded for 7 years.  If they are traded at least once every 7 years, they will degrade after 49 years.  So when the 49 years is up, the token will be deleted from all databases.  Then there will be a window where you can bid on the token with proof of work.  The highest proof of work submitted with that metadata over a time period, say 1 week, gets to claim that metadata for their chosen public key with corresponding proof of work.  So the morale of the story is, if I create tokens that are good for one of my products, the potential is that they will never go away until they are [[#burn|burned]].%0a
host:1617211089=192.168.1.8
author:1617210894=
diff:1617210894:1617210672:=346,347d345%0a%3c %0a%3c For integrity of the network, each node should verify that the metadata of each submitted token is fully unique.%0a
host:1617210894=192.168.1.8
author:1617210672=
diff:1617210672:1617210633:=329c329%0a%3c DCN is compatible with creating Tokens ([[#lft|LFT's]]) and NFT's as a part of the [[#public|publicnet]].  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This section is mostly for Non-Fungible Token's (NFT's) or less fungible tokens (LFT's) ie: tokens linked to metadata.  In LFT's the metadata can be the same for a set of tokens, for example if they are linked to a company.  The [[#private|privatenet]] is entirely made of fully fungible tokens with no link to anything.%0a---%0a> DCN is compatible with creating Tokens ([[#lft|LFT's]]) and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This section is mostly for Non-Fungible Token's (NFT's) or less fungible tokens (LFT's) ie: tokens linked to metadata.  In LFT's the metadata can be the same for a set of tokens, for example if they are linked to a company.  The [[#private|privatenet]] is entirely made of fully fungible tokens with no link to anything.%0a
host:1617210672=192.168.1.8
author:1617210633=
diff:1617210633:1617210586:=347d346%0a%3c FFT refers to Fully Fungible Tokens and are the native token of the [[#private|privatenet]].%0a
host:1617210633=192.168.1.8
author:1617210586=
diff:1617210586:1617210574:=344c344%0a%3c !!LFT's[[#lft]]%0a---%0a> !!LFT's%0a
host:1617210586=192.168.1.8
author:1617210574=
diff:1617210574:1617210537:=328,329c328,329%0a%3c !!NFT's and Tokens [[#nft]]%0a%3c DCN is compatible with creating Tokens ([[#lft|LFT's]]) and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This section is mostly for Non-Fungible Token's (NFT's) or less fungible tokens (LFT's) ie: tokens linked to metadata.  In LFT's the metadata can be the same for a set of tokens, for example if they are linked to a company.  The [[#private|privatenet]] is entirely made of fully fungible tokens with no link to anything.%0a---%0a> !!NFT's and Tokens%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This section is mostly for Non-Fungible Token's (NFT's) or less fungible tokens (LFT's) ie: tokens linked to metadata.  In LFT's the metadata can be the same for a set of tokens, for example if they are linked to a company.  The [[#private|privatenet]] is entirely made of fully fungible tokens with no link to anything.%0a
host:1617210574=192.168.1.8
author:1617210537=
diff:1617210537:1617209788:=345c345%0a%3c LFT stands for Less Fungible Token.  This is a token with a set metadata (so is a part of the [[#public|publicnet]]) but the metadata is not fully unique.  For example if TEEF Powder made tokens, they would put TEEFPOWDER in the metadata section (see [[#nft|NFT]]) followed by a unique number.  For example one LFT could be TEEFPOWDER00000012.  As the business owner I know that I created this LFT and have this entry in my own personal database.  This way if someone else created a coin with metadata TEEFPOWDER0958, it wouldn't be valid in my own database since I don't have that number recorded.  For the ones I create, I keep a database and customers can redeem their token for my product. The way LFT's will degrade is the same as an NFT, if they are not traded for 7 years.  If they are traded at least once every 7 years, they will degrade after 49 years.  So when the 49 years is up, the token will be deleted from all databases.  Then there will be a window where you can bid on the token with proof of work.  The highest proof of work submitted with that metadata over a time period, say 1 week, gets to claim that metadata for their chosen public key with corresponding proof of work.  So the morale of the story is, if I create tokens that are good for one of my products, the potential is that they will never go away until they are [[#burn|burned]].%0a---%0a> %0a
host:1617210537=192.168.1.8
author:1617209788=
diff:1617209788:1617031708:=343,346d342%0a%3c %0a%3c !!LFT's%0a%3c %0a%3c !!FFT's%0a
host:1617209788=192.168.1.8
author:1617031708=
diff:1617031708:1617031314:=184c184%0a%3c Unlike in [[#ref|RPOW]] where each collectible is valued in terms of how much work it took to create and thus future miners will be able to mine value easier, our collectibles (on the [[#private|privatenet]]) are all of the same value (Fully Fungible Tokens - FFT) because no matter how much processing power they took to create, they took 1 pc week of work to create when they were accepted onto the network.  This means collectibles mined with a ryzen 7 in 2021 would still be worth the same as those mined with a ryzen 29 in the year 2041.  Also since you can't create a super large proof of work like in RPOW and break it into smaller ones, supercomputers or quantum computers won't be able to outcompete smaller miners since they would have to spend their time creating lots of small collectibles just like everyone else.%0a---%0a> Unlike in [[#ref|RPOW]] where each collectible is valued in terms of how much work it took to create and thus future miners will be able to mine value easier, our collectibles (on the [[#private|privatenet]]) are all of the same value (Fully Fungible Tokens - FFT) because no matter how much processing power they took to create, they took 1 pc week of work to create when they were accepted onto the network.  This means collectibles mined with a ryzen 7 in 2021 would still be worth the same as those mined with a ryzen 29 in the year 2041.%0a
host:1617031708=68.231.69.235
author:1617031314=
diff:1617031314:1617031232:=183,185d182%0a%3c %0a%3c Unlike in [[#ref|RPOW]] where each collectible is valued in terms of how much work it took to create and thus future miners will be able to mine value easier, our collectibles (on the [[#private|privatenet]]) are all of the same value (Fully Fungible Tokens - FFT) because no matter how much processing power they took to create, they took 1 pc week of work to create when they were accepted onto the network.  This means collectibles mined with a ryzen 7 in 2021 would still be worth the same as those mined with a ryzen 29 in the year 2041.%0a%3c %0a
host:1617031314=192.168.1.3
author:1617031232=
diff:1617031232:1617031126:=182a183,185%0a> %0a> Unlike in [[#ref|RPOW]] where each collectible is valued in terms of how much work it took to create and thus future miners will be able to mine value easier, our collectibles (on the [[#private|privatenet]]) are all of the same value (Fully Fungible Tokens - FFT) because no matter how much processing power they took to create, they took 1 pc week of work to create when they were accepted onto the network.  This means collectibles mined with a ryzen 7 in 2021 would still be worth the same as those mined with a ryzen 29 in the year 2041.%0a> %0a
host:1617031232=192.168.1.3
author:1617031126=
diff:1617031126:1617030699:=183,184d182%0a%3c %0a%3c Unlike in [[#ref|RPOW]] where each collectible is valued in terms of how much work it took to create and thus future miners will be able to mine value easier, our collectibles (on the [[#private|privatenet]]) are all of the same value (Fully Fungible Tokens - FFT) because no matter how much processing power they took to create, they took 1 pc week of work to create when they were accepted onto the network.  This means collectibles mined with a ryzen 7 in 2021 would still be worth the same as those mined with a ryzen 29 in the year 2041.%0a
host:1617031126=192.168.1.3
author:1617030699=
diff:1617030699:1617005062:=218d217%0a%3c *This section needs to be revjsited and rewritten%0a
host:1617030699=68.231.69.235
author:1617005062=
diff:1617005062:1617004758:=213,215c213%0a%3c Also the new public key should be a hash of the old public key and the new private key.  This way the chain of keys cannot be deleted but must all be kept in order for everything to be verified.  This is important so a bad node couldn't just steal ownership by making false entries.%0a%3c %0a%3c Also notice also that the bit length is different for each collectible.  This is fine and denotes that they were an acceptable bit length at the time that they were accepted on the network.  They all have the same value to the network.%0a---%0a> Notice also that the bit length is different for each collectible.  This is fine and denotes that they were an acceptable bit length at the time that they were accepted on the network.  They all have the same value to the network.%0a
host:1617005062=68.231.69.235
author:1617004758=
diff:1617004758:1617004275:=310,311d309%0a%3c %0a%3c Since publicnet collectibles do not face deterioration, we need to create a way to prevent dust spam, trading the collectible back and forth for not reason but to spam the network.  So transferring publicnet collectibles should incur a small fee by the node you send the transaction to, to prevent dust spam.  Privatenet collectible transfers need not incur a network fee for transfers since a small bit of the value is burned every transfer.%0a
host:1617004758=68.231.69.235
author:1617004275=
diff:1617004275:1617003991:=309c309%0a%3c In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabbat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabbat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabbat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "public bid" (say a day or week) where the largest proof of work submitted wins the ownership of the collectible, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a---%0a> In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabbat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabbat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabbat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" (say a day or week) where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a
host:1617004275=68.231.69.235
author:1617003991=
diff:1617003991:1617003938:=309c309%0a%3c In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabbat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabbat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabbat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" (say a day or week) where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a---%0a> In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabbat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabbat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" (say a day or week) where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a
host:1617003991=192.168.1.3
author:1617003938=
diff:1617003938:1617003902:=309c309%0a%3c In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabbat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabbat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" (say a day or week) where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a---%0a> In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" (say a day or week) where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a
host:1617003938=192.168.1.3
author:1617003902=
diff:1617003902:1617003642:=303c303%0a%3c !!!!Sabbat[[#sabbat]]%0a---%0a> !!!!Sabat[[#sabat]]%0a
host:1617003902=192.168.1.3
author:1617003642=
diff:1617003642:1617003593:=309c309%0a%3c In general, deletion can happen on the [[#private|privatenet]] and [[#public|publicnet]].  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" (say a day or week) where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a---%0a> In general deletion can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" (say a day or week) where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a
host:1617003642=192.168.1.3
author:1617003593=
diff:1617003593:1617003561:=308c308%0a%3c !!!!Publicnet considerations: Jubilee[[#jubilee]]%0a---%0a> !!!!Publicnet considerations [[#jubilee]]%0a
host:1617003593=192.168.1.3
author:1617003561=
diff:1617003561:1617003363:=308,309c308,309%0a%3c !!!!Publicnet considerations [[#jubilee]]%0a%3c In general deletion can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have sabat; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a sabat and jubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the sabat).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attempt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" (say a day or week) where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node [[#requirements|requirements]].%0a---%0a> !!!!Publicnet considerations%0a> In general deletion can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have jubilee; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a jubilee and superjubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the jubilee).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a super jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attepmt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node requirements.%0a
host:1617003561=192.168.1.3
author:1617003363=
diff:1617003363:1617003196:=303c303%0a%3c !!!!Sabat[[#sabat]]%0a---%0a> !!!!Jubilee[[#jubilee]]%0a
host:1617003363=68.231.69.235
author:1617003196=
diff:1617003196:1617002877:=309c309%0a%3c In general deletion can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not be deleted at all on the publicnet (privatenet collectibles will always deteriorate and have jubilee; thus limited lifespan).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee to keep hosting your collectible forever, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty (we can't pay every node forever to maintain consensus!), we need to have the publicnet assets face deletion.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a jubilee and superjubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the jubilee).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a super jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attepmt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node requirements.%0a---%0a> In general deterioration can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not deteriorate at all on the publicnet (privatenet collectibles will always deteriorate).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee for this, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty, we need to have the publicnet assets face a jubilee.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a jubilee and superjubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the jubilee).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a super jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attepmt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node requirements.%0a
host:1617003196=68.231.69.235
author:1617002877=
diff:1617002877:1617002387:=309c309%0a%3c In general deterioration can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not deteriorate at all on the publicnet (privatenet collectibles will always deteriorate).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee for this, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty, we need to have the publicnet assets face a jubilee.  The way publicnet assets will be, is that they will not face value deterioration, but they will face a jubilee and superjubilee.  They must be transferred to a new public key once every 7 years or they will be deleted (which is the jubilee).  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years (a super jubilee).  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of the publicnet collectible.  The exact time that the asset is scheduled to be deleted must be fully public knowlege.  Bad nodes could attepmt to take control of any expired assets, so the people wanting to claim ownership must boadcast far and wide to all nodes their attempt to claim the asset at that time.  Also there could be a period of time to send in a "sealed bid" where the largest proof of work wins the ownership at that time, not just the first one to submit any proof of work that fulfills node requirements.%0a---%0a> In general deterioration can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not deteriorate at all on the publicnet (privatenet collectibles will always deteriorate).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee for this, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty, we need to have the publicnet assets face a jubilee.  The way publicnet assets will be, is that they must be transferred to a new public key once every 7 years or they will be deleted.  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years.  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of something.  Exact times that the asset will be deleted must be fully public knowlege.%0a
host:1617002877=68.231.69.235
author:1617002387=
diff:1617002387:1617002259:=309c309%0a%3c In general deterioration can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not deteriorate at all on the publicnet (privatenet collectibles will always deteriorate).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee for this, but other nodes might refuse to host them after a certain period since they aren't getting paid.  Because of this uncertainty, we need to have the publicnet assets face a jubilee.  The way publicnet assets will be, is that they must be transferred to a new public key once every 7 years or they will be deleted.  If they are transfered at least once every 7 years, they will be active for 7x7 years or 49 years.  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network after it is deleted.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of something.  Exact times that the asset will be deleted must be fully public knowlege.%0a---%0a> In general deterioration can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not deteriorate at all on the publicnet (privatenet collectibles will always deteriorate).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee for this and other nodes might refuse to host them.  Because of this uncertanty, we need to have the publicnet assets face a jubilee.  The way publicnet assets will be that they must be transferred to a new public key once every 7 years or they will be deleted.  If they are transfered at least every 7 years, they will be active for 7x7 years or 49 years.  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of something.  Exact times that the asset will be deleted must be fully public knowlege%0a
host:1617002387=192.168.1.3
author:1617002259=
diff:1617002259:1617002223:=307,309d306%0a%3c %0a%3c !!!!Publicnet considerations%0a%3c In general deterioration can happen on the privatenet and publicnet.  However some might want their collectibles to last longer and not deteriorate at all on the publicnet (privatenet collectibles will always deteriorate).  In this case this is a premium service and you would likely have to pay your hosting node a recurrent fee for this and other nodes might refuse to host them.  Because of this uncertanty, we need to have the publicnet assets face a jubilee.  The way publicnet assets will be that they must be transferred to a new public key once every 7 years or they will be deleted.  If they are transfered at least every 7 years, they will be active for 7x7 years or 49 years.  After that period, they will be deleted altogether.  You would have to resubmit the asset with a new public key to get it reinstated onto the network.  What this means is that every 49 years a different person would get the opportunity to try to claim ownership of something.  Exact times that the asset will be deleted must be fully public knowlege%0a
host:1617002259=192.168.1.3
author:1617002223=
diff:1617002223:1617001485:=302a303,304%0a> %0a> %0a
host:1617002223=192.168.1.3
author:1617001485=
diff:1617001485:1617001447:=387c387%0a%3c # Can I send a collectible over the network to someone elses public key, so that I don't have to send a bunch of private keys over encrypted communication, one for each collectible I send?  Basically, can I just tell the network that a public key now owns all of my 1000 collectibles?%0a---%0a> # Can I send a collectible over the network to someone elses public key, so that I don't have to send a bunch of private keys over encrypted communication, one for each collectible I send?  Basically, can I just tell the network that a public key now owns say 1000 collectibles?%0a
host:1617001485=68.231.69.235
author:1617001447=
diff:1617001447:1617001287:=389c389%0a%3c Yes, this is called [[#join|"joining"]] (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be forever in the [[#public|publicnet]], since they can no longer be traded with their own private key and must be signed for by the current public key owner. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a---%0a> Yes, this is called [[#join|"joining"]] (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be traded together, and not individually since they can no longer be broken apart since the private key for each collectible is unknown. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a
host:1617001447=68.231.69.235
author:1617001287=
diff:1617001287:1616995052:=389c389%0a%3c Yes, this is called [[#join|"joining"]] (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be traded together, and not individually since they can no longer be broken apart since the private key for each collectible is unknown. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a---%0a> Yes, this is called "joining" (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be traded together, and not individually since they can no longer be broken apart since the private key for each collectible is unknown. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a
host:1617001287=68.231.69.235
author:1616995052=
diff:1616995052:1616995013:=389c389%0a%3c Yes, this is called "joining" (see also [[#ref|RPOW]]) where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be traded together, and not individually since they can no longer be broken apart since the private key for each collectible is unknown. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a---%0a> Yes, this is called "joining" where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be traded together, and not individually since they can no longer be broken apart since the private key for each collectible is unknown. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a
host:1616995052=68.231.69.235
author:1616995013=
diff:1616995013:1616994967:=367c367%0a%3c !!References [[#ref]]%0a---%0a> !!References%0a
host:1616995013=68.231.69.235
author:1616994967=
diff:1616994967:1616994948:=389c389%0a%3c Yes, this is called "joining" where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be traded together, and not individually since they can no longer be broken apart since the private key for each collectible is unknown. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a---%0a> Yes,this is called "joining" where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be traded together, and not individually since they can no longer be broken apart since the private key for each collectible is unknown. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a
host:1616994967=68.231.69.235
author:1616994948=
diff:1616994948:1616994213:=384,389d383%0a%3c %0a%3c !!FAQ%0a%3c %0a%3c # Can I send a collectible over the network to someone elses public key, so that I don't have to send a bunch of private keys over encrypted communication, one for each collectible I send?  Basically, can I just tell the network that a public key now owns say 1000 collectibles?%0a%3c %0a%3c Yes,this is called "joining" where you can join proof of work collectibles to a public key that was not linked to the collectibles original proof of work.  This is discouraged however because 1. It makes the collectibles more vulnerable since if the one public key were to be cracked, then all the joined collectibles would also be stolen.  2. These joined collectibles would have to be traded together, and not individually since they can no longer be broken apart since the private key for each collectible is unknown. 3. It makes them easier to link to an individual since multiple collectibles are linked to one public key. 4. It would be in the publicnet which will likely cost more to host by a node, since they do not degrade over time; unlike the [[#private|privatenet]].%0a
host:1616994948=68.231.69.235
author:1616994213=
diff:1616994213:1616994162:=380,381d379%0a%3c %0a%3c [[https://nakamotoinstitute.org/finney/rpow/|RPOW]]%0a
host:1616994213=68.231.69.235
author:1616994162=
diff:1616994162:1616934804:=378,379d377%0a%3c %0a%3c [[https://nakamotoinstitute.org/shelling-out/|History of Collectibles]]%0a
host:1616994162=68.231.69.235
author:1616934804=
diff:1616934804:1616934672:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This section is mostly for Non-Fungible Token's (NFT's) or less fungible tokens (LFT's) ie: tokens linked to metadata.  In LFT's the metadata can be the same for a set of tokens, for example if they are linked to a company.  The [[#private|privatenet]] is entirely made of fully fungible tokens with no link to anything.%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This section is mostly for Non-Fungible Token's (NFT's) ie: tokens linked to metadata.%0a
host:1616934804=192.168.1.8
author:1616934672=
diff:1616934672:1616934605:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This section is mostly for Non-Fungible Token's (NFT's) ie: tokens linked to metadata.%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This is mostly for Non-Fungible Token's (NFT's).%0a
host:1616934672=192.168.1.8
author:1616934605=
diff:1616934605:1616934304:=322,323d321%0a%3c %0a%3c If the public key already exists in the [[#private|privatenet]] then it would be deleted there and moved to the [[#public|publicnet]] when it is linked to metadata.  Of course the public key would need to be signed for by the owner of the corresponding private key to verify the transfer.%0a
host:1616934605=192.168.1.8
author:1616934304=
diff:1616934304:1616934256:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day or even 1 hour of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This is mostly for Non-Fungible Token's (NFT's).%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This is mostly for Non-Fungible Token's (NFT's).%0a
host:1616934304=192.168.1.8
author:1616934256=
diff:1616934256:1616934107:=325,327c325%0a%3c Notice in line 2 there are two keys.  This is because the collectible has transferred ownership and there is a new owner.  In this case there is the IPFS of the data of the token/NFT that the digital collectible is referring to, and the IPFS doesn't change with a change in ownership since it is immutable.%0a%3c %0a%3c Another option for Line 2 is that it is a [[#multikey|multi-key asset]] which requires signatures of all of the keys listed to sign for it.  In general though, the last key listed is the one used to sign for the asset for the next transfer.%0a---%0a> Notice in line 2 there are two keys.  This is because the collectible has transferred ownership and there is a new owner.  In this case there is the IPFS of the data of the token/NFT that the digital collectible is referring to and it doesn't change with a change in ownership.%0a331c329%0a%3c !!!!Multi-key signature [[#multikey]]%0a---%0a> !!!!Multi-key signature%0a
host:1616934256=192.168.1.8
author:1616934107=
diff:1616934107:1616934046:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata or put the token in the publicnet to have tokens that you can distribute at will.  This is mostly for Non-Fungible Token's (NFT's).%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata/put the token in the publicnet to have tokens that you can distribute at will.  This is mostly for Non-Fungible Token's (NFT's).%0a
host:1616934107=192.168.1.8
author:1616934046=
diff:1616934046:1616934001:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks (or even just different sections) of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata/put the token in the publicnet to have tokens that you can distribute at will.  This is mostly for Non-Fungible Token's (NFT's).%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata/put the token in the publicnet to have tokens that you can distribute at will.  This is mostly for Non-Fungible Token's (NFT's).%0a
host:1616934046=192.168.1.8
author:1616934001=
diff:1616934001:1616933793:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].  Also I want to say that everything in the [[#private|privatenet]] is a token so you really don't need to add metadata/put the token in the publicnet to have tokens that you can distribute at will.  This is mostly for Non-Fungible Token's (NFT's).%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].%0a
host:1616934001=192.168.1.8
author:1616933793=
diff:1616933793:1616932548:=325c325,326%0a%3c Notice in line 2 there are two keys.  This is because the collectible has transferred ownership and there is a new owner.  In this case there is the IPFS of the data of the token/NFT that the digital collectible is referring to and it doesn't change with a change in ownership.%0a---%0a> Notice in line 2 there are 2 keys.  This is because the collectible has transferred ownership and there is a new owner.  In this case, the IPNS of the first key needs to be deprecated.  The IPNS needs to be changed, which is done by signing with the key, and this changed IPNS entry now needs to refer to the IPNS entry of the new public key.  The IPNS of the second key is the currently valid one and all relevant info should match that of the first IPNS that is now deprecated.%0a> %0a327c328%0a%3c A digital collectible on the network can be linked to a real world asset by using a third party metadata service like IPFS to link the public key of the collectible to metadata and/or by using memo's in the [[#public|publicnet]].  Metadata can be added to the DCN ledger but many would probably want to use a third party service like IPNS to keep records straightforward.  In the case of using IPNS, the metadata of the real asset would be listed in the IPFS database, and the link to the IPFS entry would be added to the [[#public|publicnet]].%0a---%0a> A digital collectible on the network can be linked to a real world asset by using a third party metadata service like IPFS/IPNS to link the public key of the collectible to metadata and/or by using memo's in the [[#public|publicnet]].  Metadata can be added to the DCN ledger but many would probably want to use a third party service like IPNS to keep records straightforward.  In the case of using IPNS, the metadata of the real asset would be listed in the IPNS database, and the link to the IPNS entry would be added to the [[#public|publicnet]].%0a
host:1616933793=192.168.1.8
author:1616932548=
diff:1616932548:1616932353:=324,325d323%0a%3c %0a%3c Notice in line 2 there are 2 keys.  This is because the collectible has transferred ownership and there is a new owner.  In this case, the IPNS of the first key needs to be deprecated.  The IPNS needs to be changed, which is done by signing with the key, and this changed IPNS entry now needs to refer to the IPNS entry of the new public key.  The IPNS of the second key is the currently valid one and all relevant info should match that of the first IPNS that is now deprecated.%0a
host:1616932548=192.168.1.8
author:1616932353=
diff:1616932353:1616932280:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc) and they would be placed in the [[#public|publicnet]].%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc).%0a
host:1616932353=192.168.1.8
author:1616932280=
diff:1616932280:1616931456:=322,323d321%0a%3c %0a%3c Attach:realasset.png%0a
host:1616932280=192.168.1.8
author:1616931456=
diff:1616931456:1616931295:=324c324%0a%3c A digital collectible on the network can be linked to a real world asset by using a third party metadata service like IPFS/IPNS to link the public key of the collectible to metadata and/or by using memo's in the [[#public|publicnet]].  Metadata can be added to the DCN ledger but many would probably want to use a third party service like IPNS to keep records straightforward.  In the case of using IPNS, the metadata of the real asset would be listed in the IPNS database, and the link to the IPNS entry would be added to the [[#public|publicnet]].%0a---%0a> A digital collectible on the network can be linked to a real world asset by either using a third party metadata service like IPFS/IPNS to link the public key of the collectible to metadata, or by using memo's in the [[#public|publicnet]].%0a
host:1616931456=192.168.1.8
author:1616931295=
diff:1616931295:1616931050:=326,327d325%0a%3c !!!!Multi-key signature%0a%3c A real asset can be linked to multiple digital collectibles, where each digital collectible will need to be signed for in order to sign for the real asset.  These multiple signatures required is a multi-key sig.  The uses for this can be that multiple people are all needed to sign for something, or just to enhance security that if one of the keys was broken by hacking, the hacker cannot sign without hacking the other keys as well.%0a
host:1616931295=192.168.1.8
author:1616931050=
diff:1616931050:1616931019:=324c324%0a%3c A digital collectible on the network can be linked to a real world asset by either using a third party metadata service like IPFS/IPNS to link the public key of the collectible to metadata, or by using memo's in the [[#public|publicnet]].%0a---%0a> A digital collectible on the network can be linked to a real world asset by either using a third party metadata service like IPFS/IPNS or by using memo's in the [[#public|publicnet]].%0a
host:1616931050=192.168.1.8
author:1616931019=
diff:1616931019:1616930941:=324c324%0a%3c A digital collectible on the network can be linked to a real world asset by either using a third party metadata service like IPFS/IPNS or by using memo's in the [[#public|publicnet]].%0a---%0a> A digital collectible on the network can be linked to a real world asset by either using a third party metadata service like IPFS/IPNS or by using memo's in the [[#publicnet|publicnet]].%0a
host:1616931019=192.168.1.8
author:1616930941=
diff:1616930941:1616923433:=322,324d321%0a%3c %0a%3c !!!Tokens of real assets%0a%3c A digital collectible on the network can be linked to a real world asset by either using a third party metadata service like IPFS/IPNS or by using memo's in the [[#publicnet|publicnet]].%0a
host:1616930941=192.168.1.8
author:1616923433=
diff:1616923433:1616922975:=17c17%0a%3c A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://bitcointalk.org/index.php?topic=5307018.new#new|bitcointalk]]) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's[[#mine|(*)]] or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection by customers.  %0a---%0a> A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's[[#mine|(*)]] or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection by customers.  %0a
host:1616923433=192.168.1.8
author:1616922975=
diff:1616922975:1616921786:=353,354d352%0a%3c %0a%3c Registering a public key with IPNS [[https://docs.ipfs.io/concepts/ipns/|#]]%0a
host:1616922975=192.168.1.8
author:1616921786=
diff:1616921786:1616901373:=17c17%0a%3c A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's[[#mine|(*)]] or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection by customers.  %0a---%0a> A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's[[#mine|*]] or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection by customers.  %0a
host:1616921786=192.168.1.8
author:1616901373=
diff:1616901373:1616900993:=306c306%0a%3c Another thing that could be done is a collectible that has not been transferred for 7 years, would be deleted, no matter how much value it has left.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to use and not hoard collectibles.  Software could favor old collectibles to be spent from a persons stash before new ones, so that a person always maintains a fresh stock of collectibles.%0a---%0a> Another thing that could be done is a collectible that has not been transferred for 7 years, would be deleted, no matter how much value it has left.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to use and not hoard collectibles.  Software could favor old collectibles to be spent before new ones so that a person always maintains a fresh stock of collectibles.%0a
host:1616901373=68.231.69.235
author:1616900993=
diff:1616900993:1616900934:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece of value is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc).%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc).%0a
host:1616900993=68.231.69.235
author:1616900934=
diff:1616900934:1616893255:=324c324%0a%3c [[#contract|Contracts]] allow for Decentralized Finance on the DCN.  Since each piece of value has a unique code, it is easy to contractually obligate certain collectibles to someone at a set time or if conditions are met.  The node will execute the contract such as locking collectibles.  However the private key for each collectible are needed to be able to transfer ownership so there may need to be custodial services for private keys in contracts.%0a---%0a> [[#contract|Contracts]] allow for Decentralized Finance on the DCN.  Since each piece of money has a unique code, it is easy to contractually obligate certain collectibles to someone at a set time or if conditions are met.  The node will execute the contract such as locking collectibles.  However the private key for each collectible are needed to be able to transfer ownership so there may need to be custodial services for private keys in contracts.%0a
host:1616900934=68.231.69.235
author:1616893255=
diff:1616893255:1616892891:=351,352d350%0a%3c %0a%3c Beginners guide to GNFS [[http://gilchrist.ca/jeff/factoring/nfs_beginners_guide.html|#]]%0a
host:1616893255=192.168.1.8
author:1616892891=
diff:1616892891:1616429286:=349,350d348%0a%3c %0a%3c Getting started with factoring [[https://www.mersenneforum.org/showthread.php?t=23078|#]]%0a
host:1616892891=192.168.1.8
author:1616429286=
diff:1616429286:1616429051:=324c324%0a%3c [[#contract|Contracts]] allow for Decentralized Finance on the DCN.  Since each piece of money has a unique code, it is easy to contractually obligate certain collectibles to someone at a set time or if conditions are met.  The node will execute the contract such as locking collectibles.  However the private key for each collectible are needed to be able to transfer ownership so there may need to be custodial services for private keys in contracts.%0a---%0a> %0a
host:1616429286=192.168.1.8
author:1616429051=
diff:1616429051:1616427850:=322,324d321%0a%3c %0a%3c !!DeFi%0a%3c %0a
host:1616429051=192.168.1.8
author:1616427850=
diff:1616427850:1616427398:=321c321%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of [[#length|1 week]]) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc).%0a---%0a> DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of 1 week) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc).%0a
host:1616427850=192.168.1.8
author:1616427398=
diff:1616427398:1616427335:=10c10%0a%3c (:Archive:[[https://web.archive.org/web/20210212011550/http://www.naturevault.org/wiki/pmwiki.php/NatureVault/DigitalCollectibleNetwork|Archive.org]], [[https://archive.is/JUdpm|Archive.is]], [[https://archive.is/1UeCR|(OLD)Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|(OLD)Archive.org]]:)%0a---%0a> (:Archive:[[https://web.archive.org/web/20210212011550/http://www.naturevault.org/wiki/pmwiki.php/NatureVault/DigitalCollectibleNetwork|Archive.org]], [[https://archive.is/isvCI|Archive.is]], [[https://archive.is/1UeCR|(OLD)Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|(OLD)Archive.org]]:)%0a
host:1616427398=192.168.1.8
author:1616427335=
diff:1616427335:1614632903:=320,321d319%0a%3c !!NFT's and Tokens%0a%3c DCN is compatible with creating Tokens and NFT's.  Since it is a collectible network, each piece is unique and can be attributed to a real world product or be distributed as a token.  The only catch is you have to mine every collectible you want to distribute.  Different forks of the DCN could have a low PoW requirement (say 1 day of a computer mining instead of 1 week) to facilitate token creation.  So "gas" can be created by each person for very little effort.  There would likely still be a small fee imposed by the nodes to accept your collectibles (Tokens or NFT's etc).%0a
host:1616427335=192.168.1.8
author:1614632903=
diff:1614632903:1613980444:=338,339d337%0a%3c %0a%3c GNFS polynomial selection on GPU, sieving on CPU, and post processing on clusters for multithreaded linear algebra (post #21) [[https://forums.anandtech.com/threads/nfs-home-needs-some-crunch.2248278/|#]]%0a
host:1614632903=192.168.1.8
author:1613980444=
diff:1613980444:1613979027:=9c9%0a%3c (:Also:[[Chromaton]], [[Monaton]]:)%0a---%0a> (:Also:[[Chromaton]]:)%0a
host:1613980444=192.168.1.8
author:1613979027=
diff:1613979027:1613894711:=341d340%0a%3c XRP trusted ledger consensus [[https://arxiv.org/pdf/1802.07242.pdf|#]]%0a
host:1613979027=192.168.1.8
author:1613894711=
diff:1613894711:1613734817:=338,339d337%0a%3c %0a%3c PoS vs PoW [[https://etherplan.com/2019/10/07/why-proof-of-stake-is-less-secure-than-proof-of-work/9077/|#]]%0a
host:1613894711=68.2.112.187
author:1613734817=
diff:1613734817:1613734790:=41c41%0a%3c Mining does not need an internet connection and miners create and complete their own challenges that meet the [[#requirements|requirements]] of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.  GPU's can help support the CPU though and speed it up moderately when working in conjunction.%0a---%0a> Mining does not need an internet connection and miners create and complete their own challenges that meet the [[#requirements|requirements]] of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.  GPU's can help support the CPU though and speed it up moderately when working in conjunction%0a
host:1613734817=192.168.1.8
author:1613734790=
diff:1613734790:1613734749:=17c17%0a%3c A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's[[#mine|*]] or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection by customers.  %0a---%0a> A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection by customers.  %0a
host:1613734790=192.168.1.8
author:1613734749=
diff:1613734749:1613194684:=40,41c40,41%0a%3c !!!Overview [[#mine]]%0a%3c Mining does not need an internet connection and miners create and complete their own challenges that meet the [[#requirements|requirements]] of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.  GPU's can help support the CPU though and speed it up moderately when working in conjunction%0a---%0a> !!!Overview%0a> Mining does not need an internet connection and miners create and complete their own challenges that meet the [[#requirements|requirements]] of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.%0a
host:1613734749=192.168.1.8
author:1613194684=
diff:1613194684:1613149751:=96c96%0a%3c In order to prevent hacked apps bieng used where users can double spend, recieving app would verify the integrity of the sending app by verifying its hash.%0a---%0a> In order to prevent hacked apps bieng used where users can d%0a
host:1613194684=192.168.1.4
author:1613149751=
diff:1613149751:1613149243:=95,96d94%0a%3c %0a%3c In order to prevent hacked apps bieng used where users can d%0a
host:1613149751=68.2.112.187
author:1613149243=
diff:1613149243:1613149182:=94c94%0a%3c In addition to [[#physical|physical collectibles]] for offline trading, another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require an internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an app intermediary does.  For example, You could send a collectible to your phone app.  Now the phone, when online, submits it to the network with a key change that only it knows.  Now the phone has the new private key offline encrypted and you don't know what it is.  Now when you transfer to a friend offline via Bluetooth for example, your app signs the key over to your friends app.  Now both apps hold the (encrypted) private key but the app programming now eliminates the original app from double spending.  Now your friend can do the same process to someone else.  To cash out from your app, when you do get online, ask the app to give the collectibles to you (via a QR code or something) and now once that is done they can no longer be traded in the app itself without resending them to the app again and the app changing the private key again to something only it knows.%0a---%0a> Another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require an internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an app intermediary does.  For example, You could send a collectible to your phone app.  Now the phone, when online, submits it to the network with a key change that only it knows.  Now the phone has the new private key offline encrypted and you don't know what it is.  Now when you transfer to a friend offline via Bluetooth for example, your app signs the key over to your friends app.  Now both apps hold the (encrypted) private key but the app programming now eliminates the original app from double spending.  Now your friend can do the same process to someone else.  To cash out from your app, when you do get online, ask the app to give the collectibles to you (via a QR code or something) and now once that is done they can no longer be traded in the app itself without resending them to the app again and the app changing the private key again to something only it knows.%0a
host:1613149243=192.168.1.4
author:1613149182=
diff:1613149182:1613148831:=80d79%0a%3c !!!!Physical collectibles[[#physical]]%0a
host:1613149182=68.2.112.187
author:1613148831=
diff:1613148831:1613148791:=80c80%0a%3c If a miner is well trusted, another thing they could do is sell physical collectibles.  The way this should be done is a trusted miner randomly and securely generates a private key, public key, and completes the mining challenge.  They then should submit the collectible to trusted nodes to be registered.  However the private key could be saved physically on a paper or QR code or something and this hidden inside a physical item such as a ceramic disk (like a poker chip) or other item that must be destroyed to retrieve the code.  Of course the miner could potentially "spend" the collectible without your knowledge so a miner would have to develop a good reputation to be trusted with this. Also an [[#jubilee|expiration date of 7 years]] after it was registered should be put on the physical collectible as a "trade by" date.%0a---%0a> If a miner is well trusted, another thing they could do is sell physical collectibles.  The way this should be done is a trusted miner randomly and securely generates a private key, public key, and completes the mining challenge.  They then should submit the collectible to trusted nodes to be registered.  However the private key could be saved physically on a paper or QR code or something and this hidden inside a physical item such as a ceramic disk (like a poker chip) or other item that must be destroyed to retrieve the code.  Of course the miner could potentially "spend" the collectible without your knowledge so a miner would have to develop a good reputation to be trusted with this. Also an [[#value|expiration date of 7 years]] after it was registered should be put on the physical collectible as a "trade by" date.%0a
host:1613148831=192.168.1.4
author:1613148791=
diff:1613148791:1613148754:=302c302%0a%3c !!!!Jubilee[[#jubilee]]%0a---%0a> !!!!Jubilee%0a
host:1613148791=192.168.1.4
author:1613148754=
diff:1613148754:1613112919:=80c80%0a%3c If a miner is well trusted, another thing they could do is sell physical collectibles.  The way this should be done is a trusted miner randomly and securely generates a private key, public key, and completes the mining challenge.  They then should submit the collectible to trusted nodes to be registered.  However the private key could be saved physically on a paper or QR code or something and this hidden inside a physical item such as a ceramic disk (like a poker chip) or other item that must be destroyed to retrieve the code.  Of course the miner could potentially "spend" the collectible without your knowledge so a miner would have to develop a good reputation to be trusted with this. Also an [[#value|expiration date of 7 years]] after it was registered should be put on the physical collectible as a "trade by" date.%0a---%0a> If a miner is well trusted, another thing they could do is sell physical collectibles.  The way this should be done is a trusted miner randomly and securely generates a private key, public key, and completes the mining challenge.  They then should submit the collectible to trusted nodes to be registered.  However the private key could be saved physically on a paper or QR code or something and this hidden inside a physical item such as a ceramic disk (like a poker chip) or other item that must be destroyed to retrieve the code.  Of course the miner could potentially "spend" the collectible without your knowledge so a miner would have to develop a good reputation to be trusted with this.%0a
host:1613148754=192.168.1.4
author:1613112919=
diff:1613112919:1613112831:=303c303%0a%3c Another thing that could be done is a collectible that has not been transferred for 7 years, would be deleted, no matter how much value it has left.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to use and not hoard collectibles.  Software could favor old collectibles to be spent before new ones so that a person always maintains a fresh stock of collectibles.%0a---%0a> Another thing that could be done is a collectible that has not been transferred for 7 years, would be deleted.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to use and not hoard collectibles.  Software could favor old collectibles to be spent before new ones so that a person always maintains a fresh stock of collectibles.%0a
host:1613112919=192.168.1.4
author:1613112831=
diff:1613112831:1613112615:=303c303%0a%3c Another thing that could be done is a collectible that has not been transferred for 7 years, would be deleted.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to use and not hoard collectibles.  Software could favor old collectibles to be spent before new ones so that a person always maintains a fresh stock of collectibles.%0a---%0a> Another thing that could be done is a collectible that has not been transferred for 7 years, would also be deleted.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to use and not hoard collectibles.  Software could favor old collectibles to be spent before new ones so that a person always maintains a fresh stock of collectibles.%0a
host:1613112831=192.168.1.4
author:1613112615=
diff:1613112615:1613112576:=292c292%0a%3c !!!Value modulation[[#value]]%0a---%0a> !!!Value [[#value]]%0a
host:1613112615=192.168.1.4
author:1613112576=
diff:1613112576:1613112545:=299c299%0a%3c This will also help prevent [[https://www.officialhacker.com/dust-attack/|dust attacks]] where collectibles are transferred back and forth for no reason other than overload the network.%0a---%0a> This will also help prevent [[https://www.officialhacker.com/dust-attack/|dust attacks]] where collectibles are transfered back and forth for no reason other than overload the network.%0a
host:1613112576=192.168.1.4
author:1613112545=
diff:1613112545:1613112009:=299c299%0a%3c This will also help prevent [[https://www.officialhacker.com/dust-attack/|dust attacks]] where collectibles are transfered back and forth for no reason other than overload the network.%0a---%0a> This will also help prevent [[https://www.officialhacker.com/dust-attack/|dust attacks]].%0a
host:1613112545=192.168.1.4
author:1613112009=
diff:1613112009:1613092592:=87c87%0a%3c !!!!Private keys%0a---%0a> !!!!Chromaton%0a
host:1613112009=192.168.1.4
author:1613092592=
diff:1613092592:1613092567:=10c10%0a%3c (:Archive:[[https://web.archive.org/web/20210212011550/http://www.naturevault.org/wiki/pmwiki.php/NatureVault/DigitalCollectibleNetwork|Archive.org]], [[https://archive.is/isvCI|Archive.is]], [[https://archive.is/1UeCR|(OLD)Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|(OLD)Archive.org]]:)%0a---%0a> (:Archive:[[https://web.archive.org/web/20210212011550/http://www.naturevault.org/wiki/pmwiki.php/NatureVault/DigitalCollectibleNetwork|Archive.org]], [[https://archive.is/wip/isvCI|Archive.is]], [[https://archive.is/1UeCR|(OLD)Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|(OLD)Archive.org]]:)%0a
host:1613092592=192.168.1.8
author:1613092567=
diff:1613092567:1613092521:=10c10%0a%3c (:Archive:[[https://web.archive.org/web/20210212011550/http://www.naturevault.org/wiki/pmwiki.php/NatureVault/DigitalCollectibleNetwork|Archive.org]], [[https://archive.is/wip/isvCI|Archive.is]], [[https://archive.is/1UeCR|(OLD)Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|(OLD)Archive.org]]:)%0a---%0a> (:Archive:[[https://web.archive.org/web/20210212011550/http://www.naturevault.org/wiki/pmwiki.php/NatureVault/DigitalCollectibleNetwork|Archive.org]]. [[https://archive.is/1UeCR|(OLD)Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|(OLD)Archive.org]]:)%0a
host:1613092567=192.168.1.8
author:1613092521=
diff:1613092521:1613092294:=10c10%0a%3c (:Archive:[[https://web.archive.org/web/20210212011550/http://www.naturevault.org/wiki/pmwiki.php/NatureVault/DigitalCollectibleNetwork|Archive.org]]. [[https://archive.is/1UeCR|(OLD)Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|(OLD)Archive.org]]:)%0a---%0a> (:Archive:[[https://archive.is/1UeCR|Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|Archive.org]]:)%0a
host:1613092521=192.168.1.8
author:1613092294=
diff:1613092294:1613092119:=93c93%0a%3c Another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require an internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an app intermediary does.  For example, You could send a collectible to your phone app.  Now the phone, when online, submits it to the network with a key change that only it knows.  Now the phone has the new private key offline encrypted and you don't know what it is.  Now when you transfer to a friend offline via Bluetooth for example, your app signs the key over to your friends app.  Now both apps hold the (encrypted) private key but the app programming now eliminates the original app from double spending.  Now your friend can do the same process to someone else.  To cash out from your app, when you do get online, ask the app to give the collectibles to you (via a QR code or something) and now once that is done they can no longer be traded in the app itself without resending them to the app again and the app changing the private key again to something only it knows.%0a---%0a> Another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require an internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an app intermediary does.  For example, You could send a collectible to your phone app.  Now the phone, when online, submits it to the network with a key change that only it knows.  Now the phone has the new private key offline encrypted.  Now when you transfer to a friend offline via Bluetooth for example, your app signs the key over to your friends app.  Now both apps hold the (encrypted) private key but the app programming now eliminates the original app from double spending.  Now your friend can do the same process to someone else.  To cash out from your app, when you do get online, ask the app to give the collectibles to you (via a QR code or something) and now once that is done they can no longer be traded in the app itself without resending them to the app again and the app changing the private key again to something only it knows.%0a
host:1613092294=192.168.1.8
author:1613092119=
diff:1613092119:1613092098:=93c93%0a%3c Another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require an internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an app intermediary does.  For example, You could send a collectible to your phone app.  Now the phone, when online, submits it to the network with a key change that only it knows.  Now the phone has the new private key offline encrypted.  Now when you transfer to a friend offline via Bluetooth for example, your app signs the key over to your friends app.  Now both apps hold the (encrypted) private key but the app programming now eliminates the original app from double spending.  Now your friend can do the same process to someone else.  To cash out from your app, when you do get online, ask the app to give the collectibles to you (via a QR code or something) and now once that is done they can no longer be traded in the app itself without resending them to the app again and the app changing the private key again to something only it knows.%0a---%0a> Another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require a internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an app intermediary does.  For example, You could send a collectible to your phone app.  Now the phone, when online, submits it to the network with a key change that only it knows.  Now the phone has the new private key offline encrypted.  Now when you transfer to a friend offline via Bluetooth for example, your app signs the key over to your friends app.  Now both apps hold the (encrypted) private key but the app programming now eliminates the original app from double spending.  Now your friend can do the same process to someone else.  To cash out from your app, when you do get online, ask the app to give the collectibles to you (via a QR code or something) and now once that is done they can no longer be traded in the app itself without resending them to the app again and the app changing the private key again to something only it knows.%0a
host:1613092119=192.168.1.8
author:1613092098=
diff:1613092098:1613088144:=93c93%0a%3c Another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require a internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an app intermediary does.  For example, You could send a collectible to your phone app.  Now the phone, when online, submits it to the network with a key change that only it knows.  Now the phone has the new private key offline encrypted.  Now when you transfer to a friend offline via Bluetooth for example, your app signs the key over to your friends app.  Now both apps hold the (encrypted) private key but the app programming now eliminates the original app from double spending.  Now your friend can do the same process to someone else.  To cash out from your app, when you do get online, ask the app to give the collectibles to you (via a QR code or something) and now once that is done they can no longer be traded in the app itself without resending them to the app again and the app changing the private key again to something only it knows.%0a---%0a> Another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require a internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an online intermediary does.  For example, Tesla could give it's customers tradable collectibles that are encrypted.  the customers can trade the collectibles among themselves.  Then they could be cashed out of the network at will, by allowing Tesla to transfer the private key to you.  They can then be put back into tesla's custody if desired, Tesla would change the private key to something only they know, then give you the encrypted version back to transfer.%0a
host:1613092098=192.168.1.8
author:1613088144=
diff:1613088144:1613088129:=299c299%0a%3c This will also help prevent [[https://www.officialhacker.com/dust-attack/|dust attacks]].%0a---%0a> This will also prevent [[https://www.officialhacker.com/dust-attack/|Dust attacks]].%0a
host:1613088144=192.168.1.8
author:1613088129=
diff:1613088129:1613088031:=298,299d297%0a%3c %0a%3c This will also prevent [[https://www.officialhacker.com/dust-attack/|Dust attacks]].%0a
host:1613088129=192.168.1.8
author:1613088031=
diff:1613088031:1613087961:=297c297%0a%3c This would also make "new" collectibles more valuable (more collectible) which is a fun thing to consider.%0a---%0a> This would also make "new" collectibles more valuable which is a fun thing to consider.%0a
host:1613088031=192.168.1.8
author:1613087961=
diff:1613087961:1613087875:=302,303d301%0a%3c %0a%3c If a collectible is only transferred once every 7 years, it could theoretically last 7,000 years before deletion.%0a
host:1613087961=192.168.1.8
author:1613087875=
diff:1613087875:1613087860:=292c292%0a%3c !!!Value [[#value]]%0a---%0a> !!!Value%0a
host:1613087875=192.168.1.8
author:1613087860=
diff:1613087860:1613087385:=33c33%0a%3c Firstly it is advantageous from a regulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the [[#price|value of a couple sticks of gum]], it is small enough to give pretty good granularity to transactions.  Also the [[#value|more a collectible has been traded, the lower it's value]], which will make payment possibilities even more granular.%0a---%0a> Firstly it is advantageous from a regulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the [[#price|value of a couple sticks of gum]], it is small enough to give pretty good granularity to transactions.%0a
host:1613087860=192.168.1.8
author:1613087385=
diff:1613087385:1613085856:=17c17%0a%3c A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection by customers.  %0a---%0a> A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection for customers.  %0a
host:1613087385=192.168.1.8
author:1613085856=
diff:1613085856:1613085454:=17c17%0a%3c A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, only CPU's can mine - not GPU's or ASIC's, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection for customers.  %0a---%0a> A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], emission scales perfectly with adoption, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection for customers.  %0a
host:1613085856=192.168.1.8
author:1613085454=
diff:1613085454:1613085371:=92c92%0a%3c !!!!Layer 2: Fully offline trading (Cash)%0a---%0a> !!!!Layer 2: Fully offline trading%0a
host:1613085454=192.168.1.8
author:1613085371=
diff:1613085371:1613085349:=87,88c87%0a%3c !!!!Chromaton%0a%3c [[Chromaton]] was designed as a convenient and efficient way to transfer private keys.  %0a---%0a> [[Chromaton]] was designed as a convienient and efficient way to transfer private keys.  %0a
host:1613085371=192.168.1.8
author:1613085349=
diff:1613085349:1613083761:=91,92d90%0a%3c !!!!Layer 2: Fully offline trading%0a%3c Another thing to introduce is encrypted trading, basically an app or program that encrypts the collectibles private key so while you are holding it, you can't access the private key.  This shouldn't be the standard but it would be good for when you want to trade them offline and not require a internet connection to trade them or to receive them.  Perhaps the app verifies it online once and then it can be traded and the giver and receiver both don't know the private key so they can't double spend.  The app or program maintains and transfers ownership.  So basically solving the double spending problem totally offline by encrypting the private key so both the giver and receiver don't know it and only an online intermediary does.  For example, Tesla could give it's customers tradable collectibles that are encrypted.  the customers can trade the collectibles among themselves.  Then they could be cashed out of the network at will, by allowing Tesla to transfer the private key to you.  They can then be put back into tesla's custody if desired, Tesla would change the private key to something only they know, then give you the encrypted version back to transfer.%0a
host:1613085349=192.168.1.8
author:1613083761=
diff:1613083761:1613083679:=292c292%0a%3c I believe a fun, interesting, and functional mechanism could be collectible deterioration.  Since collectibles would be able to be mined indefinitely with no dampers, having deterioration of preexisting collectibles would make sense.  What we could do is have each trade of a collectible reduce it's value.  This makes sense because every time a collectible is traded it expands the database.  So when it is traded 1000 times, it is deleted.  So this would mean a collectible that has only ever been added to a database and never traded would have a value of 1000/1000.  One that has been traded 500 times would have a value of 500/1000 which is 1/2.  So this is one way also that partial collectibles could be traded.  Lets say you want to pay someone 2.5 collectibles, you could give them 2 untraded collectibles and one that has been traded 500 times. This will improve granularity of payments.  Many people would likely seek out partial collectibles so they can more easily make more exact (you can always overshoot someone's asking price) payments.%0a---%0a> I believe a fun, interesting, and functional mechanism could be collectible deterioration.  Since collectibles would be able to be mined indefinitely with no dampers, having deterioration of preexisting collectibles would make sense.  What we could do is have each trade of a collectible reduce it's value.  This makes sense because every time a collectible is traded it expands the database.  So when it is traded 1000 times, it is deleted.  So this would mean a collectible that has only ever been added to a database and never traded would have a value of 1000/1000.  One that has been traded 500 times would have a value of 500/1000 which is 1/2.  So this is one way also that partial collectibles could be traded.  Lets say you want to pay someone 2.5 collectibles, you could give them 2 untraded collectibles and one that has been traded 500 times. This will improve granularity of payments.  Many people would likely seek out partial collectibles so they can more easily make partial payments.%0a
host:1613083761=192.168.1.8
author:1613083679=
diff:1613083679:1613083539:=298c298%0a%3c Another thing that could be done is a collectible that has not been transferred for 7 years, would also be deleted.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to use and not hoard collectibles.  Software could favor old collectibles to be spent before new ones so that a person always maintains a fresh stock of collectibles.%0a---%0a> Another thing that could be done is a collectible that has not been transferred for 7 years, would also be deleted.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to us and not hoard collectibles.  Software could favor old collectibles to be spent before new ones so that a person always maintains a fresh stock of collectibles.%0a
host:1613083679=192.168.1.8
author:1613083539=
diff:1613083539:1613083322:=290,291d289%0a%3c %0a%3c !!!!Deterioration%0a294,298c292%0a%3c This would also make "new" collectibles more valuable which is a fun thing to consider.%0a%3c %0a%3c %0a%3c !!!!Jubilee%0a%3c Another thing that could be done is a collectible that has not been transferred for 7 years, would also be deleted.  So if there is a collectible that has 1 use left (1/1000 value) and doesn't change hands in order to be destroyed, would get destroyed if it sat at that value for 7 years.  This would also incentivize people to us and not hoard collectibles.  Software could favor old collectibles to be spent before new ones so that a person always maintains a fresh stock of collectibles.%0a---%0a> How do we incentivize collectibles to be destroyed instead of them sitting at 1/1000 of their value forever and never be traded again?%0a
host:1613083539=192.168.1.8
author:1613083322=
diff:1613083322:1613083170:=290c290%0a%3c I believe a fun, interesting, and functional mechanism could be collectible deterioration.  Since collectibles would be able to be mined indefinitely with no dampers, having deterioration of preexisting collectibles would make sense.  What we could do is have each trade of a collectible reduce it's value.  This makes sense because every time a collectible is traded it expands the database.  So when it is traded 1000 times, it is deleted.  So this would mean a collectible that has only ever been added to a database and never traded would have a value of 1000/1000.  One that has been traded 500 times would have a value of 500/1000 which is 1/2.  So this is one way also that partial collectibles could be traded.  Lets say you want to pay someone 2.5 collectibles, you could give them 2 untraded collectibles and one that has been traded 500 times. This will improve granularity of payments.  Many people would likely seek out partial collectibles so they can more easily make partial payments.%0a---%0a> I believe a fun, interesting, and functional mechanism could be collectible deterioration.  Since collectibels would be able to be mined indefinitely with no dampers, having deterioration of preexisting colelctibles would make sense.  What we could do is have each trade of a collectible reduce it's value.  This makes sense because every time a collectible is traded it expands the database.  So when it is traded 1000 times, it is deleted.  So this would mean a collectible that has only ever been added toa database and never traded would have a value of 1000/1000.  One that has been traded 500 times would have a value of 500/1000 which is 1/2.  So this is one way also that partial collectibles could be traded.  Lets say you want to pay someone 2.5 collectibles, you could give them 2 untraded collectibles and one that has been traded 500 times. This will improve granulatifty of payments.  Many people would likely seek out partial collectibles so they can more easily make partial payments.%0a
host:1613083322=192.168.1.8
author:1613083170=
diff:1613083170:1613082553:=290,292c290%0a%3c I believe a fun, interesting, and functional mechanism could be collectible deterioration.  Since collectibels would be able to be mined indefinitely with no dampers, having deterioration of preexisting colelctibles would make sense.  What we could do is have each trade of a collectible reduce it's value.  This makes sense because every time a collectible is traded it expands the database.  So when it is traded 1000 times, it is deleted.  So this would mean a collectible that has only ever been added toa database and never traded would have a value of 1000/1000.  One that has been traded 500 times would have a value of 500/1000 which is 1/2.  So this is one way also that partial collectibles could be traded.  Lets say you want to pay someone 2.5 collectibles, you could give them 2 untraded collectibles and one that has been traded 500 times. This will improve granulatifty of payments.  Many people would likely seek out partial collectibles so they can more easily make partial payments.%0a%3c %0a%3c How do we incentivize collectibles to be destroyed instead of them sitting at 1/1000 of their value forever and never be traded again?%0a---%0a> %0a
host:1613083170=192.168.1.8
author:1613082553=
diff:1613082553:1613081643:=6c6%0a%3c (:Update:2/11/2021:)%0a---%0a> (:Update:1/14/2021:)%0a
host:1613082553=192.168.1.8
author:1613081643=
diff:1613081643:1613080727:=288,289d287%0a%3c %0a%3c !!!Value%0a
host:1613081643=5.149.253.57
author:1613080727=
diff:1613080727:1611294119:=76,80c76,80%0a%3c Miners should distribute their collectibles as widely as possible.  There will likely multiple networks soft forked from each-other with different transactions on their ledger, however most should have similar difficulty requirements so would likely accept the same collectibles from miners.  These different networks, by definition, will not sync their ledgers, so it is up to the miners to send their mining awards to the networks separately.  There could be certain unaffiliated or multi-affiliated nodes that provide this service to miners and give you a rundown of what networks are currently accepting what difficulty of mining challenges.%0a%3c %0a%3c Also even hard-forked networks that have different difficulty requirements you could likely "merge mine" for these too.  Say one network requires a difficulty of 460+ bit numbers whereas another requires a 400+ bit difficulty.  You could mine a 460 bit number then submit it to both networks since that would fulfill requirements of both.%0a%3c %0a%3c If a miner is well trusted, another thing they could do is sell physical collectibles.  The way this should be done is a trusted miner randomly and securely generates a private key, public key, and completes the mining challenge.  They then should submit the collectible to trusted nodes to be registered.  However the private key could be saved physically on a paper or QR code or something and this hidden inside a physical item such as a ceramic disk (like a poker chip) or other item that must be destroyed to retrieve the code.  Of course the miner could potentially "spend" the collectible without your knowledge so a miner would have to develop a good reputation to be trusted with this.%0a---%0a> Miners should distribute their collectibles as widely as possible.  There will likely multiple networks soft forked from eachother with different transactions on their ledger, however most should have similar difficulty requirements so would likely accept the same collectibles from miners.  These different networks, by definition, will not sync their ledgers, so it is up to the miners to send their mining awards to the networks separatly.  There could be certain unaffilated or multiaffiliated nodes that provide this service to miners and give you a rundown of what networks are currently accepting what difficulty of mining challenges.%0a> %0a> Also even hardforked networks that have different difficulty requirements you could likely "merge mine" for these too.  Say one network requires a difficulty of 460+ bit numbers whereas another requires a 400+ bit difficulty.  You could mine a 460 bit number then submit it to both networks since that would fulfill requirements of both.%0a> %0a> If a miner is well trusted, another thing they could do is sell physical collectibles.  The way this should be done is a trusted miner randomly and securely generates a private key, public key, and completes the mining challenge.  They then should submit the collectible to trusted nodes to be registered.  However the private key could be saved physically on a paper or QR code or something and this hidden inside a physical item such as a ceramic disk (like a poker chip) or other item that must be destroyed to retrieve the code.  Of corse the miner could potentially "spend" the collectible without your knowlege so a mijer would have to develop a good reputation to be trusted with this.%0a
host:1613080727=5.149.253.57
author:1611294119=
diff:1611294119:1611294068:=84c84%0a%3c After a [[#collect|collectible]] is mined it goes either directly to a node for recording, is secretly saved for later use, or given to a [[#customer|customer]] who then submits it to the network.  How this transferal of a [[#collect|collectible]] works is displayed in the diagram below.%0a---%0a> After a [[#collect|collectible]] is mined it goes either directly to a node for recording, is secretly saved for later use, or the private key is given to a [[#customer|customer]] who then submits it to the network.  How this transferal of a [[#collect|collectible]] works is displayed in the diagram below.%0a
host:1611294119=104.175.54.158
author:1611294068=
diff:1611294068:1611293600:=87,89c87%0a%3c [[Chromaton]] was designed as a convienient and efficient way to transfer private keys.  %0a%3c %0a%3c If the collectible is already on the network then only the private key needs to be given.  The reason for this is using the private key, the holder of the private key can recreate the public key so they know what the public key is.  Also the nonce and factor are all on the ledger already.  So if someone gets a private key then they own the crypto-collectible as long as they can then change the private key before the previous owner can.  Therefore the reciever of the collectible will need to have an internet connection to verify their ownership of the collectible.  The giver does not need an internet connection, but needs to have had an internet connection at some point so they could have gotten the collectible onto the network.  Otherwise if they mined the collectible and never submitted it, in addition to the private key they would also need to give the new owner the nonce and factor proving work so the new owner can submit it to the network.%0a---%0a> [[Chromaton]] was designed as a convienient and efficient way to transfer private keys.%0a
host:1611294068=104.175.54.158
author:1611293600=
diff:1611293600:1611293521:=9c9%0a%3c (:Also:[[Chromaton]]:)%0a---%0a> (:Also:none:)%0a
host:1611293600=104.175.54.158
author:1611293521=
diff:1611293521:1611289193:=86,87d85%0a%3c %0a%3c [[Chromaton]] was designed as a convienient and efficient way to transfer private keys.%0a
host:1611293521=104.175.54.158
author:1611289193=
diff:1611289193:1611280994:=325d324%0a%3c [[https://github.com/OpenCoin/opencoin-historic/blob/master/standards/protocol.txt|Open Coin]]%0a
host:1611289193=79.141.162.81
author:1611280994=
diff:1611280994:1610744210:=321c321%0a%3c [[https://bitcoin.org/bitcoin.pdf|Bitcoin]] [[Attach:bitcoin.txt| [txt] ]]%0a---%0a> [[https://bitcoin.org/bitcoin.pdf|Bitcoin]]%0a
host:1611280994=79.141.162.81
author:1610744210=
diff:1610744210:1610743577:=79,81d78%0a%3c %0a%3c If a miner is well trusted, another thing they could do is sell physical collectibles.  The way this should be done is a trusted miner randomly and securely generates a private key, public key, and completes the mining challenge.  They then should submit the collectible to trusted nodes to be registered.  However the private key could be saved physically on a paper or QR code or something and this hidden inside a physical item such as a ceramic disk (like a poker chip) or other item that must be destroyed to retrieve the code.  Of corse the miner could potentially "spend" the collectible without your knowlege so a mijer would have to develop a good reputation to be trusted with this.%0a%3c %0a
host:1610744210=104.175.54.158
author:1610743577=
diff:1610743577:1610742415:=75,78d74%0a%3c %0a%3c Miners should distribute their collectibles as widely as possible.  There will likely multiple networks soft forked from eachother with different transactions on their ledger, however most should have similar difficulty requirements so would likely accept the same collectibles from miners.  These different networks, by definition, will not sync their ledgers, so it is up to the miners to send their mining awards to the networks separatly.  There could be certain unaffilated or multiaffiliated nodes that provide this service to miners and give you a rundown of what networks are currently accepting what difficulty of mining challenges.%0a%3c %0a%3c Also even hardforked networks that have different difficulty requirements you could likely "merge mine" for these too.  Say one network requires a difficulty of 460+ bit numbers whereas another requires a 400+ bit difficulty.  You could mine a 460 bit number then submit it to both networks since that would fulfill requirements of both.%0a
host:1610743577=104.175.54.158
author:1610742415=
diff:1610742415:1610694697:=72,74d71%0a%3c %0a%3c !!!Making money mining%0a%3c Miners make money by creating and completing challenges that meet the [[#requirements|requirements]] of the [[#node|nodes]].%0a
host:1610742415=104.175.54.158
author:1610694697=
diff:1610694697:1610694588:=269c269%0a%3c You shouldn't hard fork unless you have a group of miners that really want to mine on your chosen difficulty.  In any case, miners will likely still be able to contribute to your new network, unless your difficulty is higher than the majority of other networks.  If the main network is 1 pc-week of work, and you set yours to 10, not many miners are going to accommodate you.  But if instead of 1 week of pc-work you set it to 3 days of pc-work, then miners would likely contribute their collectibles to the main network, and also to yours since theirs would qualify on your network too.  Kind of like merged mining.  Miners will tend to keep the networks and nodes in some sort of consensus on difficulty.%0a---%0a> You shouldn't hard fork unless you have a group of miners that really want to mine on your chosen difficulty.  In any case, miners will likely still be able to contribute to your new network, unless your difficulty is higher than the majority of other networks.  If the main network is 1 pc-week of work, and you set yours to 10, not many miners are going to accommodate you.  But if instead of 1 week of pc-work you set it to 3 days of pc-work, then miners would likely contribute their collectibles to the main network, and also to yours since theirs would qualify on your network too.  Kind of like merged mining.  Miners sort of keep the nodes sober as to what crazy idea's they should pursue.%0a
host:1610694697=92.38.148.61
author:1610694588=
diff:1610694588:1610694311:=269c269%0a%3c You shouldn't hard fork unless you have a group of miners that really want to mine on your chosen difficulty.  In any case, miners will likely still be able to contribute to your new network, unless your difficulty is higher than the majority of other networks.  If the main network is 1 pc-week of work, and you set yours to 10, not many miners are going to accommodate you.  But if instead of 1 week of pc-work you set it to 3 days of pc-work, then miners would likely contribute their collectibles to the main network, and also to yours since theirs would qualify on your network too.  Kind of like merged mining.  Miners sort of keep the nodes sober as to what crazy idea's they should pursue.%0a---%0a> You shouldn't hard fork unless you have a group of miners that really want to mine on your chosen difficulty.  In any case, miners will likely still be able to contribute to your new network, unless your difficulty is higher than the majority of other networks.  If the main network is 1 pc-week of work, and you set yours to 10, not many miners are going to accommodate you.  But if instead of 1 week of pc-work you set it to 3 days of pc-work, then miners would likely contribute their collectibles to the main network, and also to yours since theirs would qualify on your network too.  Kind of like merged mining.%0a
host:1610694588=92.38.148.61
author:1610694311=
diff:1610694311:1610694243:=291c291%0a%3c A brand can absolutely "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and [[#customer|customers]] choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or pay-walled in any way, then the system is no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a---%0a> A brand can absolutely "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and [[#customer|customers]] choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or pay-walled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a
host:1610694311=92.38.148.61
author:1610694243=
diff:1610694243:1610694124:=269c269%0a%3c You shouldn't hard fork unless you have a group of miners that really want to mine on your chosen difficulty.  In any case, miners will likely still be able to contribute to your new network, unless your difficulty is higher than the majority of other networks.  If the main network is 1 pc-week of work, and you set yours to 10, not many miners are going to accommodate you.  But if instead of 1 week of pc-work you set it to 3 days of pc-work, then miners would likely contribute their collectibles to the main network, and also to yours since theirs would qualify on your network too.  Kind of like merged mining.%0a---%0a> You shouldn't hard fork unless you have a group of miners that really want to mine on your chosen difficulty.  In any case, miners will likely still be able to contribute to your new network, unless your difficulty is higher than the majority of other networks.  If the main network is 1 pc-week of work, and you set yours to 10, not many miners are going to accommodate you.  but if instead of 1 week of pc-work you set it to 3 days of pc-work, then miners would likely contribute their collectibles to the main network, and also to yours since theirs would qualify on your network too.  Kind of like merged mining.%0a
host:1610694243=92.38.148.61
author:1610694124=
diff:1610694124:1610693534:=263,269c263%0a%3c Where there are [[#dispute|disputes]], there will be forks!  This is OK.  I will describe what I expect to see in terms of forks.%0a%3c %0a%3c Soft forks may be common.  A soft fork occurs when groups of nodes cannot agree on what the proper ledger should look like.  However they do roughly agree what difficulty mining should be.  Miners then can continue to support both networks.  It is in everyone's best interest to try to not split miners work, because the more miners the more widely accepted your network will be.%0a%3c %0a%3c Hard forks really need to be deliberate.  I foresee some groups that just want their own ecosystem, which is totally fine.  One way to achieve this is to set the difficulty to completely different levels.  So for example they could set their difficulty target to 1 collectible mined for every 2 weeks of PC-work, instead of 1 week.  This choice is arbitrary, but I chose 1 week so people would feel incentivized to mine if even just with their laptop or even smartphone.  Another group could set it to even 1 day of PC-work.  While this would definitely incentivize people with slower devices to mine, it also would be cumbersome with how many collectibles need to be transferred for each purchase.  I think 1 week is a happy medium.  Everyone likes to get paid weekly.%0a%3c %0a%3c You shouldn't hard fork unless you have a group of miners that really want to mine on your chosen difficulty.  In any case, miners will likely still be able to contribute to your new network, unless your difficulty is higher than the majority of other networks.  If the main network is 1 pc-week of work, and you set yours to 10, not many miners are going to accommodate you.  but if instead of 1 week of pc-work you set it to 3 days of pc-work, then miners would likely contribute their collectibles to the main network, and also to yours since theirs would qualify on your network too.  Kind of like merged mining.%0a---%0a> %0a
host:1610694124=92.38.148.61
author:1610693534=
diff:1610693534:1610693463:=261,262d260%0a%3c %0a%3c !!!!Forks%0a
host:1610693534=92.38.148.61
author:1610693463=
diff:1610693463:1610693228:=271d270%0a%3c %0a
host:1610693463=92.38.148.61
author:1610693228=
diff:1610693228:1610693025:=273c273%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  This is similar to gold buyers; they are the customer of gold miners and the customer of safekeeping services (banks/safety deposit boxes). They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there are no trustworthy nodes, to start one themselves or compensate someone else to do it.%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there are no trustworthy nodes, to start one themselves or compensate someone else to do it.%0a
host:1610693228=92.38.148.61
author:1610693025=
diff:1610693025:1610692336:=256c256%0a%3c Disputes are another service that nodes can provide their customers.  If a [[#customer|customer]] has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.  The affected customer should provide as much evidence as possible to the node to make a decision on the veracity of the claims.  Accepting disputes from customers can be a [[#premium|premium offering]] from nodes and would likely be a paid feature and also there could be a limit to the number of disputes a node will hear from a customer in a given time period.%0a---%0a> Disputes are another service that nodes can provide their customers.  If a [[#customer|customer]] has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.  The affected customer should provide as much evidence as possible to the node to make a decision on the veracity of the claims.  Accepting disputes from customers can be a premium offering from nodes and would likely be a paid feature and also there could be a limit to the number of disputes a node will hear from a customer in a given time period.%0a
host:1610693025=92.38.148.61
author:1610692336=
diff:1610692336:1610692224:=217,218d216%0a%3c %0a%3c Notice that there is a time listed in the picture above.  Nodes can't be expected to vouch for another in real time, so they list a date and time they last checked the other node's accuracy.  This requires node [[#source|source control]] so one can find what a ledger looked like when a node vouched for them.%0a
host:1610692336=92.38.148.61
author:1610692224=
diff:1610692224:1610692115:=114c114%0a%3c !!!!Source Control[[#source]]%0a---%0a> !!!!Source Control%0a
host:1610692224=92.38.148.61
author:1610692115=
diff:1610692115:1610691996:=212c212%0a%3c Notice that this node has 5 collectibles staked between 2 different addresses.  Staking is one reason why you would want to have many collectibles under one key, that way you only have to sign once for multiple collectibles. If you are determined to be a "bad node" your staked collectibles would be blacklisted from the other nodes and lost forever, similar to [[#burn|proof of burn]].%0a---%0a> Notice that this node has 5 collectibles staked between 2 different addresses.  Staking is one reason why you would want to have many collectibles under one key, that way you only have to sign once for multiple collectibles. If you are determined to be a "bad node" your staked collectibles would be blacklisted from the other nodes and lost forever, similar to [[#burn|proof of burn]]%0a
host:1610692115=92.38.148.61
author:1610691996=
diff:1610691996:1610691863:=305c305%0a%3c This is a living document, both because it is a wiki, and also because I haven't thought of everything.  The whole purpose of the network is the nodes call the shots, not me.  The nodes need to be willing to take a risk to stand up for the truth against the other nodes if necessary. The customers have to hold the node's feet to the fire so that the nodes serve the customers and the good of the network, which is to everyone's benefit.  To the miners, try to be accommodating and service as many networks as you can, and keep mining :) ~[[~NatureHacker]].%0a---%0a> This is a living document, both because it is a wiki, and also because I haven't thought of everything.  The whole purpose of the network is the nodes call the shots, not me.  The nodes need to be willing to take a risk to stand up for the truth against the other nodes if necessary. The customers have to hold the node's feet to the fire so that the nodes serve the customers and the good of the network, which is to everyone's benefit.  To the miners, well, keep mining :) ~[[~NatureHacker]].%0a
host:1610691996=92.38.148.61
author:1610691863=
diff:1610691863:1610691804:=305c305%0a%3c This is a living document, both because it is a wiki, and also because I haven't thought of everything.  The whole purpose of the network is the nodes call the shots, not me.  The nodes need to be willing to take a risk to stand up for the truth against the other nodes if necessary. The customers have to hold the node's feet to the fire so that the nodes serve the customers and the good of the network, which is to everyone's benefit.  To the miners, well, keep mining :) ~[[~NatureHacker]].%0a---%0a> This is a living document, both because it is a wiki, and also because I haven't thought of everything.  The whole purpose of the network is the nodes call the shots, not me.  The nodes need to be willing to take a risk to stand up for the truth against the other nodes if necessary. The customers have to hold the node's feet to the fire so that the nodes serve the customers and the good of the network, which is to everyone's benefit.%0a
host:1610691863=92.38.148.61
author:1610691804=
diff:1610691804:1610691474:=303,305d302%0a%3c %0a%3c !!Disclaimer%0a%3c This is a living document, both because it is a wiki, and also because I haven't thought of everything.  The whole purpose of the network is the nodes call the shots, not me.  The nodes need to be willing to take a risk to stand up for the truth against the other nodes if necessary. The customers have to hold the node's feet to the fire so that the nodes serve the customers and the good of the network, which is to everyone's benefit.%0a
host:1610691804=92.38.148.61
author:1610691474=
diff:1610691474:1610691404:=108c108%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 [[#collect|collectibles]], but each containing their own separate proof of work.  These can be called "Joined Keys" or "Joined Collectibles".  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for [[#customer|customers]], nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a [[#premium|premium paid service]] since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 [[#collect|collectibles]], but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for [[#customer|customers]], nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a [[#premium|premium paid service]] since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610691474=92.38.148.61
author:1610691404=
diff:1610691404:1610691354:=209c209%0a%3c Staked collectibles are [[#collect|collectibles]] that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as [[#rep|trustworthy]].  See also [[#vouch|vouches]]. [[#join|Joined keys]] are nearly identical to staked collectibles however the format in the [[#ledger|ledger]] is a bit different and they are not necessarily owned by the hosting node.  [[#join|Joined keys]] can also be used as staked collectibles by a node.%0a---%0a> Staked collectibles are [[#collect|collectibles]] that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as [[#rep|trustworthy]].  See also [[#vouch|vouches]]. [[#join|Joined keys]] are nearly identical to staked collectibles however the format in the [[#ledger|ledger]] is a bit different and they are not necessarily owned by the hosting node.%0a
host:1610691404=92.38.148.61
author:1610691354=
diff:1610691354:1610691231:=112c112%0a%3c *Joined keys are very similar to [[#stake|staked collectibles]], the only differences are slightly different format in the ledger and also they are not necessarily owned by the hosting [[#node|node]].  Joined keys can also be used as [[#stake|staked collectibles]] for nodes.%0a---%0a> *Joined keys are very similar to [[#stake|staked collectibles]], the only differences are slightly different format in the ledger and also they are not necessarily owned by the hosting node.%0a
host:1610691354=92.38.148.61
author:1610691231=
diff:1610691231:1610691161:=209c209%0a%3c Staked collectibles are [[#collect|collectibles]] that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as [[#rep|trustworthy]].  See also [[#vouch|vouches]]. [[#join|Joined keys]] are nearly identical to staked collectibles however the format in the [[#ledger|ledger]] is a bit different and they are not necessarily owned by the hosting node.%0a---%0a> Staked collectibles are [[#collect|collectibles]] that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as [[#rep|trustworthy]].  See also [[#vouch|vouches]].%0a
host:1610691231=92.38.148.61
author:1610691161=
diff:1610691161:1610691131:=111d110%0a%3c %0a
host:1610691161=92.38.148.61
author:1610691131=
diff:1610691131:1610691108:=107a108%0a> Joined keys are very similar to [[#stake|staked collectibles]], the only differences are slightly different format in the ledger and also they are not necessarily owned by the hosting node.%0a111d111%0a%3c *Joined keys are very similar to [[#stake|staked collectibles]], the only differences are slightly different format in the ledger and also they are not necessarily owned by the hosting node.%0a
host:1610691131=92.38.148.61
author:1610691108=
diff:1610691108:1610691027:=108d107%0a%3c Joined keys are very similar to [[#stake|staked collectibles]], the only differences are slightly different format in the ledger and also they are not necessarily owned by the hosting node.%0a
host:1610691108=92.38.148.61
author:1610691027=
diff:1610691027:1610690973:=202c202%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  [[#collect|Collectibles]] on the publicnet are not fully fungible, as a feature, due to their trace-ability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], [[#join|joined keys]], and [[#contract|contracts]]. Out of these, [[#join|joined keys]] and [[#contract|contracts]] are a little different; as all contracts and joined keys on the network are recorded, not just that one node's.  %0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  [[#collect|Collectibles]] on the publicnet are not fully fungible, as a feature, due to their trace-ability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], [[#join|key joining]], and [[#contract|contracts]]. Out of these, [[#join|joined keys]] and [[#contract|contracts]] are a little different; as all contracts and joined keys on the network are recorded, not just that one node's.  %0a
host:1610691027=92.38.148.61
author:1610690973=
diff:1610690973:1610690331:=202c202%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  [[#collect|Collectibles]] on the publicnet are not fully fungible, as a feature, due to their trace-ability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], [[#join|key joining]], and [[#contract|contracts]]. Out of these, [[#join|joined keys]] and [[#contract|contracts]] are a little different; as all contracts and joined keys on the network are recorded, not just that one node's.  %0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  [[#collect|Collectibles]] on the publicnet are not fully fungible, as a feature, due to their trace-ability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], and [[#contract|contracts]]. Out of these, [[#contract|contracts]] are a little different; as all contracts on the network are recorded, not just that one node's.  %0a
host:1610690973=92.38.148.61
author:1610690331=
diff:1610690331:1610690259:=168c168%0a%3c * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to make income.  Contracts are sort of like premium transactions and are in the publicnet so it would make sense for nodes to require payment or subscription for a [[#customer|customer]] to submit these.  Nodes would need to sync with other node's contracts for free though to maintain a complete database.%0a---%0a> * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to make income.  Contracts are sort of like premium transactions and are in the publicnet so it would make sense for nodes to require payment or subscription for a [[#customer|customer]] to submit these.  Nodes would need to sync with other nodes contracts for free though to maintain a complete database.%0a
host:1610690331=92.38.148.61
author:1610690259=
diff:1610690259:1610680367:=166,167c166,167%0a%3c * Accepting [[#submit|submissions]] and [[#keychange|transactions]] directly from customers.  Nodes would update their ledgers based on other nodes for free because they want to have the full database, but for a customer to submit to them directly they may require a small fee or a subscription.  Some nodes may do one or both of these things for free though to increase their [[#rep|reputation]].%0a%3c %0a---%0a> * Accepting [[#submit|submissions]] and [[#keychange|transactions]] directly from customers.  Nodes would update their ledgers based on other nodes for free becauss they want to have the full database, but for a customer to submit to them directly they may require a small fee or a subscription.  Some nodes may do one or both of these things for free though to increase their [[#rep|reputation]].%0a> %0a174c174%0a%3c **Unjoining collectibles can also be a service that nodes perform for customers, but as far as I can predict it would require the collectibles maintain a link to the others they were once joined to.  This is especially true if they were shared across the network, and nodes would have prior record of them being joined in the past leading to traceability.%0a---%0a> **Unjoining collectibles can also be a service that nodes perform for customers, but as far as I can predict it would require the collectibles maintain a link to the others they were once joined to.  This is especially true if they were shared across the network, and nodes would have prior record of them bieng joined in the past leading to tracibility.%0a
host:1610690259=92.38.148.61
author:1610680367=
diff:1610680367:1610680156:=103c103%0a%3c Firstly you cannot simply tell the network to give a [[#collect|collectible]] to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.  This is actually an all-around benefit, since it can be done offline if desired, and also instantly.%0a---%0a> Firstly you cannot simply tell the network to give a [[#collect|collectible]] to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.%0a
host:1610680367=92.38.148.61
author:1610680156=
diff:1610680156:1610679523:=97,98d96%0a%3c %0a%3c You do not ever need to submit the private key to the network.  Keep the private key secret (referencing the public key) and you will only give this to someone else (secretly, ie: encrypted) when you want to transfer the collectible to another person.%0a
host:1610680156=92.38.148.61
author:1610679523=
diff:1610679523:1610678839:=17,18c17,18%0a%3c A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The [[#customer|customer]] has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection for customers.  %0a%3c %0a---%0a> A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection for customers.  %0a> %0a26,27c26,27%0a%3c Node selection by the [[#customer|customer]] will be primarily based on [[#rep|reputation]]. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your [[#rep|reputation]] other than being "good".  This makes it difficult for the nodes to carry out an attack, since [[#rep|reputation]] is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a%3c %0a---%0a> Node selection by the customer will be primarily based on [[#rep|reputation]]. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your [[#rep|reputation]] other than being "good".  This makes it difficult for the nodes to carry out an attack, since [[#rep|reputation]] is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a> %0a74c74%0a%3c After a [[#collect|collectible]] is mined it goes either directly to a node for recording, is secretly saved for later use, or the private key is given to a [[#customer|customer]] who then submits it to the network.  How this transferal of a [[#collect|collectible]] works is displayed in the diagram below.%0a---%0a> After a [[#collect|collectible]] is mined it goes either directly to a node for recording, is secretly saved for later use, or the private key is given to a customer who then submits it to the network.  How this transferal of a [[#collect|collectible]] works is displayed in the diagram below.%0a91,92c91,92%0a%3c Nodes are not miners and have a huge and important role in a Digital [[#collect|Collectible]] Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a [[#rep|trusted node]].  What this means is when a miner gives the collectible they mined to the [[#customer|customer]], the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a [[#premium|fee for this service]], and are incentivized to share the info they gain with other nodes to increase their [[#rep|trustworthiness]].  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the [[#rep|trust]] people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a%3c %0a---%0a> Nodes are not miners and have a huge and important role in a Digital [[#collect|Collectible]] Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a [[#rep|trusted node]].  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a [[#premium|fee for this service]], and are incentivized to share the info they gain with other nodes to increase their [[#rep|trustworthiness]].  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the [[#rep|trust]] people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a> %0a106,107c106,107%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 [[#collect|collectibles]], but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for [[#customer|customers]], nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a [[#premium|premium paid service]] since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a%3c %0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 [[#collect|collectibles]], but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a [[#premium|premium paid service]] since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a> %0a116c116%0a%3c Nodes can stake collectibles, forge reliable trusting connections with other trusted nodes, get other nodes to vouch for them, set good policies, and be responsive to [[#customer|customers]]; in order to build trust with the community.%0a---%0a> Nodes can stake collectibles, forge reliable trusting connections with other trusted nodes, get other nodes to vouch for them, set good policies, and be responsive to customers; in order to build trust with the community.%0a123,124c123,124%0a%3c The nodes set the requirements for [[#collect|collectibles]] they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the [[#miner|miners]] meet all the following requirements.  The nodes set the rules and ultimately the [[#customer|customers]] are liable to make sure their trusted nodes are setting good rules.  Here are some highly suggested requirements the nodes can set, some tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a%3c %0a---%0a> The nodes set the requirements for [[#collect|collectibles]] they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the [[#miner|miners]] meet all the following requirements.  The nodes set the rules and ultimately the customers are liable to make sure their trusted nodes are setting good rules.  Here are some highly suggested requirements the nodes can set, some tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a> %0a153,154c153,154%0a%3c The emission has no upper limit.  We believe that miners, nodes, and [[#customer|customers]] are all essential, and always essential.  And if emission is ever throttled, then that is saying we want miners to quit, which we never do.  Emission must be able to scale up with more people joining/using the network and demand, just like if there is more gold demand there will be more gold mined.%0a%3c %0a---%0a> The emission has no upper limit.  We believe that miners, nodes, and customers are all essential, and always essential.  And if emission is ever throttled, then that is saying we want miners to quit, which we never do.  Emission must be able to scale up with more people joining/using the network and demand, just like if there is more gold demand there will be more gold mined.%0a> %0a166,167c166,167%0a%3c * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to make income.  Contracts are sort of like premium transactions and are in the publicnet so it would make sense for nodes to require payment or subscription for a [[#customer|customer]] to submit these.  Nodes would need to sync with other nodes contracts for free though to maintain a complete database.%0a%3c %0a---%0a> * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to make income.  Contracts are sort of like premium transactions and are in the publicnet so it would make sense for nodes to require payment or subscription for a customer to submit these.  Nodes would need to sync with other nodes contracts for free though to maintain a complete database.%0a> %0a170,171c170,171%0a%3c **Joining collectibles can also be done directly by miners by using the same public key and using different nonces to create new proofs of work.  This would be common in [[#stake|staked collectibles]]. These would also likely be treated by nodes similarly to a [[#customer|customer]] requested joining since the nodes would have to join the proofs of work to the public key themselves as well, especially if a miner submitted them separately.%0a%3c %0a---%0a> **Joining collectibles can also be done directly by miners by using the same public key and using different nonces to create new proofs of work.  This would be common in [[#stake|staked collectibles]]. These would also likely be treated by nodes similarly to a customer requested joining since the nodes would have to join the proofs of work to the public key themselves as well, especially if a miner submitted them separately.%0a> %0a174,175c174,175%0a%3c * Allowing customers to [[#dispute|dispute]] transactions.  Now we are getting into something I think few nodes would be willing to do for free.  Disputing transactions put the reputation of the node on the line as well as likely taking actual human work to review for veracity of the claims.  Also disputes are not something that other nodes need to sync with unless they too want to enter into the dispute. The node would likely only allow customers to submit disputes for a fee or especially a high tier subscription, especially if the [[#customer|customer]] has many disputes or the customer's disputes are important enough for the node to stake collectibles on them.%0a%3c %0a---%0a> * Allowing customers to [[#dispute|dispute]] transactions.  Now we are getting into something I think few nodes would be willing to do for free.  Disputing transactions put the reputation of the node on the line as well as likely taking actual human work to review for veracity of the claims.  Also disputes are not something that other nodes need to sync with unless they too want to enter into the dispute. The node would likely only allow customers to submit disputes for a fee or especially a high tier subscription, especially if the customer has many disputes or the customer's disputes are important enough for the node to stake collectibles on them.%0a> %0a218,219c218,219%0a%3c Either one of the nodes or both could publish contracts on behalf of one of their [[#customer|customers]].  In other words, you do not need to own your own node to make contracts, but you do need your own node to have [[#stake|staked collectibles]] or [[#vouch|vouches]] or [[#dispute|disputes]].  The reason for this is contracts are linked to a collectible and published whereas [[#stake|staked collectibles]] and [[#vouch|vouches]] and [[#dispute|disputes]] are linked to a a node's public ip/identity.%0a%3c %0a---%0a> Either one of the nodes or both could publish contracts on behalf of one of their customers.  In other words, you do not need to own your own node to make contracts, but you do need your own node to have [[#stake|staked collectibles]] or [[#vouch|vouches]] or [[#dispute|disputes]].  The reason for this is contracts are linked to a collectible and published whereas [[#stake|staked collectibles]] and [[#vouch|vouches]] and [[#dispute|disputes]] are linked to a a node's public ip/identity.%0a> %0a238,239c238,239%0a%3c To be a trustworthy node, you have to be willing to go to war for the truth and your [[#customer|customers]].  Agreeableness is great and can enhance consensus, but consensus on a lie is worthless and harms everyone. %0a%3c %0a---%0a> To be a trustworthy node, you have to be willing to go to war for the truth and your customers.  Agreeableness is great and can enhance consensus, but consensus on a lie is worthless and harms everyone. %0a> %0a246,247c246,247%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they could blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent, than for a [[#customer|customer]] to get their collectible(s) back.%0a%3c %0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they could blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent, than for a customer to get their collectible(s) back.%0a> %0a250,251c250,251%0a%3c Disputes are another service that nodes can provide their customers.  If a [[#customer|customer]] has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.  The affected customer should provide as much evidence as possible to the node to make a decision on the veracity of the claims.  Accepting disputes from customers can be a premium offering from nodes and would likely be a paid feature and also there could be a limit to the number of disputes a node will hear from a customer in a given time period.%0a%3c %0a---%0a> Disputes are another service that nodes can provide their customers.  If a customer has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.  The affected customer should provide as much evidence as possible to the node to make a decision on the veracity of the claims.  Accepting disputes from customers can be a premium offering from nodes and would likely be a paid feature and also there could be a limit to the number of disputes a node will hear from a customer in a given time period.%0a> %0a276c276%0a%3c A brand can absolutely "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and [[#customer|customers]] choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or pay-walled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a---%0a> A brand can absolutely "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and customers choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or pay-walled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0aTODO: 1000 trades collectible deteriorates.  Great thing about this is that this is a way to pay less than a fuill collectible.  Basically every time a collectible is traded it looses 1/1000th of it's value every trade.
host:1610679523=92.38.148.61
author:1610678839=
diff:1610678839:1610678772:=24c24%0a%3c I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to [[#rep|trust]], and provide opportunities for them to win our trust.  Some of these opportunities can be nodes [[#stake|staking]] collectibles, getting [[#vouch|vouches]], staying free from [[#dispute|disputes]] and maintaining good [[#customer|customer]] service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other [[#node|node(s)]] all without any transactions being lost since the database is distributed by nature.%0a---%0a> I prefer trust over faith.  Let us, as the customers, have the choice of which [[#rep|nodes to trust]], and provide opportunities for them to win our trust.  Some of these opportunities can be nodes [[#stake|staking]] collectibles, getting [[#vouch|vouches]], staying free from [[#dispute|disputes]] and maintaining good [[#customer|customer]] service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other [[#node|node(s)]] all without any transactions being lost since the database is distributed by nature.%0a
host:1610678839=92.38.148.61
author:1610678772=
diff:1610678772:1610678115:=22c22%0a%3c "Trust-less" might be a good term for it.  But "trust" is replaced with "faith".  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks affecting a significant percentage of coins besides bitcoin. State actors, given enough incentive such as killing competition to their own digital currencies, might even attack Bitcoin too someday.%0a---%0a> "Trust-less" might be a good term for it.  But "trust" is replaced with "faith".  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks affecting a significant percentage of coins besides bitcoin. State actors, given enough incentive such as killing competition with their own digital currencies, might even attack Bitcoin too someday.%0a
host:1610678772=92.38.148.61
author:1610678115=
diff:1610678115:1610678082:=11c11%0a%3c (:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a---%0a> (:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|URL to PDF]]:)%0a
host:1610678115=92.38.148.61
author:1610678082=
diff:1610678082:1610678030:=
host:1610678082=92.38.148.61
author:1610678030=
diff:1610678030:1610678000:=
host:1610678030=92.38.148.61
author:1610678000=
diff:1610678000:1610676196:=11c11%0a%3c (:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|URL to PDF]]:)%0a---%0a> (:Download::)%0a
host:1610678000=92.38.148.61
author:1610676196=
diff:1610676196:1610676020:=10c10%0a%3c (:Archive:[[https://archive.is/1UeCR|Archive.is]], [[https://web.archive.org/web/20210115020355/http://www.naturewiki.org/wiki/pmwiki.php/NatureWiki/DigitalCollectibleNetwork|Archive.org]]:)%0a---%0a> (:Archive:[[https://archive.is/1UeCR|Archive.is]]:)%0a
host:1610676196=92.38.148.61
author:1610676020=
diff:1610676020:1610675864:=10c10%0a%3c (:Archive:[[https://archive.is/1UeCR|Archive.is]]:)%0a---%0a> (:Archive::)%0a
host:1610676020=92.38.148.61
author:1610675864=
diff:1610675864:1610672818:=3,5d2%0a%3c (:Published:1/6/2021:)%0a%3c (:Author:[[~NatureHacker]]:)%0a%3c (:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site Licence]]:)%0a7,8d3%0a%3c (:Maintainer:[[~NatureHacker]]:)%0a%3c (:Categories:[[!Cryptics]]:)%0a10,14c5,8%0a%3c (:Archive::)%0a%3c (:Download::)%0a%3c %0a%3c %0a%3c %0a---%0a> (:Status:Maintained:)%0a> (:Maintainer:[[~NatureHacker]]:)%0a> (:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site Licence]]:)%0a> (:Categories:[[!Cryptics]]:)%0a
host:1610675864=92.38.148.61
author:1610672818=
diff:1610672818:1610672387:=85c85%0a%3c Nodes are not miners and have a huge and important role in a Digital [[#collect|Collectible]] Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a [[#rep|trusted node]].  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a [[#premium|fee for this service]], and are incentivized to share the info they gain with other nodes to increase their [[#rep|trustworthiness]].  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the [[#rep|trust]] people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a---%0a> Nodes are not miners and have a huge and important role in a Digital [[#collect|Collectible]] Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a [[#rep|trusted node]].  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their [[#rep|trustworthiness]].  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the [[#rep|trust]] people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a
host:1610672818=104.175.54.158
author:1610672387=
diff:1610672387:1610672348:=208c208%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a [[#collect|collectible]] "giving to 'node y' for expenses". Then when node y receives the private key for the [[#collect|collectible]] from you, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as a signed acknowledgement of the contract and by accepting the payment they are accepting the terms.  The reciever should leave a memo like: "accepting as full payment from customer".%0a---%0a> Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to 'node y' for expenses". Then when node y receives the private key for the [[#collect|collectible]] from you, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as a signed acknowledgement of the contract and by accepting the payment they are accepting the terms.  The reciever should leave a memo like: "accepting as full payment from customer".%0a
host:1610672387=104.175.54.158
author:1610672348=
diff:1610672348:1610672268:=208c208%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to 'node y' for expenses". Then when node y receives the private key for the [[#collect|collectible]] from you, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as a signed acknowledgement of the contract and by accepting the payment they are accepting the terms.  The reciever should leave a memo like: "accepting as full payment from customer".%0a---%0a> Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to 'node y' for expenses". Then when node y receives the private key for the collectible from you, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as a signed acknowledgement of the contract and by accepting the payment they are accepting the terms.  The reciever should leave a memo like: "accepting as full payment from customer".%0a
host:1610672348=104.175.54.158
author:1610672268=
diff:1610672268:1610672208:=199c199%0a%3c Staked collectibles are [[#collect|collectibles]] that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as [[#rep|trustworthy]].  See also [[#vouch|vouches]].%0a---%0a> Staked collectibles are collectibles that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as [[#rep|trustworthy]].  See also [[#vouch|vouches]].%0a
host:1610672268=104.175.54.158
author:1610672208=
diff:1610672208:1610672157:=194c194%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  [[#collect|Collectibles]] on the publicnet are not fully fungible, as a feature, due to their trace-ability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], and [[#contract|contracts]]. Out of these, [[#contract|contracts]] are a little different; as all contracts on the network are recorded, not just that one node's.  %0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  Collectibles on the publicnet are not fully fungible, as a feature, due to their trace-ability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], and [[#contract|contracts]]. Out of these, [[#contract|contracts]] are a little different; as all contracts on the network are recorded, not just that one node's.  %0a
host:1610672208=104.175.54.158
author:1610672157=
diff:1610672157:1610672121:=186c186%0a%3c Proof of burn is proving that you made a [[#collect|collectible]] un-spendable.%0a---%0a> Proof of burn is proving that you made a collectible un-spendable.%0a
host:1610672157=104.175.54.158
author:1610672121=
diff:1610672121:1610672075:=178c178%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each [[#collect|collectible]] has its own public key, so is un-linkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  [[#collect|Collectibles]] should be given in person, such as payment via bluetooth or card like RFID, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each [[#collect|collectible]] has its own public key, so is un-linkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  Collectibles should be given in person, such as payment via bluetooth or card like RFID, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a
host:1610672121=104.175.54.158
author:1610672075=
diff:1610672075:1610672038:=178c178%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each [[#collect|collectible]] has its own public key, so is un-linkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  Collectibles should be given in person, such as payment via bluetooth or card like RFID, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is un-linkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  Collectibles should be given in person, such as payment via bluetooth or card like RFID, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a
host:1610672075=104.175.54.158
author:1610672038=
diff:1610672038:1610671967:=174c174%0a%3c The ledger is the distributed database of accepted [[#collect|collectibles]] stored and served by the [[#node|nodes]].  It consists of a [[#private|Privatenet]] and [[#public|Publicnet]].%0a---%0a> The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a [[#private|Privatenet]] and [[#public|Publicnet]].%0a
host:1610672038=104.175.54.158
author:1610671967=
diff:1610671967:1610671932:=152c152%0a%3c The price is not controlled directly but I expect each [[#collect|collectible]] to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0029 coins of Monero which, at $150 per coin, earns you about 43 cents.%0a---%0a> The price is not controlled directly but I expect each collectible to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0029 coins of Monero which, at $150 per coin, earns you about 43 cents.%0a
host:1610671967=104.175.54.158
author:1610671932=
diff:1610671932:1610671879:=145c145%0a%3c The nodes, by setting and enforcing the [[#length|bit length]] of the number that miners factor (difficulty), emission of the [[#collect|collectible]] is controlled.%0a---%0a> The nodes, by setting and enforcing the [[#length|bit length]] of the number that miners factor (difficulty), emission of the collectible is controlled.%0a
host:1610671932=104.175.54.158
author:1610671879=
diff:1610671879:1610671826:=117c117%0a%3c The nodes set the requirements for [[#collect|collectibles]] they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the [[#miner|miners]] meet all the following requirements.  The nodes set the rules and ultimately the customers are liable to make sure their trusted nodes are setting good rules.  Here are some highly suggested requirements the nodes can set, some tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a---%0a> The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the [[#miner|miners]] meet all the following requirements.  The nodes set the rules and ultimately the customers are liable to make sure their trusted nodes are setting good rules.  Here are some highly suggested requirements the nodes can set, some tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a
host:1610671879=104.175.54.158
author:1610671826=
diff:1610671826:1610671780:=100c100%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 [[#collect|collectibles]], but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a [[#premium|premium paid service]] since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a [[#premium|premium paid service]] since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610671826=104.175.54.158
author:1610671780=
diff:1610671780:1610671735:=95c95%0a%3c Firstly you cannot simply tell the network to give a [[#collect|collectible]] to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.%0a---%0a> Firstly you cannot simply tell the network to give a collectible to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.%0a
host:1610671780=104.175.54.158
author:1610671735=
diff:1610671735:1610671613:=90c90%0a%3c As seen in the picture below, a miner or a primary owner of a [[#collect|collectible]] (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a
host:1610671735=104.175.54.158
author:1610671613=
diff:1610671613:1610671508:=29c29%0a%3c A collectible on our network is like a password.  In reality it is the private key (password) of a public key that has a challenge based on it completed with proof of work.  The proof of completed challenge (proof of work) is inextricably linked to the given public and private key and cannot be separated from it.  Basically a line on the [[#private|privatenet]] is one collectible on our network.%0a---%0a> A collectible on our network is like a password.  In reality it is the private key (password) of a public key that has a challenge based on it completed with proof of work.  The proof of completed challenge (proof of work) is inextricably linked to the given public and private key and cannot be separated from it.%0a
host:1610671613=104.175.54.158
author:1610671508=
diff:1610671508:1610671428:=85c85%0a%3c Nodes are not miners and have a huge and important role in a Digital [[#collect|Collectible]] Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a [[#rep|trusted node]].  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their [[#rep|trustworthiness]].  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the [[#rep|trust]] people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a [[#rep|trusted node]].  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their [[#rep|trustworthiness]].  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the [[#rep|trust]] people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a
host:1610671508=104.175.54.158
author:1610671428=
diff:1610671428:1610671379:=68c68%0a%3c After a [[#collect|collectible]] is mined it goes either directly to a node for recording, is secretly saved for later use, or the private key is given to a customer who then submits it to the network.  How this transferal of a [[#collect|collectible]] works is displayed in the diagram below.%0a---%0a> After a collectible is mined it goes either directly to a node for recording, is secretly saved for later use, or the private key is given to a customer who then submits it to the network.  How this transferal of a collectible works is displayed in the diagram below.%0a
host:1610671428=104.175.54.158
author:1610671379=
diff:1610671379:1610671250:=65c65%0a%3c Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital [[#collect|collectible]] network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a---%0a> Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a
host:1610671379=104.175.54.158
author:1610671250=
diff:1610671250:1610671173:=57,59c57,59%0a%3c # The public key, nonce, and [[#fact|factorization]] constitutes one "[[#collect|digital collectible]]".  The [[#fact|factorization]] is the "Proof of Work".%0a%3c %0a%3c # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]], then it is valid.  Alternatively the miner can submit the [[#collect|digital collectible]] to the [[#node|network of nodes]] immediately for safekeeping and so it always keeps it's value.%0a---%0a> # The public key, nonce, and [[#fact|factorization]] constitutes one "digital collectible".  The [[#fact|factorization]] is the "Proof of Work".%0a> %0a> # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]], then it is valid.  Alternatively the miner can submit the digital collectible to the [[#node|network of nodes]] immediately for safekeeping and so it always keeps it's value.%0a
host:1610671250=104.175.54.158
author:1610671173=
diff:1610671173:1610671117:=37c37%0a%3c Every time a [[#fact|factorization]] is completed that meets the [[#requirements|requirements]] of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more [[#collect|collectible]] enters circulation; which is the [[#emission|emission]].%0a---%0a> Every time a [[#fact|factorization]] is completed that meets the [[#requirements|requirements]] of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation; which is the [[#emission|emission]].%0a
host:1610671173=104.175.54.158
author:1610671117=
diff:1610671117:1610671000:=11c11%0a%3c A digital [[#collect|collectible]] network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection for customers.  %0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection for customers.  %0a
host:1610671117=104.175.54.158
author:1610671000=
diff:1610671000:1610670781:=11,12c11,12%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to [[#rep|trust]] and voting with their feet, money, and work.  [[#rep|Reputation]] will be a big part of node selection for customers.  %0a%3c %0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a> %0a18,20c18,20%0a%3c I prefer trust over faith.  Let us, as the customers, have the choice of which [[#rep|nodes to trust]], and provide opportunities for them to win our trust.  Some of these opportunities can be nodes [[#stake|staking]] collectibles, getting [[#vouch|vouches]], staying free from [[#dispute|disputes]] and maintaining good [[#customer|customer]] service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other [[#node|node(s)]] all without any transactions being lost since the database is distributed by nature.%0a%3c %0a%3c Node selection by the customer will be primarily based on [[#rep|reputation]]. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your [[#rep|reputation]] other than being "good".  This makes it difficult for the nodes to carry out an attack, since [[#rep|reputation]] is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a---%0a> I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes [[#stake|staking]] collectibles, getting [[#vouch|vouches]], staying free from [[#dispute|disputes]] and maintaining good [[#customer|customer]] service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other [[#node|node(s)]] all without any transactions being lost since the database is distributed by nature.%0a> %0a> Node selection by the customer will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a
host:1610671000=104.175.54.158
author:1610670781=
diff:1610670781:1610670671:=85c85%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a [[#rep|trusted node]].  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their [[#rep|trustworthiness]].  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the [[#rep|trust]] people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a
host:1610670781=104.175.54.158
author:1610670671=
diff:1610670671:1610670564:=199c199%0a%3c Staked collectibles are collectibles that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as [[#rep|trustworthy]].  See also [[#vouch|vouches]].%0a---%0a> Staked collectibles are collectibles that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as trustworthy.  See also [[#vouch|vouches]].%0a
host:1610670671=104.175.54.158
author:1610670564=
diff:1610670564:1610670538:=109c109%0a%3c !!!!Displaying Trust [[#rep]]%0a---%0a> !!!!Displaying Trust%0a
host:1610670564=104.175.54.158
author:1610670538=
diff:1610670538:1610670368:=172c172%0a%3c %0a---%0a> !!!Reputation [[#rep]]%0a
host:1610670538=104.175.54.158
author:1610670368=
diff:1610670368:1610670120:=169,170d168%0a%3c %0a%3c As you can probably tell, one way for a new node to gain [[#rep|reputation]] quickly would be to offer some or all of the above services for free.  [[#customer|Customers]] are going to be willing to give a node the benefit of the doubt and try to build a trusting relationship with a node that is willing to give them a good deal.%0a
host:1610670368=104.175.54.158
author:1610670120=
diff:1610670120:1610669882:=160,165c160,165%0a%3c * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to make income.  Contracts are sort of like premium transactions and are in the publicnet so it would make sense for nodes to require payment or subscription for a customer to submit these.  Nodes would need to sync with other nodes contracts for free though to maintain a complete database.%0a%3c %0a%3c * Joining multiple collectibles to the same public key.  [[#join|Joining collectibles]] also would likely be something that nodes either charge a fee or require the customer have a subscription before performing.  Joining collectibles takes collectibles from the privatenet or new collectibles and joins them to one public key, thus rendering them unfit for privatenet and moved to the publicnet.  This makes all those collectibles linked to one common identity so should be discouraged by the nodes due to loss of fungibility; and requiring a fee or high tier subscription makes sense. %0a%3c %0a%3c **Joining collectibles can also be done directly by miners by using the same public key and using different nonces to create new proofs of work.  This would be common in [[#stake|staked collectibles]]. These would also likely be treated by nodes similarly to a customer requested joining since the nodes would have to join the proofs of work to the public key themselves as well, especially if a miner submitted them separately.%0a%3c %0a---%0a> * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to make income.  Contracts are sort of like premium transactions and are in the publicnet so it would make sense for nodes to require payment or subscription for a costomer to submit these.  Nodes would need to sync with other nodes contracts for free though to maintain a complete database.%0a> %0a> * Joining multiple collectibles to the same public key.  [[#join|Joining collectibles]] also would likely be something that nodes either charge a fee or require the customer have a subscription before performing.  Joining collectibles takes collectibles from the privatenet or new collectibles and joins them to one public key, thus rendering them unfit for privatenet and moved to the publicnet.  This makes all those collectibles linked to one identity so should be discouraged by the nodes due to loss of fungibility, and requiring a fee or high tier subscription makes sense. %0a> %0a> **Joining collectibles can also be done directly by miners by using the same public key and using different nonces to create new proofs of work.  This would be common in [[#stake|staked collectibles]]. These would also be treated by nodes similarly to a customer requested joining since the nodes would have to join the proofs of work to the public key themselves as well, especially if a miner submitted them separately.%0a> %0a168c168%0a%3c * Allowing customers to [[#dispute|dispute]] transactions.  Now we are getting into something I think few nodes would be willing to do for free.  Disputing transactions put the reputation of the node on the line as well as likely taking actual human work to review for veracity of the claims.  Also disputes are not something that other nodes need to sync with unless they too want to enter into the dispute. The node would likely only allow customers to submit disputes for a fee or especially a high tier subscription, especially if the customer has many disputes or the customer's disputes are important enough for the node to stake collectibles on them.%0a---%0a> * Allowing customers to [[#dispute|dispute]] transactions.  Now we are getting into something I think few nodes would be willing to do for free.  Disputing transactions put the reputation of the node on the line as well as likely taking actual human work to review for veracity of the claims.  Also disputes are not something that other nodes need to sync with unless they too want to enter into the dispute. The node would likely only allow customers to submit disputes for a fee or especially a high tier subscription, especially if the customer has many disputes or the customers disputes are important enough for the node to stake collectibles on them.%0a
host:1610670120=104.175.54.158
author:1610669882=
diff:1610669882:1610669700:=165,166d164%0a%3c %0a%3c **Unjoining collectibles can also be a service that nodes perform for customers, but as far as I can predict it would require the collectibles maintain a link to the others they were once joined to.  This is especially true if they were shared across the network, and nodes would have prior record of them bieng joined in the past leading to tracibility.%0a
host:1610669882=104.175.54.158
author:1610669700=
diff:1610669700:1610669603:=162c162%0a%3c * Joining multiple collectibles to the same public key.  [[#join|Joining collectibles]] also would likely be something that nodes either charge a fee or require the customer have a subscription before performing.  Joining collectibles takes collectibles from the privatenet or new collectibles and joins them to one public key, thus rendering them unfit for privatenet and moved to the publicnet.  This makes all those collectibles linked to one identity so should be discouraged by the nodes due to loss of fungibility, and requiring a fee or high tier subscription makes sense. %0a---%0a> * Joining multiple collectibles to the same public key.  [[#join|Joining collectibles]] also would likely be something that nodes either charge a fee or require the customer have a subscription before performing.  Joining collectibles takes collectibles from the privatenet and joins them to one public key, thus rendering them unfit for privatenet and moved to the publicnet.  This makes all those collectibles linked to one identity so should be discouraged by the nodes due to loss of fungibility, and requiring a fee or high tier subscription makes sense. %0a
host:1610669700=104.175.54.158
author:1610669603=
diff:1610669603:1610669555:=100c100%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a [[#premium|premium paid service]] since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a premium paid service since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610669603=104.175.54.158
author:1610669555=
diff:1610669555:1610669460:=99d98%0a%3c !!!!Joining collectibles [[#join]]%0a
host:1610669555=104.175.54.158
author:1610669460=
diff:1610669460:1610669410:=163c163%0a%3c **Joining collectibles can also be done directly by miners by using the same public key and using different nonces to create new proofs of work.  This would be common in [[#stake|staked collectibles]]. These would also be treated by nodes similarly to a customer requested joining since the nodes would have to join the proofs of work to the public key themselves as well, especially if a miner submitted them separately.%0a---%0a> Joining collectibles can also be done directly by miners by using the same public key and using different nonces to create new proofs of work.  This would be common in [[#stake|staked collectibles]]. These would also be treated by nodes similarly to a customer requested joining since the nodes would have to join the proofs of work to the public key themselves as well, especially if a miner submitted them separately.%0a
host:1610669460=104.175.54.158
author:1610669410=
diff:1610669410:1610668866:=160,163d159%0a%3c %0a%3c * Joining multiple collectibles to the same public key.  [[#join|Joining collectibles]] also would likely be something that nodes either charge a fee or require the customer have a subscription before performing.  Joining collectibles takes collectibles from the privatenet and joins them to one public key, thus rendering them unfit for privatenet and moved to the publicnet.  This makes all those collectibles linked to one identity so should be discouraged by the nodes due to loss of fungibility, and requiring a fee or high tier subscription makes sense. %0a%3c %0a%3c Joining collectibles can also be done directly by miners by using the same public key and using different nonces to create new proofs of work.  This would be common in [[#stake|staked collectibles]]. These would also be treated by nodes similarly to a customer requested joining since the nodes would have to join the proofs of work to the public key themselves as well, especially if a miner submitted them separately.%0a
host:1610669410=104.175.54.158
author:1610668866=
diff:1610668866:1610668647:=159,161c159,161%0a%3c * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to make income.  Contracts are sort of like premium transactions and are in the publicnet so it would make sense for nodes to require payment or subscription for a costomer to submit these.  Nodes would need to sync with other nodes contracts for free though to maintain a complete database.%0a%3c %0a%3c * Allowing customers to [[#dispute|dispute]] transactions.  Now we are getting into something I think few nodes would be willing to do for free.  Disputing transactions put the reputation of the node on the line as well as likely taking actual human work to review for veracity of the claims.  Also disputes are not something that other nodes need to sync with unless they too want to enter into the dispute. The node would likely only allow customers to submit disputes for a fee or especially a high tier subscription, especially if the customer has many disputes or the customers disputes are important enough for the node to stake collectibles on them.%0a---%0a> * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to kake income.  Contracts are sort of like premium transactions so it would make zense for nodes to require payment or subscription for this.%0a> %0a> * Allowing customers to [[#dispute|dispute]] transactions.  Now we are getting into something I think few nodes would be willing to do for free.  Disputing transactions put the reputation of the node on the line as well as likely taking actual human work to review for veracity of the claims.  The node would likely only allow this for a fee or especially a high tier subscription, especially if the customer has many disputes or the customers disputes are important enough for the node to stake collectibles on them.%0a
host:1610668866=104.175.54.158
author:1610668647=
diff:1610668647:1610668553:=162,163d161%0a%3c %0a%3c !!!Reputation [[#rep]]%0a
host:1610668647=104.175.54.158
author:1610668553=
diff:1610668553:1610668479:=155c155%0a%3c Nodes will make income the following ways:%0a---%0a> Nodes will make income the following ways%0a
host:1610668553=104.175.54.158
author:1610668479=
diff:1610668479:1610668451:=89c89%0a%3c !!!Submitting new collectibles to node [[#submit]]%0a---%0a> !!!Submitting new collectibles to node%0a
host:1610668479=104.175.54.158
author:1610668451=
diff:1610668451:1610668424:=157c157%0a%3c * Accepting [[#submit|submissions]] and [[#keychange|transactions]] directly from customers.  Nodes would update their ledgers based on other nodes for free becauss they want to have the full database, but for a customer to submit to them directly they may require a small fee or a subscription.  Some nodes may do one or both of these things for free though to increase their [[#rep|reputation]].%0a---%0a> * Accepting [[#submit|submissions]] and [[#keychange|transactions]] directly from customers.  Nodes would update their ledgers based on other nodes for free becauss they want to have the full database, but for a customer to submit to them directly they may require a small fee or a subscription.  Some nodes may do one or both of these things for free though to increase their [[#rep|reputation]]%0a
host:1610668451=104.175.54.158
author:1610668424=
diff:1610668424:1610667753:=152,161d151%0a%3c %0a%3c !!!Premium paid service [[#premium]]%0a%3c %0a%3c Nodes will make income the following ways%0a%3c %0a%3c * Accepting [[#submit|submissions]] and [[#keychange|transactions]] directly from customers.  Nodes would update their ledgers based on other nodes for free becauss they want to have the full database, but for a customer to submit to them directly they may require a small fee or a subscription.  Some nodes may do one or both of these things for free though to increase their [[#rep|reputation]]%0a%3c %0a%3c * Allowing [[#contract|contracts]] from customers.  Allowing customers to submit contracts is another way for nodes to kake income.  Contracts are sort of like premium transactions so it would make zense for nodes to require payment or subscription for this.%0a%3c %0a%3c * Allowing customers to [[#dispute|dispute]] transactions.  Now we are getting into something I think few nodes would be willing to do for free.  Disputing transactions put the reputation of the node on the line as well as likely taking actual human work to review for veracity of the claims.  The node would likely only allow this for a fee or especially a high tier subscription, especially if the customer has many disputes or the customers disputes are important enough for the node to stake collectibles on them.%0a
host:1610668424=104.175.54.158
author:1610667753=
diff:1610667753:1610667565:=99c99%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key, some may allow this as a premium paid service since they would have to move the collectible(s) to the [[#public|publicnet]].  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610667753=104.175.54.158
author:1610667565=
diff:1610667565:1610667521:=97c97%0a%3c As seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible[[#middle|(*)]], and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a---%0a> As seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible[[#middle|[*]]], and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a
host:1610667565=104.175.54.158
author:1610667521=
diff:1610667521:1610667320:=97c97%0a%3c As seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible[[#middle|[*]]], and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a---%0a> As seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible[[#middle|*]], and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a
host:1610667521=104.175.54.158
author:1610667320=
diff:1610667320:1610666240:=90c90%0a%3c As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the accepted public key so they can verify the node received the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the new public key so they can verify the node received the request properly.%0a
host:1610667320=104.175.54.158
author:1610666240=
diff:1610666240:1610658603:=31c31%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling an account receives payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in Steam or iTunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferal]] process in the DCN, which is not an accident, since the DCN [[#transferal|transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling receives payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in Steam or iTunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferal]] process in the DCN, which is not an accident, since the DCN [[#transferal|transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a
host:1610666240=104.175.54.158
author:1610658603=
diff:1610658603:1610648229:=
host:1610658603=104.175.54.158
author:1610648229=
diff:1610648229:1610647943:=
host:1610648229=104.175.54.158
author:1610647943=
diff:1610647943:1610647833:=3,4c3,4%0a%3c (:Update:1/14/2021:)%0a%3c (:Also:none:)%0a---%0a> (:Version:1/14/2021:)%0a> (:Prerequisites:none:)%0a
host:1610647943=104.175.54.158
author:1610647833=
diff:1610647833:1610647213:=3c3%0a%3c (:Version:1/14/2021:)%0a---%0a> (:Version:1:)%0a
host:1610647833=104.175.54.158
author:1610647213=
diff:1610647213:1610646919:=
host:1610647213=104.175.54.158
author:1610646919=
diff:1610646919:1610646416:=7c7%0a%3c (:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site Licence]]:)%0a---%0a> (:License:Site Licence:)%0a
host:1610646919=104.175.54.158
author:1610646416=
diff:1610646416:1610646299:=
host:1610646416=104.175.54.158
author:1610646299=
diff:1610646299:1610646135:=8c8%0a%3c (:Categories:[[!Cryptics]]:)%0a---%0a> (:Categories:[[!cryptics]]:)%0a
host:1610646299=104.175.54.158
author:1610646135=
diff:1610646135:1610646013:=
host:1610646135=104.175.54.158
author:1610646013=
diff:1610646013:1610645939:=3,7c3,7%0a%3c (:Version:1:)%0a%3c (:Prerequisites:none:)%0a%3c (:Status:Maintained:)%0a%3c (:Maintainer:[[~NatureHacker]]:)%0a%3c (:License:Site Licence:)%0a---%0a> (:Version:0.9.3 (2017-08-27):)%0a> (:Prerequisites:Post-2009, CSS3 compliant browser:)%0a> (:Status:maintained:)%0a> (:Maintainer:[[~Said Achmiz]]:)%0a> (:License:GPL:)%0a
host:1610646013=104.175.54.158
author:1610645939=
diff:1610645939:1610645926:=
host:1610645939=104.175.54.158
author:1610645926=
diff:1610645926:1610645724:=2c2%0a%3c (:Summary:A Next Generation Scalable Crypto-Collectible Network:)%0a---%0a> (:Summary:Clone of the Vector skin for MediaWiki (used on Wikipedia since 2010):)%0a
host:1610645926=104.175.54.158
author:1610645724=
diff:1610645724:1610645656:=
host:1610645724=104.175.54.158
author:1610645656=
diff:1610645656:1610645641:=8c8,9%0a%3c (:Categories:[[!cryptics]]:)%0a---%0a> (:Categories:[[!cryptics]] :)%0a> [[!cryptics]]%0a
host:1610645656=104.175.54.158
author:1610645641=
diff:1610645641:1610645626:=8c8%0a%3c (:Categories:[[!cryptics]] :)%0a---%0a> (:Categories:[[!cryptics]]:)%0a
host:1610645641=104.175.54.158
author:1610645626=
diff:1610645626:1610644986:=8c8%0a%3c (:Categories:[[!cryptics]]:)%0a---%0a> (:Categories::)%0a
host:1610645626=104.175.54.158
author:1610644986=
diff:1610644986:1610644880:=8,9c8,9%0a%3c (:Categories::)%0a%3c [[!cryptics]]%0a---%0a> (:Categories:[[!cryptics]]:)%0a> %0a
host:1610644986=104.175.54.158
author:1610644880=
diff:1610644880:1610644844:=8c8%0a%3c (:Categories:[[!cryptics]]:)%0a---%0a> (:Categories:[[!crypto]]:)%0a
host:1610644880=104.175.54.158
author:1610644844=
diff:1610644844:1610644765:=1,9d0%0a%3c (:include SkinsHeader:)%0a%3c (:Summary:Clone of the Vector skin for MediaWiki (used on Wikipedia since 2010):)%0a%3c (:Version:0.9.3 (2017-08-27):)%0a%3c (:Prerequisites:Post-2009, CSS3 compliant browser:)%0a%3c (:Status:maintained:)%0a%3c (:Maintainer:[[~Said Achmiz]]:)%0a%3c (:License:GPL:)%0a%3c (:Categories:[[!crypto]]:)%0a%3c %0a
host:1610644844=104.175.54.158
author:1610644765=
diff:1610644765:1610644190:=0a1,9%0a> %25block rframe width=400px%25Summary: Next Generation Crypto-Collectible Network\\%0a> Version: 1\\%0a> Prerequisites: none\\%0a> Status: Maintained\\%0a> Maintainer: [[~NatureHacker]]\\%0a> Discussion: [[{$Group}/{$Name}-Talk]]\\%0a> Categories:  [[!cryptics]]\\%0a> Downloads:\\%25%25%0a> %0a
host:1610644765=104.175.54.158
author:1610644190=
diff:1610644190:1610644157:=
host:1610644190=104.175.54.158
author:1610644157=
diff:1610644157:1610644022:=6c6%0a%3c Discussion: [[{$Group}/{$Name}-Talk]]\\%0a---%0a> Discussion: \\%0a
host:1610644157=104.175.54.158
author:1610644022=
diff:1610644022:1610643985:=1c1%0a%3c %25block rframe width=400px%25Summary: Next Generation Crypto-Collectible Network\\%0a---%0a> %25block rframe width=300px%25Summary: Next Generation Crypto-Collectible Network\\%0a
host:1610644022=104.175.54.158
author:1610643985=
diff:1610643985:1610643959:=2,8c2,8%0a%3c Version: 1\\%0a%3c Prerequisites: none\\%0a%3c Status: Maintained\\%0a%3c Maintainer: [[~NatureHacker]]\\%0a%3c Discussion: \\%0a%3c Categories:  [[!cryptics]]\\%0a%3c Downloads:\\%25%25%0a---%0a> * Version: 1\\%0a> * Prerequisites: none\\%0a> *Status: Maintained\\%0a> *Maintainer: [[~NatureHacker]]\\%0a> *Discussion: \\%0a> *Categories:  [[!cryptics]]\\%0a> *Downloads:\\%25%25%0a
host:1610643985=104.175.54.158
author:1610643959=
diff:1610643959:1610643948:=2,3c2,3%0a%3c * Version: 1\\%0a%3c * Prerequisites: none\\%0a---%0a> *Version: 1\\%0a> *Prerequisites: none\\%0a
host:1610643959=104.175.54.158
author:1610643948=
diff:1610643948:1610643937:=1a2%0a> ----%0a
host:1610643948=104.175.54.158
author:1610643937=
diff:1610643937:1610643728:=2,9c2,8%0a%3c ----%0a%3c *Version: 1\\%0a%3c *Prerequisites: none\\%0a%3c *Status: Maintained\\%0a%3c *Maintainer: [[~NatureHacker]]\\%0a%3c *Discussion: \\%0a%3c *Categories:  [[!cryptics]]\\%0a%3c *Downloads:\\%25%25%0a---%0a> Version: 1\\%0a> Prerequisites: none\\%0a> Status: Maintained\\%0a> Maintainer: [[~NatureHacker]]\\%0a> Discussion: \\%0a> Categories:  [[!cryptics]]\\%0a> Downloads:\\%25%25%0a
host:1610643937=104.175.54.158
author:1610643728=
diff:1610643728:1610643659:=
host:1610643728=104.175.54.158
author:1610643659=
diff:1610643659:1610643644:=1c1,2%0a%3c %25block rframe width=300px%25Summary: Next Generation Crypto-Collectible Network\\%0a---%0a> %25block rframe width=300px%25%0a> Summary: Next Generation Crypto-Collectible Network\\%0a8c9,10%0a%3c Downloads:\\%25%25%0a---%0a> Downloads:\\%0a> %25%25%0a
host:1610643659=104.175.54.158
author:1610643644=
diff:1610643644:1610643533:=1c1%0a%3c %25block rframe width=300px%25%0a---%0a> >>info%3c%3c%0a10c10,11%0a%3c %25%25%0a---%0a> >>%3c%3c%0a> %0a
host:1610643644=104.175.54.158
author:1610643533=
diff:1610643533:1610643441:=1,2c1%0a%3c >>info%3c%3c%0a%3c Summary: Next Generation Crypto-Collectible Network\\%0a---%0a> %25block rframe width=300px%25 Summary: Next Generation Crypto-Collectible Network\\%0a9,10c8%0a%3c Downloads:\\%0a%3c >>%3c%3c%0a---%0a> Downloads:\\ %25%25%0a
host:1610643533=104.175.54.158
author:1610643441=
diff:1610643441:1610643406:=0a1%0a> %0a
host:1610643441=104.175.54.158
author:1610643406=
diff:1610643406:1610643318:=1,2c1,2%0a%3c %0a%3c %25block rframe width=300px%25 Summary: Next Generation Crypto-Collectible Network\\%0a---%0a> >>info%3c%3c%0a> Summary: Next Generation Crypto-Collectible Network\\%0a9c9,12%0a%3c Downloads:\\ %25%25%0a---%0a> Downloads:\\%0a> >>%3c%3c%0a> %0a> %25block rframe width=300px%25 hello world %25%25%0a
host:1610643406=104.175.54.158
author:1610643318=
diff:1610643318:1610643304:=11d10%0a%3c %0a
host:1610643318=104.175.54.158
author:1610643304=
diff:1610643304:1610643255:=0a1%0a> %0a1a3%0a> %25block rframe width=300px%25%0a9c11%0a%3c Downloads:\\%0a---%0a> Downloads:\\%25%25%0a11d12%0a%3c %25block rframe width=300px%25 hello world %25%25%0a
host:1610643304=104.175.54.158
author:1610643255=
diff:1610643255:1610643204:=1,2d0%0a%3c %0a%3c >>info%3c%3c%0a3a2%0a> >>info%3c%3c%0a11c10%0a%3c Downloads:\\%25%25%0a---%0a> Downloads:\\%0a13c12%0a%3c %0a---%0a> %25%25%0a
host:1610643255=104.175.54.158
author:1610643204=
diff:1610643204:1610643170:=2a3%0a> %0a10a12%0a> %0a
host:1610643204=104.175.54.158
author:1610643170=
diff:1610643170:1610643116:=1c1%0a%3c %25block rframe width=300px%25%0a---%0a> %25right%25%0a14c14%0a%3c %25%25%0a---%0a> %0a
host:1610643170=104.175.54.158
author:1610643116=
diff:1610643116:1610643083:=1c1%0a%3c %25right%25%0a---%0a> %25rfloat%25%0a
host:1610643116=104.175.54.158
author:1610643083=
diff:1610643083:1610642825:=1,3c1,2%0a%3c %25rfloat%25%0a%3c >>info%3c%3c%0a%3c %0a---%0a> %25block align=right>>info%3c%3c%0a> %0a13c12%0a%3c >>%3c%3c%0a---%0a> >>%3c%3c%25%0a
host:1610643083=104.175.54.158
author:1610642825=
diff:1610642825:1610642798:=1,2c1,2%0a%3c %25block align=right>>info%3c%3c%0a%3c %0a---%0a> %25rfloat%25>>info%3c%3c%0a> %0a12c12%0a%3c >>%3c%3c%25%0a---%0a> >>%3c%3c%0a
host:1610642825=104.175.54.158
author:1610642798=
diff:1610642798:1610642720:=1c1%0a%3c %25rfloat%25>>info%3c%3c%0a---%0a> >>info%3c%3c%0a
host:1610642798=104.175.54.158
author:1610642720=
diff:1610642720:1610642486:=3,10c3,17%0a%3c Summary: Next Generation Crypto-Collectible Network\\%0a%3c Version: 1\\%0a%3c Prerequisites: none\\%0a%3c Status: Maintained\\%0a%3c Maintainer: [[~NatureHacker]]\\%0a%3c Discussion: \\%0a%3c Categories:  [[!cryptics]]\\%0a%3c Downloads:\\%0a---%0a> Summary: Next Generation Crypto-Collectible Network%0a> %0a> Version: 1%0a> %0a> Prerequisites: none%0a> %0a> Status: Maintained%0a> %0a> Maintainer: [[~NatureHacker]]%0a> %0a> Discussion: %0a> %0a> Categories:  [[!cryptics]]%0a> %0a> Downloads:%0a
host:1610642720=104.175.54.158
author:1610642486=
diff:1610642486:1610642376:=
host:1610642486=104.175.54.158
author:1610642376=
diff:1610642376:1610642354:=2d1%0a%3c %0a4d2%0a%3c %0a6d3%0a%3c %0a8d4%0a%3c %0a10d5%0a%3c %0a12d6%0a%3c %0a14d7%0a%3c %0a16d8%0a%3c %0a18d9%0a%3c %0a
host:1610642376=104.175.54.158
author:1610642354=
diff:1610642354:1610642218:=2,3c2,3%0a%3c Summary: Next Generation Crypto-Collectible Network%0a%3c Version: 1%0a---%0a> Summary: Add Table capabilities - nested tables, zebra tables, new directives.%0a> Version: 3.2%0a5,9c5,10%0a%3c Status: Maintained%0a%3c Maintainer: [[~NatureHacker]]%0a%3c Discussion: %0a%3c Categories:  [[!cryptics]]%0a%3c Downloads:%0a---%0a> Status: Working%0a> Maintainer: (:include Profiles.GNUZooLink:)%0a> Discussion: [[Cookbook/AdvancedTableDirectives-Talk]]%0a> Categories:  [[!Markup]] [[!Tables]]%0a> Downloads: Attach:AdvancedTableDirectives.php%0a> Downloads: Attach:AdvancedTableDirectives-php72.php (thanks to --[[~Petko]] for fixing this)%0a12c13%0a%3c %0a---%0a> [[!cryptics]]%0a
host:1610642354=104.175.54.158
author:1610642218=
diff:1610642218:1610641885:=1,11c1,15%0a%3c >>info%3c%3c%0a%3c Summary: Add Table capabilities - nested tables, zebra tables, new directives.%0a%3c Version: 3.2%0a%3c Prerequisites: none%0a%3c Status: Working%0a%3c Maintainer: (:include Profiles.GNUZooLink:)%0a%3c Discussion: [[Cookbook/AdvancedTableDirectives-Talk]]%0a%3c Categories:  [[!Markup]] [[!Tables]]%0a%3c Downloads: Attach:AdvancedTableDirectives.php%0a%3c Downloads: Attach:AdvancedTableDirectives-php72.php (thanks to --[[~Petko]] for fixing this)%0a%3c >>%3c%3c%0a---%0a> (:table border:1px solid #a7d7f9 width=20%25 align=right bgcolor=#f6f6f6 cellspacing=0 :)%0a> (:cellnr:)%0a> '''Details'''%0a> (:cellnr:)%0a> '''Summary:''' {$:Summary}\\%0a> '''Version:''' {$:Version}\\%0a> '''Prerequisites:''' {$:Prerequisites}\\%0a> '''Status:''' {$:Status}\\%0a> '''Maintainer:''' {$:Maintainer}\\%0a> '''License:''' {$:License}\\%0a> '''Categories:''' {$:Categories}\\%0a> '''Users:''' {$Users} ([[{$FullName}-Users|view]] / [[{$FullName}-Users?action=edit|edit]])\\%0a> '''Discussion:''' [[{$Group}/{$Name}-Talk]]\\%0a> '''Download:'''%0a> (:tableend:)%0a
host:1610642218=104.175.54.158
author:1610641885=
diff:1610641885:1610641814:=1c1%0a%3c (:table border:1px solid #a7d7f9 width=20%25 align=right bgcolor=#f6f6f6 cellspacing=0 :)%0a---%0a> (:table border=1 width=20%25 align=right bgcolor=#f6f6f6 cellspacing=0 :)%0a
host:1610641885=104.175.54.158
author:1610641814=
diff:1610641814:1610641585:=1c1%0a%3c (:table border=1 width=20%25 align=right bgcolor=#f6f6f6 cellspacing=0 :)%0a---%0a> (:table border=1 width=20%25 align=right bgcolor=#F9F9FB cellspacing=0 :)%0a
host:1610641814=104.175.54.158
author:1610641585=
diff:1610641585:1610641550:=1c1%0a%3c (:table border=1 width=20%25 align=right bgcolor=#F9F9FB cellspacing=0 :)%0a---%0a> (:table border=1 width=30%25 align=right bgcolor=#F9F9FB cellspacing=0 :)%0a
host:1610641585=104.175.54.158
author:1610641550=
diff:1610641550:1610641459:=1c1%0a%3c (:table border=1 width=30%25 align=right bgcolor=#F9F9FB cellspacing=0 :)%0a---%0a> (:table border=1 width=30%25 align=right bgcolor=#F7F7FA cellspacing=0 :)%0a
host:1610641550=104.175.54.158
author:1610641459=
diff:1610641459:1610641436:=1c1%0a%3c (:table border=1 width=30%25 align=right bgcolor=#F7F7FA cellspacing=0 :)%0a---%0a> (:table border=1 width=30%25 align=right bgcolor=#F1F0F6 cellspacing=0 :)%0a
host:1610641459=104.175.54.158
author:1610641436=
diff:1610641436:1610641400:=1c1%0a%3c (:table border=1 width=30%25 align=right bgcolor=#F1F0F6 cellspacing=0 :)%0a---%0a> (:table border=1 width=30%25 align=right bgcolor=#F1F0FB cellspacing=0 :)%0a
host:1610641436=104.175.54.158
author:1610641400=
diff:1610641400:1610641339:=1c1%0a%3c (:table border=1 width=30%25 align=right bgcolor=#F1F0FB cellspacing=0 :)%0a---%0a> (:table border=1 width=30%25 align=right bgcolor=#EFF5FB cellspacing=0 :)%0a
host:1610641400=104.175.54.158
author:1610641339=
diff:1610641339:1610641163:=1,4c1,2%0a%3c (:table border=1 width=30%25 align=right bgcolor=#EFF5FB cellspacing=0 :)%0a%3c (:cellnr:)%0a%3c '''Details'''%0a%3c (:cellnr:)%0a---%0a> >>display:inline-block%3c%3c%0a> %25block align=right margin="0 2px"%25%0a15c13%0a%3c (:tableend:)%0a---%0a> >>%3c%3c%0a
host:1610641339=104.175.54.158
author:1610641163=
diff:1610641163:1610640954:=2,3c2%0a%3c %25block align=right margin="0 2px"%25%0a%3c '''Summary:''' {$:Summary}\\%0a---%0a> %25block margin="0 2px"%25 '''Summary:''' {$:Summary}\\%0a
host:1610641163=104.175.54.158
author:1610640954=
diff:1610640954:1610640918:=1c1%0a%3c >>display:inline-block%3c%3c%0a---%0a> >>display:right-block%3c%3c%0a11c11%0a%3c '''Download:'''%0a---%0a> '''Download:''' Attach:vector.zip%0a
host:1610640954=104.175.54.158
author:1610640918=
diff:1610640918:1610640766:=1,11c1,8%0a%3c >>display:right-block%3c%3c%0a%3c %25block margin="0 2px"%25 '''Summary:''' {$:Summary}\\%0a%3c '''Version:''' {$:Version}\\%0a%3c '''Prerequisites:''' {$:Prerequisites}\\%0a%3c '''Status:''' {$:Status}\\%0a%3c '''Maintainer:''' {$:Maintainer}\\%0a%3c '''License:''' {$:License}\\%0a%3c '''Categories:''' {$:Categories}\\%0a%3c '''Users:''' {$Users} ([[{$FullName}-Users|view]] / [[{$FullName}-Users?action=edit|edit]])\\%0a%3c '''Discussion:''' [[{$Group}/{$Name}-Talk]]\\%0a%3c '''Download:''' Attach:vector.zip%0a---%0a> >>%3c%3c%0a> Summary: Automatically back up the wiki.d directory to a .zip file%0a> Version:%0a> Prerequisites:%0a> Status:%0a> Maintainer:%0a> Discussion: %0a> Categories:%0a
host:1610640918=104.175.54.158
author:1610640766=
diff:1610640766:1610640743:=1,9c1,2%0a%3c >>%3c%3c%0a%3c Summary: Automatically back up the wiki.d directory to a .zip file%0a%3c Version:%0a%3c Prerequisites:%0a%3c Status:%0a%3c Maintainer:%0a%3c Discussion: %0a%3c Categories:%0a%3c >>%3c%3c%0a---%0a> %0a> %0a
host:1610640766=104.175.54.158
author:1610640743=
diff:1610640743:1610637678:=1,3d0%0a%3c %0a%3c %0a%3c %0a
host:1610640743=104.175.54.158
author:1610637678=
diff:1610637678:1610637661:=237c237%0a%3c !!Uses[[#use]]%0a---%0a> !!Uses%0a
host:1610637678=104.175.54.158
author:1610637661=
diff:1610637661:1610637616:=232c232%0a%3c !!Customer[[#customer]]%0a---%0a> !!Customer%0a
host:1610637661=104.175.54.158
author:1610637616=
diff:1610637616:1610637577:=11c11%0a%3c I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes [[#stake|staking]] collectibles, getting [[#vouch|vouches]], staying free from [[#dispute|disputes]] and maintaining good [[#customer|customer]] service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other [[#node|node(s)]] all without any transactions being lost since the database is distributed by nature.%0a---%0a> I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes [[#stake|staking]] collectibles, getting [[#vouch|vouches]], staying free from [[#disputedisputes]] and maintaining good [[#customer|customer]] service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other [[#node|node(s)]] all without any transactions being lost since the database is distributed by nature.%0a
host:1610637616=104.175.54.158
author:1610637577=
diff:1610637577:1610614375:=11c11%0a%3c I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes [[#stake|staking]] collectibles, getting [[#vouch|vouches]], staying free from [[#disputedisputes]] and maintaining good [[#customer|customer]] service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other [[#node|node(s)]] all without any transactions being lost since the database is distributed by nature.%0a---%0a> I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes staking collectibles, getting vouches, and maintaining good customer service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other node(s) all without any transactions being lost since the database is distributed by nature.%0a
host:1610637577=104.175.54.158
author:1610614375=
diff:1610614375:1610614314:=153c153%0a%3c Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The new owner chooses a public key to change the old one to, and the node allows them to sign for both the new public key and old public key combined using the old private key (notice the signature next to the new public key after the "/"). Presumably they know the private key for the new public key they selected, otherwise is now [[#burn|burned]] and cannot be spent again.%0a---%0a> Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The new owner chooses a public key to change the old one to, and the node allows them to sign for both the new public key and old public key combined using the old private key (notice the signature next to the new public key after the "/"). Presumably they know the private key for the new public key they selected, otherwise it is a [[#burn|burn address]].%0a
host:1610614375=104.175.54.158
author:1610614314=
diff:1610614314:1610613257:=153c153%0a%3c Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The new owner chooses a public key to change the old one to, and the node allows them to sign for both the new public key and old public key combined using the old private key (notice the signature next to the new public key after the "/"). Presumably they know the private key for the new public key they selected, otherwise it is a [[#burn|burn address]].%0a---%0a> Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The new owner chooses a public key to change the old one to, and the node allows them to sign over the new public key and old public key using the old private key (notice the signature next to the new public key after the "/"). Presumably they know the private key for the new public key they selected, otherwise it is a [[#burn|burn address]].%0a
host:1610614314=104.175.54.158
author:1610613257=
diff:1610613257:1610613017:=242c242%0a%3c A brand can absolutely "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and customers choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or pay-walled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a---%0a> A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and customers choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or pay-walled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a
host:1610613257=92.38.148.60
author:1610613017=
diff:1610613017:1610612986:=212c212%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they could blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent, than for a customer to get their collectible(s) back.%0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they could blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent than for a customer getting their money back.%0a
host:1610613017=92.38.148.60
author:1610612986=
diff:1610612986:1610612935:=212c212%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they could blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent than for a customer getting their money back.%0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they could blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent than a customer getting their money back.%0a
host:1610612986=92.38.148.60
author:1610612935=
diff:1610612935:1610612865:=212c212%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they could blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent than a customer getting their money back.%0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent than a customer getting their money back.%0a
host:1610612935=92.38.148.60
author:1610612865=
diff:1610612865:1610612679:=208c208%0a%3c Depending on the severity of the transgression, the disputing node could also blacklist the offending IP temporarily because they do not trust syncing transactions with the bad node.  I suggest the IP ban is not permanent since there are only a limited amount of IP's available.  A nine month IP ban should suffice and/or when the rest of the nodes concur and blacklist the bad node's staked collectibles.%0a---%0a> Depending on the severity of the transgression, the disputing node could also blacklist the offending IP temporarily because they do not trust syncing transactions with the bad node.  I suggest the IP ban is not permanent since there are only a limited amount of IP's available.  A nine month IP ban should suffice and/or when the rest of the nodes concur and blacklist their staked collectibles.%0a
host:1610612865=92.38.148.60
author:1610612679=
diff:1610612679:1610612630:=199c199%0a%3c # The receiver then creates a new desired public key for the collectible.  She also writes a message.  She then signs the entire transaction with the private key of her newly desired public key.  This signing with her private key is optional, so a burn address can be used as the new public key if desired.%0a---%0a> # The receiver then creates a new desired public key for the collectible.  She also writes a message.  She then signs the entire transaction with private key of her newly desired public key.  This signing with her private key is optional, so a burn address can be used as the public key if desired.%0a
host:1610612679=92.38.148.60
author:1610612630=
diff:1610612630:1610612514:=199c199%0a%3c # The receiver then creates a new desired public key for the collectible.  She also writes a message.  She then signs the entire transaction with private key of her newly desired public key.  This signing with her private key is optional, so a burn address can be used as the public key if desired.%0a---%0a> # The receiver then creates a new desired public key for the collectible.  She also writes a message.  She then signs the entire transaction with private key of her newly desired public key%0a
host:1610612630=92.38.148.60
author:1610612514=
diff:1610612514:1610612483:=176c176%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectibles they staked on the bad node.  You cannot vouch the same collectibles on two different nodes reputation at the same time, including your own.  The reason for this is if you and your friend get banned at the same time, your loss would be limited which isn't fair.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectibles they staked on the bad node.  You cannot vouch the same collectibles on two different nodes reputation including your own.  The reason for this is if you and your friend get banned at the same time, your loss would be limited which isn't fair.%0a
host:1610612514=92.38.148.60
author:1610612483=
diff:1610612483:1610612209:=176c176%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectibles they staked on the bad node.  You cannot vouch the same collectibles on two different nodes reputation including your own.  The reason for this is if you and your friend get banned at the same time, your loss would be limited which isn't fair.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectibles they staked on the bad node.  Vouches are nice because you can have the same collectibles staked on your own reputation that you also have staked on another node's reputation, sort of leveraging your stakes.%0a
host:1610612483=92.38.148.60
author:1610612209=
diff:1610612209:1610612068:=164c164%0a%3c Because of proof of burn (including [[#dispute|disputes]]) and lost keys, and because the emission is adjusted on Moore's law and not price; the price of each collectible should steadily increase slowly over time, slightly above inflation.  This is while it stays the same difficulty to mine forever, namely an enthusiast PC-week of work per collectible.%0a---%0a> Because of proof of burn (including [[#dispute|disputes]]) and lost keys, and because the emission is adjusted on Moore's law and not price; the price of each collectible should steadily increase slowly over time.  This is while it stays the same difficulty to mine forever, namely an enthusiast PC-week of work per collectible.%0a
host:1610612209=92.38.148.60
author:1610612068=
diff:1610612068:1610610722:=150c150%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is un-linkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  Collectibles should be given in person, such as payment via bluetooth or card like RFID, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is un-linkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  Collectibles should be given in person, such as payment via bluetooth or card like rfid, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a
host:1610612068=92.38.148.60
author:1610610722=
diff:1610610722:1610610644:=133c133%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be set to something between 7/16th and 1/2 of the bit length. The maximum size should be either 1/2 the bit length or one bit more than 1/2 of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2 of the bit length. The maximum size should be either 1/2 the bit length or one bit more than 1/2 of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610610722=92.38.148.60
author:1610610644=
diff:1610610644:1610610623:=102c102%0a%3c Nodes can stake collectibles, forge reliable trusting connections with other trusted nodes, get other nodes to vouch for them, set good policies, and be responsive to customers; in order to build trust with the community.%0a---%0a> Nodes can stake collectibles, forge reliable trusting connections with other trusted nodes, get other nodes to vouch for them, set good policies, and be responsive to customers, to build trust with the community.%0a
host:1610610644=92.38.148.60
author:1610610623=
diff:1610610623:1610610539:=102c102%0a%3c Nodes can stake collectibles, forge reliable trusting connections with other trusted nodes, get other nodes to vouch for them, set good policies, and be responsive to customers, to build trust with the community.%0a---%0a> Nodes can stake collectibles, get other nodes to vouch for them, set good policies, and be responsive to customers, to build trust with the community.%0a
host:1610610623=92.38.148.60
author:1610610539=
diff:1610610539:1610610411:=208c208%0a%3c Depending on the severity of the transgression, the disputing node could also blacklist the offending IP temporarily because they do not trust syncing transactions with the bad node.  I suggest the IP ban is not permanent since there are only a limited amount of IP's available.  A nine month IP ban should suffice and/or when the rest of the nodes concur and blacklist their staked collectibles.%0a---%0a> Depending on the severity of the transgression, the disputing node could also blacklist the offending IP temporarily because they do not trust syncing transactions with the bad node.  I suggest the IP ban is not permanent since there are only a limited amount of IP's available.  A nine month IP ban should suffice.%0a
host:1610610539=92.38.148.60
author:1610610411=
diff:1610610411:1610610350:=97c97%0a%3c Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as Subversion) likely of SQL files and host them with at least daily updates and provide real-time syncing of databases.  What this does is allow new nodes to get the latest SQL and get nearly all the entries, then real-time sync to get fully up to date and stay in communication for real time changes.  %0a---%0a> Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as Subversion) likely of SQL files and host them with at least daily updates and provide real-time syncing of databases.  What this does is allow new nodes to get the latest SQL and get nearly all the entries, then real-time sync to get fully up to date.  %0a
host:1610610411=92.38.148.60
author:1610610350=
diff:1610610350:1610610258:=97,99c97%0a%3c Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as Subversion) likely of SQL files and host them with at least daily updates and provide real-time syncing of databases.  What this does is allow new nodes to get the latest SQL and get nearly all the entries, then real-time sync to get fully up to date.  %0a%3c %0a%3c Source control is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a---%0a> Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as Subversion) likely of SQL files and host them with (nearly) real-time updates and/or provide real-time syncing of databases.  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a
host:1610610350=92.38.148.60
author:1610610258=
diff:1610610258:1610610222:=97c97%0a%3c Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as Subversion) likely of SQL files and host them with (nearly) real-time updates and/or provide real-time syncing of databases.  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a---%0a> Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as Subversion) likely of SQL files and host them with (nearly) real-time updates.  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a
host:1610610258=92.38.148.60
author:1610610222=
diff:1610610222:1610610195:=97c97%0a%3c Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as Subversion) likely of SQL files and host them with (nearly) real-time updates.  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a---%0a> Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as GIT) likely of SQL files and host them with (nearly) real-time updates.  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a
host:1610610222=92.38.148.60
author:1610610195=
diff:1610610195:1610609979:=97c97%0a%3c Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as GIT) likely of SQL files and host them with (nearly) real-time updates.  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a---%0a> Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as GIT) likely of SQL files.  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a
host:1610610195=92.38.148.60
author:1610609979=
diff:1610609979:1610609960:=94c94%0a%3c *[[#middle]]In order to prevent a man-in-the-middle attack during transit, the digital signature could be that of the hash of the old public key combined with the new public key.  This way someone intercepting the transmission can't use your signature as a blank check and change the new public key you requested to a different value without you knowing.%0a---%0a> [[#middle]]In order to prevent a man-in-the-middle attack during transit, the digital signature could be that of the hash of the old public key combined with the new public key.  This way someone intercepting the transmission can't use your signature as a blank check and change the new public key you requested to a different value without you knowing.%0a
host:1610609979=92.38.148.60
author:1610609960=
diff:1610609960:1610609933:=94c94%0a%3c [[#middle]]In order to prevent a man-in-the-middle attack during transit, the digital signature could be that of the hash of the old public key combined with the new public key.  This way someone intercepting the transmission can't use your signature as a blank check and change the new public key you requested to a different value without you knowing.%0a---%0a> In order to prevent a man-in-the-middle attack during transit, the digital signature could be that of the hash of the old public key combined with the new public key.  This way someone intercepting the transmission can't use your signature as a blank check and change the new public key you requested to a different value without you knowing.%0a
host:1610609960=92.38.148.60
author:1610609933=
diff:1610609933:1610609604:=90c90%0a%3c As seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible[[#middle|*]], and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a---%0a> As seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible, and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a
host:1610609933=92.38.148.60
author:1610609604=
diff:1610609604:1610609578:=68c68%0a%3c Our network will also help discover large prime numbers, which when kept secret, are digital commodities [[https://www.naturehacker.org/2017/12/the-future-is-digital-property-dp.html?m=1|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network (DCN) that uses primes instead of [[#fact|factorizations]] as it's proof of work (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a---%0a> Our network will also help discover large prime numbers, which when kept secret, are digital commodities [[https://www.naturehacker.org/2017/12/the-future-is-digital-property-dp.html?m=1|#]].  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network (DCN) that uses primes instead of [[#fact|factorizations]] as it's proof of work (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a
host:1610609604=92.38.148.60
author:1610609578=
diff:1610609578:1610609471:=68c68%0a%3c Our network will also help discover large prime numbers, which when kept secret, are digital commodities [[https://www.naturehacker.org/2017/12/the-future-is-digital-property-dp.html?m=1|#]].  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network (DCN) that uses primes instead of [[#fact|factorizations]] as it's proof of work (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network (DCN) that uses primes instead of [[#fact|factorizations]] as it's proof of work (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a
host:1610609578=92.38.148.60
author:1610609471=
diff:1610609471:1610609459:=4c4%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second [[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second[[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a
host:1610609471=92.38.148.60
author:1610609459=
diff:1610609459:1610609291:=4c4%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second[[https://news.bitcoin.com/no-visa-doesnt-handle-24000-tps-and-neither-does-your-pet-blockchain/|#]], and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a
host:1610609459=92.38.148.60
author:1610609291=
diff:1610609291:1610609228:=40c40%0a%3c # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key using something like Skein 1024 to generate a large random number.%0a---%0a> # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key using something like Skein 1024, to generate a large random number.%0a
host:1610609291=92.38.148.60
author:1610609228=
diff:1610609228:1610608779:=40c40%0a%3c # Next the miner uses a nonce of his choosing, then hashes the nonce with the public key using something like Skein 1024, to generate a large random number.%0a---%0a> # Next the miner uses a nonce of his choosing to hash the public key with, then completes the hash using something like Skein 1024, to generate a large random number.%0a
host:1610609228=92.38.148.60
author:1610608779=
diff:1610608779:1610608617:=9c9%0a%3c "Trust-less" might be a good term for it.  But "trust" is replaced with "faith".  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks affecting a significant percentage of coins besides bitcoin. State actors, given enough incentive such as killing competition with their own digital currencies, might even attack Bitcoin too someday.%0a---%0a> "Trust-less" might be a good term for it.  But "trust" is replaced with "faith".  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks affecting a significant percentage of coins besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a
host:1610608779=92.38.148.60
author:1610608617=
diff:1610608617:1610608336:=20,21c20,21%0a%3c Firstly it is advantageous from a regulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the [[#price|value of a couple sticks of gum]], it is small enough to give pretty good granularity to transactions.%0a%3c %0a---%0a> Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the [[#price|value of a couple sticks of gum]], it is small enough to give pretty good granularity to transactions.%0a> %0a24,25c24,25%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling receives payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in Steam or iTunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferal]] process in the DCN, which is not an accident, since the DCN [[#transferal|transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a%3c %0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferal]] process in the DCN, which is not an accident, since the DCN [[#transferal|transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a> %0a61c61%0a%3c After a collectible is mined it goes either directly to a node for recording, is secretly saved for later use, or the private key is given to a customer who then submits it to the network.  How this transferal of a collectible works is displayed in the diagram below.%0a---%0a> After a collectible is mined it goes either directly to a node for recording, is secretly saved for later use, or the private key is given to a customer who then submits it to the network.  How this transferral of a collectible works is displayed in the diagram below.%0a83c83%0a%3c As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the new public key so they can verify the node received the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the new public key so they can verify the node recieved the request properly.%0a88,89c88,89%0a%3c Firstly you cannot simply tell the network to give a collectible to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via Bluetooth or RFID or QR code, or actually mailing the key or sending over encrypted online communication.%0a%3c %0a---%0a> Firstly you cannot simply tell the network to give a collectible to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via bluetooth or rfid or QR code, or actually mailing the key or sending over encrypted online communication.%0a> %0a148c148%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is un-linkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  Collectibles should be given in person, such as payment via bluetooth or card like rfid, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  Collectibles should be given in person, such as payment via bluetooth or card like rfid, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a156,157c156,157%0a%3c Proof of burn is proving that you made a collectible un-spendable.%0a%3c %0a---%0a> Proof of burn is proving that you made a collectible unspendable.%0a> %0a162c162%0a%3c Because of proof of burn (including [[#dispute|disputes]]) and lost keys, and because the emission is adjusted on Moore's law and not price; the price of each collectible should steadily increase slowly over time.  This is while it stays the same difficulty to mine forever, namely an enthusiast PC-week of work per collectible.%0a---%0a> Because of proof of burn (including [[#dispute|disputes]]) and lost keys, and because the emission is adjusted on moore's law and not price; the price of each collectible should steadily increase slowly over time.  This is while it stays the same difficulty to mine forever, namely an enthusiast PC-week of work per collectible.%0a164,165c164,165%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  Collectibles on the publicnet are not fully fungible, as a feature, due to their trace-ability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], and [[#contract|contracts]]. Out of these, [[#contract|contracts]] are a little different; as all contracts on the network are recorded, not just that one node's.  %0a%3c %0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  Collectibles on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], and [[#contract|contracts]]. Out of these, [[#contract|contracts]] are a little different; as all contracts on the network are recorded, not just that one node's.  %0a> %0a174c174%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectibles they staked on the bad node.  Vouches are nice because you can have the same collectibles staked on your own reputation that you also have staked on another node's reputation, sort of leveraging your stakes.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectables they staked on the bad node.  Vouches are nice because you can have the same collectibles staked on your own reputation that you also have staked on another node's reputation, sort of leveraging your stakes.%0a190,191c190,191%0a%3c * The giver might be able to sign one more message afterwards about his feedback of the receiver.  Whether or not if this is allowed, the giver can always ask their trusted [[#node|node]] to [[#dispute|dispute]] the transaction.%0a%3c %0a---%0a> * The giver might be able to sign one more message afterwards about his feedback of the reciever.  Whether or not if this is allowed, the giver can always ask their trusted [[#node|node]] to [[#dispute|dispute]] the transaction.%0a> %0a210,213c210,213%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked collectibles etc as the case may be. If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node being accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent than a customer getting their money back.%0a%3c %0a%3c If consensus is not reached and the outcome is unfair enough, this could cause a fork in the network, which is OK however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If a fork occurs yet both forks maintain the same [[#requirements|collectible requirements]] for miners and thus the miners support both networks, this is considered a soft fork. If the network itself and the consensus thereof proves itself to be bad, and it is too onerous to maintain a fork that complies with [[#requirements|collectible requirement]] of the other fork(s), a new network/hard fork needs to be created and good customers, miners, and nodes should move to and support the new network exclusively.%0a%3c %0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked coins etc as the case may be. If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent than a customer getting their money back.%0a> %0a> If consensus is not reached and the outcome is unfair enough, this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If a fork occurs yet both forks maintain the same [[#requirements|collectible requirements]] for miners and thus the miners support both networks, this is considered a soft fork. If the network itself and the consensus thereof proves itself to be bad, and it is too onersome to maintain a fork that complies with [[#requirements|collectible requirement]] of the other fork(s), a new network/hard fork needs to be created and good customers, miners, and nodes should move to and support the new network exclusively.%0a> %0a228,229c228,229%0a%3c In a DCN, asymmetrical war can be waged.  Various tactics can be used such as mining decisions, increasing your node's trustworthiness, convincing other nodes to vouch for you, creating convincing disputes, soft forks, and hard forks as a last resort, etc to turn the tide of the network in the favor of truth and fairness.%0a%3c %0a---%0a> In a DCN, asymetrical war can be waged.  Various tactics can be used such as mining decisions, increasing your node's trustworthiness, convincing other nodes to vouch for you, creating convincing disputes, soft forks, and hard forks as a last resort, etc to turn the tide of the network in the favor of truth and fairness.%0a> %0a233,234c233,234%0a%3c 'Hodl'ing customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work/Moore's law.%0a%3c %0a---%0a> 'Hodl'ing customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work/moore's law.%0a> %0a236,237c236,237%0a%3c The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in border-less or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.  %0a%3c %0a---%0a> The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.  %0a> %0a240c240%0a%3c A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and customers choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or pay-walled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a---%0a> A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and customers choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or paywalled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a
host:1610608617=92.38.148.60
author:1610608336=
diff:1610608336:1610604827:=4c4%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant and scale-able to infinite transactions per second, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a
host:1610608336=92.38.148.60
author:1610604827=
diff:1610604827:1610604614:=151c151%0a%3c Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The new owner chooses a public key to change the old one to, and the node allows them to sign over the new public key and old public key using the old private key (notice the signature next to the new public key after the "/"). Presumably they know the private key for the new public key they selected, otherwise it is a [[#burn|burn address]].%0a---%0a> Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key (notice the signature next to the new public key after the "/"), then allows them to change the public key to a new one that they presumably know the private key for (alternatively see [[#burn|proof of burn]]).%0a
host:1610604827=92.38.148.60
author:1610604614=
diff:1610604614:1610604448:=204c204%0a%3c Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist ([[#burn|burn]]) the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked collectible address(es) and even potentially blacklist the staked collectibles of the nodes vouching for the bad node.  %0a---%0a> Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked collectible address(es) and even potentially blacklist the staked collectibles of the nodes vouching for the bad node.  %0a
host:1610604614=92.38.148.60
author:1610604448=
diff:1610604448:1610603706:=217,218d216%0a%3c !!!!!!Dispute format%0a%3c Attach:dispute.png%0a
host:1610604448=92.38.148.60
author:1610603706=
diff:1610603706:1610603656:=153c153%0a%3c Notice also that the bit length is different for each collectible.  This is fine and denotes that they were an acceptable bit length at the time that they were accepted on the network.  They all have the same value to the network.%0a---%0a> Notice also that the bit length is different for each collectible.  This is fine and denotes that they were an acceptable bit length at the time that they were accepted on the network.  They all have the same value to the node.%0a
host:1610603706=92.38.148.60
author:1610603656=
diff:1610603656:1610603565:=153c153%0a%3c Notice also that the bit length is different for each collectible.  This is fine and denotes that they were an acceptable bit length at the time that they were accepted on the network.  They all have the same value to the node.%0a---%0a> Notice also that the bit length is different for each collectible.  This is fine and denotes that they were an acceptable bit length at the time that they were accepted on the network.  They all have the same value.%0a
host:1610603656=92.38.148.60
author:1610603565=
diff:1610603565:1610603433:=152,153d151%0a%3c %0a%3c Notice also that the bit length is different for each collectible.  This is fine and denotes that they were an acceptable bit length at the time that they were accepted on the network.  They all have the same value.%0a
host:1610603565=92.38.148.60
author:1610603433=
diff:1610603433:1610602452:=151c151%0a%3c Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key (notice the signature next to the new public key after the "/"), then allows them to change the public key to a new one that they presumably know the private key for (alternatively see [[#burn|proof of burn]]).%0a---%0a> Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key, then allows them to change the public key to a new one that they presumably know the private key for (alternatively see [[#burn|proof of burn]]).%0a
host:1610603433=92.38.148.60
author:1610602452=
diff:1610602452:1610602218:=229c229%0a%3c 'Hodl'ing customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work/moore's law.%0a---%0a> 'Hodl'ing customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work.%0a
host:1610602452=104.175.54.158
author:1610602218=
diff:1610602218:1610602058:=210c210%0a%3c If consensus is not reached and the outcome is unfair enough, this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If a fork occurs yet both forks maintain the same [[#requirements|collectible requirements]] for miners and thus the miners support both networks, this is considered a soft fork. If the network itself and the consensus thereof proves itself to be bad, and it is too onersome to maintain a fork that complies with [[#requirements|collectible requirement]] of the other fork(s), a new network/hard fork needs to be created and good customers, miners, and nodes should move to and support the new network exclusively.%0a---%0a> If consensus is not reached and the outcome is unfair enough, this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If the network itself and the consensus thereof proves itself to be bad, and it is too onersome to maintain a fork that complies with [[#requirements|collectible requirement]] consensus of the other fork(s), a new network/hard fork needs to be created and good customers, miners, and nodes should move to and support the new network exclusively.%0a
host:1610602218=104.175.54.158
author:1610602058=
diff:1610602058:1610601739:=222,224c222,224%0a%3c While war is allowed in current cryptocurrencies to fight for truth, it is a very symmetric war.  In order to fight the only option you have is to "get rich" and buy more mining power or hard fork.  This is not ideal, and has almost never worked to reverse fraud.  Manual intervention (hard forks) have been the only way hacked coins have been restored in current cryptocurrencies.%0a%3c %0a%3c In a DCN, asymetrical war can be waged.  Various tactics can be used such as mining decisions, increasing your node's trustworthiness, convincing other nodes to vouch for you, creating convincing disputes, soft forks, and hard forks as a last resort, etc to turn the tide of the network in the favor of truth and fairness.%0a---%0a> While there is war allowed in current cryptocurrencies to fight for truth, it is a very symmetric war.  In order to fight the only option you have is to "get rich" and buy more mining power or hard fork.  This is not ideal.%0a> %0a> In a DCN asymetrical war can be waged.  Various tactics can be used such as mining decisions, increasing your node's trustworthiness, convincing other nodes to vouch for you, creating convincing disputes, soft forks, and hard forks as a last resort, etc to turn the tide of the network in the favor of truth and fairness.%0a
host:1610602058=104.175.54.158
author:1610601739=
diff:1610601739:1610601568:=210c210%0a%3c If consensus is not reached and the outcome is unfair enough, this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If the network itself and the consensus thereof proves itself to be bad, and it is too onersome to maintain a fork that complies with [[#requirements|collectible requirement]] consensus of the other fork(s), a new network/hard fork needs to be created and good customers, miners, and nodes should move to and support the new network exclusively.%0a---%0a> If consensus is not reached and the outcome is unfair enough, this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If the network itself and the consensus thereof proves itself to be bad, and it is too onersome to maintain a fork that complies with [[#requirements|collectible requirement]] consensus of the other fork(s), a new network/hard fork needs to be created and good customers should move to and support the new network exclusively.%0a
host:1610601739=104.175.54.158
author:1610601568=
diff:1610601568:1610601360:=208c208%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likewise blacklist the offending collectibles public key, or node's staked coins etc as the case may be. If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  Transactions should not (never say never) be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent than a customer getting their money back.%0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likelwise blacklist the offending collectibles public key, or node's staked coins etc as the case may be. If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  Transactions should never be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent, than a customer getting their money back.%0a
host:1610601568=104.175.54.158
author:1610601360=
diff:1610601360:1610600705:=208,210c208%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute is accepted by other nodes, they would likelwise blacklist the offending collectibles public key, or node's staked coins etc as the case may be. If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  Transactions should never be reversed to prevent incentivizing fraudulent disputes, rather just the collectibles [[#burn|burned]].  Fork's in the network are a risk of disputes, which are more important to prevent, than a customer getting their money back.%0a%3c %0a%3c If consensus is not reached and the outcome is unfair enough, this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If the network itself and the consensus thereof proves itself to be bad, and it is too onersome to maintain a fork that complies with [[#requirements|collectible requirement]] consensus of the other fork(s), a new network/hard fork needs to be created and good customers should move to and support the new network exclusively.%0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If the network itself and the consensus thereof proves itself to be bad, and it is too onersome to maintain a fork that complies with [[#requirements|collectible requirement]] consensus of the other fork(s), a new network/hard fork needs to be created and good customers should move to and support the new network exclusively.%0a
host:1610601360=104.175.54.158
author:1610600705=
diff:1610600705:1610600561:=160c160%0a%3c Because of proof of burn (including [[#dispute|disputes]]) and lost keys, and because the emission is adjusted on moore's law and not price; the price of each collectible should steadily increase slowly over time.  This is while it stays the same difficulty to mine forever, namely an enthusiast PC-week of work per collectible.%0a---%0a> Because of proof of burn and lost keys, and because the emission is adjusted on moore's law and not price; the price of each collectible should steadily increase slowly over time.  This is while it stays the same difficulty to mine forever, namely an enthusiast PC-week of work per collectible.%0a
host:1610600705=104.175.54.158
author:1610600561=
diff:1610600561:1610600098:=159,160d158%0a%3c %0a%3c Because of proof of burn and lost keys, and because the emission is adjusted on moore's law and not price; the price of each collectible should steadily increase slowly over time.  This is while it stays the same difficulty to mine forever, namely an enthusiast PC-week of work per collectible.%0a
host:1610600561=104.175.54.158
author:1610600098=
diff:1610600098:1610586492:=168c168%0a%3c Notice that this node has 5 collectibles staked between 2 different addresses.  Staking is one reason why you would want to have many collectibles under one key, that way you only have to sign once for multiple collectibles. If you are determined to be a "bad node" your staked collectibles would be blacklisted from the other nodes and lost forever, similar to [[#burn|proof of burn]]%0a---%0a> Notice that this node has 5 collectibles staked between 2 different addresses.  Staking is one reason why you would want to have many collectibles under one key, that way you only have to sign once for multiple collectibles.%0a
host:1610600098=104.175.54.158
author:1610586492=
diff:1610586492:1610580915:=200c200%0a%3c Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked collectible address(es) and even potentially blacklist the staked collectibles of the nodes vouching for the bad node.  %0a---%0a> Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked coin address(es) and even potentially blacklist the staked coins of the nodes vouching for the bad node.  %0a
host:1610586492=92.38.148.60
author:1610580915=
diff:1610580915:1610580867:=24c24%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferal]] process in the DCN, which is not an accident, since the DCN [[#transferal|transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferral]] process in the DCN, which is not an accident, since the DCN [[transferal#transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a
host:1610580915=104.175.54.158
author:1610580867=
diff:1610580867:1610580842:=24c24%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferral]] process in the DCN, which is not an accident, since the DCN [[transferal#transferal]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferral]] process in the DCN, which is not an accident, since the DCN [[transferal#transferral]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a
host:1610580867=104.175.54.158
author:1610580842=
diff:1610580842:1610563532:=24c24%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the [[#transferal|transferral]] process in the DCN, which is not an accident, since the DCN [[transferal#transferral]] method is based on this proven account selling method people have been using in online gaming for two decades.%0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the transferral process in the DCN, which is not an accident, since the DCN transferral method is based on this proven account selling method people have been using in online gaming for two decades.%0a
host:1610580842=104.175.54.158
author:1610563532=
diff:1610563532:1610563516:=17,19c17%0a%3c %0a%3c Why collectible and not coin?%0a%3c %0a---%0a> Why collectible and not coin? %0a
host:1610563532=104.175.54.158
author:1610563516=
diff:1610563516:1610563109:=16,18c16%0a%3c A collectible is just another form  of Digital Property [[https://www.naturehacker.org/2017/12/the-future-is-digital-property-dp.html?m=1|#]].%0a%3c Why collectible and not coin? %0a%3c Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the [[#price|value of a couple sticks of gum]], it is small enough to give pretty good granularity to transactions.%0a---%0a> Why collectible and not coin? Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the [[#price|value of a couple sticks of gum]], it is small enough to give pretty good granularity to transactions.%0a
host:1610563516=104.175.54.158
author:1610563109=
diff:1610563109:1610562568:=20c20%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the transferral process in the DCN, which is not an accident, since the DCN transferral method is based on this proven account selling method people have been using in online gaming for two decades.%0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the transferral process in the DCN, which is not an accident as the DCN transferral method was based on this proven account selling method people have been using in online gaming for two decades.%0a
host:1610563109=104.175.54.158
author:1610562568=
diff:1610562568:1610562513:=214c214%0a%3c While there is war allowed in current cryptocurrencies to fight for truth, it is a very symmetric war.  In order to fight the only option you have is to "get rich" and buy more mining power or hard fork.  This is not ideal.%0a---%0a> While there is war allowed in current cryptocurrencies to fight for truth, it is a very symmetric war.  In order to fight the only option for fighting you have is to "get rich" and buy more mining power or hard fork.  This is not ideal.%0a
host:1610562568=104.175.54.158
author:1610562513=
diff:1610562513:1610562106:=212,216d211%0a%3c %0a%3c !!Warfare%0a%3c While there is war allowed in current cryptocurrencies to fight for truth, it is a very symmetric war.  In order to fight the only option for fighting you have is to "get rich" and buy more mining power or hard fork.  This is not ideal.%0a%3c %0a%3c In a DCN asymetrical war can be waged.  Various tactics can be used such as mining decisions, increasing your node's trustworthiness, convincing other nodes to vouch for you, creating convincing disputes, soft forks, and hard forks as a last resort, etc to turn the tide of the network in the favor of truth and fairness.%0a
host:1610562513=104.175.54.158
author:1610562106=
diff:1610562106:1610561961:=223c223%0a%3c A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and customers choosing which nodes to trust completely unhindered.  If either of these three things are limited or throttled or paywalled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a---%0a> A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and customers choosing which nodes to trust completely unhindered.  If either of these two things are limited or throttled or paywalled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a
host:1610562106=104.175.54.158
author:1610561961=
diff:1610561961:1610561816:=223c223%0a%3c A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes and customers choosing which nodes to trust completely unhindered.  If either of these two things are limited or throttled or paywalled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a---%0a> A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes.  If either of these two things are limited or throttled or paywalled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a
host:1610561961=104.175.54.158
author:1610561816=
diff:1610561816:1610561577:=223c223%0a%3c A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes.  If either of these two things are limited or throttled or paywalled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).  It is in the best interest of the brand to leave participation wide open and therefore widely promote the brand and increase the value and ubiquity of the branded collectibles.  Imagine the marketing impact of seeing other brands accepting your brand's collectibles as payment!%0a---%0a> A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes.  If either of these two things are limited or throttled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).%0a
host:1610561816=104.175.54.158
author:1610561577=
diff:1610561577:1610561073:=219,223c219%0a%3c The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.  %0a%3c %0a%3c As sort of a standard branding, companies, groups, or organizations can refer to a DCN that they run as "CollectX" if desired. For example TEEF powder brand can refer to their DCN as "CollectTEEF".  %0a%3c %0a%3c A brand can absolutley "run their own" DCN and that is encouraged, but in order to actually be a DCN they of course have to leave it open to have outsiders mining collectibles on the network and outsiders running nodes.  If either of these two things are limited or throttled in any way, then the system it no longer a DCN, it is then a Central Collectible Network (CCN).%0a---%0a> The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.  As sort of a standard branding, companies, groups,or organizations can refer to a DCN that they run as "CollectX" if desired. For example TEEF powder brand can refer to their DCN as "CollectTEEF".%0a
host:1610561577=104.175.54.158
author:1610561073=
diff:1610561073:1610560817:=202c202%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.  If the network itself and the consensus thereof proves itself to be bad, and it is too onersome to maintain a fork that complies with [[#requirements|collectible requirement]] consensus of the other fork(s), a new network/hard fork needs to be created and good customers should move to and support the new network exclusively.%0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.%0a
host:1610561073=104.175.54.158
author:1610560817=
diff:1610560817:1610560767:=219c219%0a%3c The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.  As sort of a standard branding, companies, groups,or organizations can refer to a DCN that they run as "CollectX" if desired. For example TEEF powder brand can refer to their DCN as "CollectTEEF".%0a---%0a> The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.  As sort of a standard branding, companies can refer to a DCN that they run as "CollectX" if desired. For example TEEF powder brand can refer to their DCN as "CollectTEEF".%0a
host:1610560817=104.175.54.158
author:1610560767=
diff:1610560767:1610560187:=219c219%0a%3c The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.  As sort of a standard branding, companies can refer to a DCN that they run as "CollectX" if desired. For example TEEF powder brand can refer to their DCN as "CollectTEEF".%0a---%0a> The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.%0a
host:1610560767=104.175.54.158
author:1610560187=
diff:1610560187:1610560045:=219c219%0a%3c The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, as a replacement for traditional authority based systems or causing their obsolescence, and any other use.%0a---%0a> The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, and any other use.%0a
host:1610560187=104.175.54.158
author:1610560045=
diff:1610560045:1610559731:=219c219%0a%3c The DCN design is fully open source and no limits are placed on the idea's use.  It can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, and any other use.%0a---%0a> A DCN can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, and any other use.%0a
host:1610560045=104.175.54.158
author:1610559731=
diff:1610559731:1610558943:=204c204%0a%3c Disputes are another service that nodes can provide their customers.  If a customer has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.  The affected customer should provide as much evidence as possible to the node to make a decision on the veracity of the claims.  Accepting disputes from customers can be a premium offering from nodes and would likely be a paid feature and also there could be a limit to the number of disputes a node will hear from a customer in a given time period.%0a---%0a> Disputes are another service that nodes can provide their customers.  If a customer has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.  The affected customer should provide as much evidence as possible to the node to make a decision on the varacity of the claims.  Accepting disputes from customers can be a premium offering from nodes and would likely be a paid feature and also there could be a limit to the number of disputes a node will hear from a customer in a given time period.%0a
host:1610559731=104.175.54.158
author:1610558943=
diff:1610558943:1610558568:=204c204%0a%3c Disputes are another service that nodes can provide their customers.  If a customer has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.  The affected customer should provide as much evidence as possible to the node to make a decision on the varacity of the claims.  Accepting disputes from customers can be a premium offering from nodes and would likely be a paid feature and also there could be a limit to the number of disputes a node will hear from a customer in a given time period.%0a---%0a> Disputes are another service that nodes can provide their customers.  If a customer has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.%0a
host:1610558943=104.175.54.158
author:1610558568=
diff:1610558568:1610558279:=176c176%0a%3c If a contract is breached, a [[#dispute|dispute]] can be logged by node(s) and appropriate action taken.  It should be noted though that a dispute should not revert ownership of the collectible back to the giver, but should rather just blacklist the collectible entirely.  This is to remove incentive of a giver to fraudulently dispute transactions. In this way the settlement for a dispute is splitting the disputed value among all collectible holders, in the same way as [[#burn|proof of burn]].%0a---%0a> If a contract is breached, a [[#dispute|dispute]] can be logged by node(s) and appropriate action taken.  It should be noted though that a dispute should not revert ownership of the collectible back to the giver, but should rather just blacklist the collectible entirely.  This is to remove incentive of a giver to fraudulently dispute transactions.%0a
host:1610558568=104.175.54.158
author:1610558279=
diff:1610558279:1610557913:=202c202%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be affected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.%0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be effected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.%0a
host:1610558279=104.175.54.158
author:1610557913=
diff:1610557913:1610557702:=200c200%0a%3c The disputing node would write a reasoning for the dispute.  Just like a nodes vouches and staked collectibles, a dispute should be signed for on-demand by the disputing node. %0a---%0a> The disputing node would write a reasoning for the dispute.  Just like a nodes vouches and staked coins, a dispute should be signed for on-demand by the disputing node. %0a
host:1610557913=104.175.54.158
author:1610557702=
diff:1610557702:1610557270:=194,200c194%0a%3c To be a trustworthy node, you have to be willing to go to war for the truth and your customers.  Agreeableness is great and can enhance consensus, but consensus on a lie is worthless and harms everyone. %0a%3c %0a%3c Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked coin address(es) and even potentially blacklist the staked coins of the nodes vouching for the bad node.  %0a%3c %0a%3c Depending on the severity of the transgression, the disputing node could also blacklist the offending IP temporarily because they do not trust syncing transactions with the bad node.  I suggest the IP ban is not permanent since there are only a limited amount of IP's available.  A nine month IP ban should suffice.%0a%3c %0a%3c The disputing node would write a reasoning for the dispute.  Just like a nodes vouches and staked coins, a dispute should be signed for on-demand by the disputing node. %0a---%0a> Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked coin address(es) and even potentially blacklist the staked coins of the nodes vouching for the bad node.  The disputing node would write a reasoning for the dispute.  Just like a nodes vouches and staked coins, a dispute should be signed for on-demand by the disputing node. %0a
host:1610557702=104.175.54.158
author:1610557270=
diff:1610557270:1610557237:=213c213%0a%3c A DCN can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions including tipping, in internal company or technological systems, in social media for monetization of the platform or of creators content, and any other use.%0a---%0a> A DCN can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions, in internal company or technological systems, in social media for monetization of the platform or of creators content, and any other use.%0a
host:1610557270=104.175.54.158
author:1610557237=
diff:1610557237:1610557191:=213c213%0a%3c A DCN can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions, in internal company or technological systems, in social media for monetization of the platform or of creators content, and any other use.%0a---%0a> A DCN can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions, in internal company systems, in social media for monetization of the platform or of creators content, and any other use.%0a
host:1610557237=104.175.54.158
author:1610557191=
diff:1610557191:1610556980:=211,213d210%0a%3c %0a%3c !!Uses%0a%3c A DCN can be used for any purpose and integrated into any system desired.  It can be used in games, in borderless or local payment processors or other transactions, in internal company systems, in social media for monetization of the platform or of creators content, and any other use.%0a
host:1610557191=104.175.54.158
author:1610556980=
diff:1610556980:1610556731:=20c20%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the transferral process in the DCN, which is not an accident as the DCN transferral method was based on this proven account selling method people have been using in online gaming for two decades.%0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the transferral process in the DCN, which is not an accident as this method was based on this proven account selling method people use in online gaming.%0a
host:1610556980=104.175.54.158
author:1610556731=
diff:1610556731:1610556618:=20c20%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the account now.  This is nearly identical to the transferral process in the DCN, which is not an accident as this method was based on this proven account selling method people use in online gaming.%0a---%0a> In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the acfount now.  This is neqrly identical to the transferral process in the DCN, which is not an accident as this method was based on this proven method people use for account selling.%0a
host:1610556731=104.175.54.158
author:1610556618=
diff:1610556618:1610556573:=20c20%0a%3c In online gaming there is an illicit but proven item/account trading methodology that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the acfount now.  This is neqrly identical to the transferral process in the DCN, which is not an accident as this method was based on this proven method people use for account selling.%0a---%0a> In online gaming there are illicit item/account trading that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the acfount now.  This is neqrly identical to the transferral process in the DCN, which is not an accident as this method was based on this proven method people use for account selling.%0a
host:1610556618=104.175.54.158
author:1610556573=
diff:1610556573:1610556479:=18c18%0a%3c A collectible on our network is like a password.  In reality it is the private key (password) of a public key that has a challenge based on it completed with proof of work.  The proof of completed challenge (proof of work) is inextricably linked to the given public and private key and cannot be separated from it.%0a---%0a> A collectible on our network is like a password.  In reality it is the private key (password) of a public key that has a challenge based on it completed with proof of work.%0a
host:1610556573=104.175.54.158
author:1610556479=
diff:1610556479:1610555355:=17,20d16%0a%3c %0a%3c A collectible on our network is like a password.  In reality it is the private key (password) of a public key that has a challenge based on it completed with proof of work.%0a%3c %0a%3c In online gaming there are illicit item/account trading that works in a very similar way as our collectible network.  What people have done is the person selling recieves payment usually in the form of a collectible, a gift card that has a special code underneath a scratch-off layer.  Often times the buyer, instead of physically sending this collectible card intact, will scratch off the layer and take a picture of the code and send it to the seller.  The account seller then deposits this code into their account in steam or itunes or similar thus redeeming it so the buyer can no longer use it.  In this case usually the seller has reputation and thus the buyer trusts them that once they redeem the code they will send the account password. Next the seller sends the password of the account (including the username if it is unknown) to the buyer.  Now both the seller and the buyer can log in to the account.  So to complete the transfer the buyer now requests a password change so only they can access the acfount now.  This is neqrly identical to the transferral process in the DCN, which is not an accident as this method was based on this proven method people use for account selling.%0a
host:1610556479=104.175.54.158
author:1610555355=
diff:1610555355:1610554947:=53c53%0a%3c After a collectible is mined it goes either directly to a node for recording, is secretly saved for later use, or the private key is given to a customer who then submits it to the network.  How this transferral of a collectible works is displayed in the diagram below.%0a---%0a> After a collectible is mined it goes either directly to a node for recording, is saved for later use, or the private key is given to a customer who then submits it to the network.  How this works is displayed in the diagram below.%0a
host:1610555355=104.175.54.158
author:1610554947=
diff:1610554947:1610551819:=50c50%0a%3c Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.  This can utilize built in operating system features [[https://medium.com/@thyagsundaramoorthy/hashing-and-public-key-cryptography-for-beginners-292aaf14efae|#]].  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a---%0a> Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a
host:1610554947=104.175.54.158
author:1610551819=
diff:1610551819:1610540603:=15c15%0a%3c !!Collectible[[#collect]]%0a---%0a> !!Collectible%0a
host:1610551819=104.175.54.158
author:1610540603=
diff:1610540603:1610540314:=172c172%0a%3c If a contract is breached, a [[#dispute|dispute]] can be logged by node(s) and appropriate action taken.  It should be noted though that a dispute should not revert ownership of the collectible back to the giver, but should rather just blacklist the collectible entirely.  This is to remove incentive of a giver to fraudulently dispute transactions.%0a---%0a> If a contract is breached, a [[#dispute|dispute]] can be logged by node(s) and appropriate action taken.%0a
host:1610540603=104.175.54.158
author:1610540314=
diff:1610540314:1610540208:=183c183%0a%3c # Next the giver sends his private key of the collectible to the receiver.  This is done outside of the network hence the dashed line.%0a---%0a> # Next the giver sends his private key of the collectible to the receiver.  %0a
host:1610540314=104.175.54.158
author:1610540208=
diff:1610540208:1610540103:=176c176%0a%3c * If this was a node to node contract then there can also be the node IP address or other identifying info listed in the contract, and/or this can go in the part of the publicnet that the node is signing to verify.%0a---%0a> * If this was a node to node contract then there can also be the node IP address or other identifying info listed in the contract.%0a
host:1610540208=104.175.54.158
author:1610540103=
diff:1610540103:1610540024:=178c178%0a%3c * The giver might be able to sign one more message afterwards about his feedback of the reciever.  Whether or not if this is allowed, the giver can always ask their trusted [[#node|node]] to [[#dispute|dispute]] the transaction.%0a---%0a> * The giver might be able to sign one more message afterwards about his feedback of the reciever.  Whether or not if this is allowed, the giver can always ask their trusted [[#node|node]] to dispute the transaction.%0a
host:1610540103=104.175.54.158
author:1610540024=
diff:1610540024:1610539890:=178,179c178%0a%3c * The giver might be able to sign one more message afterwards about his feedback of the reciever.  Whether or not if this is allowed, the giver can always ask their trusted [[#node|node]] to dispute the transaction.%0a%3c %0a---%0a> * The giver might be able to sign one more message afterwards about his feedback of the reciever.%0a
host:1610540024=104.175.54.158
author:1610539890=
diff:1610539890:1610539638:=175,178c175%0a%3c In addition to what is listed in the diagram above:%0a%3c * If this was a node to node contract then there can also be the node IP address or other identifying info listed in the contract.%0a%3c %0a%3c * The giver might be able to sign one more message afterwards about his feedback of the reciever.%0a---%0a> In addition to what is listed in the diagram above, if this was a node to node contract then there can also be the node IP address or other identifying info listed in the contract. Also the giver might  be able to sign one more message afterwards about his feedback of the reciever.%0a
host:1610539890=104.175.54.158
author:1610539638=
diff:1610539638:1610539350:=170c170%0a%3c Either one of the nodes or both could publish contracts on behalf of one of their customers.  In other words, you do not need to own your own node to make contracts, but you do need your own node to have [[#stake|staked collectibles]] or [[#vouch|vouches]] or [[#dispute|disputes]].  The reason for this is contracts are linked to a collectible and published whereas [[#stake|staked collectibles]] and [[#vouch|vouches]] and [[#dispute|disputes]] are linked to a a node's public ip/identity.%0a---%0a> Also either one of the nodes could be acting on behalf of one of their customers to publish these contracts for them.  In other words, you do not need to own your own node to make contracts, but you do need your own node to have staked collectibles or vouches.  The reason for this is contracts are linked to a collectible and published whereas staked collectibles and vouches are linked to a a node's public ip/identity.%0a
host:1610539638=104.175.54.158
author:1610539350=
diff:1610539350:1610539300:=168c168%0a%3c Since contracts do not need to be signed for on-demand, unlike vouches and staked collectibles, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these collectibles are now tied to identifying information and, as such, are not fully fungible.  Also all contracts on the entire network need to be recorded by every node.  This is in contrast with [[#stake|staked collectibles]], [[#vouch|vouches]], and [[#dispute|disputes]]; which only pertain to one [[#node|node]].%0a---%0a> Since contracts do not need to be signed for, on-demand, unlike vouches and staked collectibles, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these collectibles are now tied to identifying information and, as such, are not fully fungible.  Also all contracts on the entire network need to be recorded by every node.  This is in contrast with [[#stake|staked collectibles]], [[#vouch|vouches]], and [[#dispute|disputes]]; which only pertain to one [[#node|node]].%0a
host:1610539350=104.175.54.158
author:1610539300=
diff:1610539300:1610539199:=168c168%0a%3c Since contracts do not need to be signed for, on-demand, unlike vouches and staked collectibles, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these collectibles are now tied to identifying information and, as such, are not fully fungible.  Also all contracts on the entire network need to be recorded by every node.  This is in contrast with [[#stake|staked collectibles]], [[#vouch|vouches]], and [[#dispute|disputes]]; which only pertain to one [[#node|node]].%0a---%0a> Since contracts do not need to be signed for, on-demand, unlike vouches and staked collectibles, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these collectibles are now tied to identifying information and, as such, are not fully fungible.  Also all contract on the entire network need to be recorded by every node.  This is in contrast with [[#stake|staked collectibles]], [[#vouch|vouches]], and [[#dispute|disputes]]; which only pertain to one [[#node|node]].%0a
host:1610539300=104.175.54.158
author:1610539199=
diff:1610539199:1610538155:=168c168%0a%3c Since contracts do not need to be signed for, on-demand, unlike vouches and staked collectibles, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these collectibles are now tied to identifying information and, as such, are not fully fungible.  Also all contract on the entire network need to be recorded by every node.  This is in contrast with [[#stake|staked collectibles]], [[#vouch|vouches]], and [[#dispute|disputes]]; which only pertain to one [[#node|node]].%0a---%0a> Since contracts do not need to be signed for, on-demand, unlike vouches and staked collectibles, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these collectibles are now tied to identifying information and, as such, are not fully fungible.  %0a
host:1610539199=104.175.54.158
author:1610538155=
diff:1610538155:1610538066:=123c123%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2 of the bit length. The maximum size should be either 1/2 the bit length or one bit more than 1/2 of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2 of the bit length. The maximum size should be either 1/2 the bit length and one bit more than 1/2 of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610538155=104.175.54.158
author:1610538066=
diff:1610538066:1610537477:=123c123%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2 of the bit length. The maximum size should be either 1/2 the bit length and one bit more than 1/2 of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610538066=104.175.54.158
author:1610537477=
diff:1610537477:1610536991:=84c84%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the [[#public|publicnet]] and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the publicnet and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610537477=104.175.54.158
author:1610536991=
diff:1610536991:1610536342:=4c4%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, transactions are not time-gated and can be near instant, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a
host:1610536991=104.175.54.158
author:1610536342=
diff:1610536342:1610536128:=188c188%0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork might be effected depending on how much of the network went one way or another and whether they start setting different [[#requirements|collectible requirements]].  However this can be much less upsetting than a fork in a current cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.%0a---%0a> Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork could be effected depending on how much of the network went one way or another.  However this will be much less upsetting than a fork in a cureent cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.%0a
host:1610536342=104.175.54.158
author:1610536128=
diff:1610536128:1610535718:=186,188c186,188%0a%3c Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked coin address(es) and even potentially blacklist the staked coins of the nodes vouching for the bad node.  The disputing node would write a reasoning for the dispute.  Just like a nodes vouches and staked coins, a dispute should be signed for on-demand by the disputing node. %0a%3c %0a%3c Nodes can also stake collectibles on a dispute, saying they are confident that the node is a bad actor to stake their own collectibles on the claim.  If the dispute claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the node bieng accused of wrongdoing.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork could be effected depending on how much of the network went one way or another.  However this will be much less upsetting than a fork in a cureent cryptocurrency like bitcoin, because in a DCN, miners can still provide their mined collectibles to both of the networks, presuming the nodes do not change the public key requirements of the collectibles they accept.  In any case, a fork in a DCN network does not necessarily imply a fork in the mining power supporting the network.%0a---%0a> Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked coin address(es) and even potentially blacklist the staked coins of the vouchers of the bad node.  The disputing node would write a reasoning for the dispute.  Just like a nodes vouches and staked coins, a dispute should be signed for on-demand by the disputing node. %0a> %0a> Nodes can also stake collectibkes on a dispute, saying they are co fident that the node is a bad actor to stake their own coins on the claim.  If the claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the disputee's.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork could be effected depending on how much of the network went one way or another.%0a
host:1610536128=104.175.54.158
author:1610535718=
diff:1610535718:1610535316:=188,189d187%0a%3c Nodes can also stake collectibkes on a dispute, saying they are co fident that the node is a bad actor to stake their own coins on the claim.  If the claim is rejected by other nodes on the network, they would blacklist the disputers staked collectibles instead of the disputee's.  If unfair enough this could cause a fork in the network, which is ok however value/fungibility of collectibles added to the ledgers after the fork could be effected depending on how much of the network went one way or another.%0a%3c %0a191,192d188%0a%3c %0a%3c Nodes are constantly at war and that shows that the network is alive and robust.%0a
host:1610535718=104.175.54.158
author:1610535316=
diff:1610535316:1610535240:=162c162%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectables they staked on the bad node.  Vouches are nice because you can have the same collectibles staked on your own reputation that you also have staked on another node's reputation, sort of leveraging your stakes.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectables they staked on the bad node.  Vouches are nice because you can have the same commectibles staked on your reputation that you also hqve staked on a bad node's reputation, sort of leveraging your stakes.%0a
host:1610535316=104.175.54.158
author:1610535240=
diff:1610535240:1610534915:=162c162%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also other nodes that vouched for the bad node would also loose the collectables they staked on the bad node.  Vouches are nice because you can have the same commectibles staked on your reputation that you also hqve staked on a bad node's reputation, sort of leveraging your stakes.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also the collectibles that other nodes vouched for them.%0a
host:1610535240=104.175.54.158
author:1610534915=
diff:1610534915:1610534674:=166c166%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to 'node y' for expenses". Then when node y receives the private key for the collectible from you, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as a signed acknowledgement of the contract and by accepting the payment they are accepting the terms.  The reciever should leave a memo like: "accepting as full payment from customer".%0a---%0a> Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to 'node y' for expenses". Then when node y receives the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as a signed acknowledgement of the contract and by accepting the payment they are accepting the terms.  The reciever should leave a memo like: "accepting as full payment from customer".%0a
host:1610534915=104.175.54.158
author:1610534674=
diff:1610534674:1610534464:=152,154c152%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  Collectibles on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], and [[#contract|contracts]]. Out of these, [[#contract|contracts]] are a little different; as all contracts on the network are recorded, not just that one node's.  %0a%3c %0a%3c If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  Collectibles on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], and [[#contract|contracts]]. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a
host:1610534674=104.175.54.158
author:1610534464=
diff:1610534464:1610534374:=163c163%0a%3c !!!!!Contracts[[#contract]]%0a---%0a> !!!!!Contracts%0a
host:1610534464=104.175.54.158
author:1610534374=
diff:1610534374:1610534050:=152c152%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  Collectibles on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes [[#stake|staked collectibles]], [[#vouch|vouches]], [[#dispute|disputes]], and [[#contract|contracts]]. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  Collectibles on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked collectibles and vouches and the contracts of theirs and their customers. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a
host:1610534374=104.175.54.158
author:1610534050=
diff:1610534050:1610533308:=169,170d168%0a%3c %0a%3c If a contract is breached, a [[#dispute|dispute]] can be logged by node(s) and appropriate action taken.%0a184,186d181%0a%3c Disputes are like reverse vouches.  If a node or contractee fails to meet obligations in the eyes of another node, that node can dispute the party.  In the case of a non-node contract, the disputing node would blacklist the public key of the bad actors collectible.  In the case of a node to node dispute, the disputing node would blacklist the bad nodes staked coin address(es) and even potentially blacklist the staked coins of the vouchers of the bad node.  The disputing node would write a reasoning for the dispute.  Just like a nodes vouches and staked coins, a dispute should be signed for on-demand by the disputing node. %0a%3c %0a%3c Disputes are another service that nodes can provide their customers.  If a customer has a bad experience with a node or contractee, they can make the case to their trusted node to dispute the party.%0a
host:1610534050=104.175.54.158
author:1610533308=
diff:1610533308:1610532990:=180,181d179%0a%3c %0a%3c !!!!!Disputes[[#dispute]]%0a
host:1610533308=104.175.54.158
author:1610532990=
diff:1610532990:1610517581:=171,172d170%0a%3c In addition to what is listed in the diagram above, if this was a node to node contract then there can also be the node IP address or other identifying info listed in the contract. Also the giver might  be able to sign one more message afterwards about his feedback of the reciever.%0a%3c Here is an  explanation of the diagram:%0a
host:1610532990=104.175.54.158
author:1610517581=
diff:1610517581:1610517328:=143c143%0a%3c Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key, then allows them to change the public key to a new one that they presumably know the private key for (alternatively see [[#burn|proof of burn]]).%0a---%0a> Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key, then allows them to change the public key to a new one that they presumably know the private key for (alternatively see [[#burn|proof of burn]]).  The customer can then verify that they can sign for the new private key in order to prove ownership if desired.%0a
host:1610517581=104.175.54.158
author:1610517328=
diff:1610517328:1610517133:=140c140%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|publicnet]]).  Collectibles should be given in person, such as payment via bluetooth or card like rfid, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|public net]]).  Collectibles should be given in person, such as payment via bluetooth or card like rfid, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a
host:1610517328=104.175.54.158
author:1610517133=
diff:1610517133:1610517053:=136c136%0a%3c The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a [[#private|Privatenet]] and [[#public|Publicnet]].%0a---%0a> The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a Privatenet and Publicnet.%0a
host:1610517133=104.175.54.158
author:1610517053=
diff:1610517053:1610517012:=16c16%0a%3c Why collectible and not coin? Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the [[#price|value of a couple sticks of gum]], it is small enough to give pretty good granularity to transactions.%0a---%0a> Why collectible and not coin? Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the value of a couple sticks of gum, it is small enough to give pretty good granularity to transactions.%0a
host:1610517053=104.175.54.158
author:1610517012=
diff:1610517012:1610516410:=133c133%0a%3c !!!!Determining Price[[#price]]%0a---%0a> !!!!Determining Price%0a
host:1610517012=104.175.54.158
author:1610516410=
diff:1610516410:1610516085:=96c96%0a%3c Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].  I don't see why this requirement cannot change over time, to make network wide collision searches even less effective.  This changing of the key format over time could also lead to old collectibles having a higher value than new ones due to rarity.  This fits with the spirit of collectibles but would harm fungibility.  Again this is up to the nodes to decide.%0a---%0a> Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].  I don't see why this requirement cannot change over time, to make network wide collision searches even less effective.%0a
host:1610516410=104.175.54.158
author:1610516085=
diff:1610516085:1610516024:=84c84%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the publicnet and may not be able to be split up again and will likely loose value and fungibility.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the publicnet and may not be able to be split up again.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610516085=104.175.54.158
author:1610516024=
diff:1610516024:1610515934:=84c84%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even if it is never split, there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the publicnet and may not be able to be split up again.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even jf not split there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the publicnet and may not be able to be split up again.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610516024=104.175.54.158
author:1610515934=
diff:1610515934:1610515399:=84c84%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is since it likely cannot be easily split up into smaller pieces ever again without having traceable links to the other collectibles it was at one time joined to. Also even jf not split there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning that the collectible(s) would be forever relegated to the publicnet and may not be able to be split up again.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is (since it [likely] cannot be easily split up into smaller pieces ever again) and because there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610515934=104.175.54.158
author:1610515399=
diff:1610515399:1610515191:=80c80%0a%3c Firstly you cannot simply tell the network to give a collectible to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via bluetooth or rfid or QR code, or actually mailing the key or sending over encrypted online communication.%0a---%0a> Firstly you cannot simply tell the network to give a collectible to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via bluetooth or rfidm or QR code, or actually mailing the key or sending over encrypted online communication.%0a
host:1610515399=104.175.54.158
author:1610515191=
diff:1610515191:1610515109:=13c13%0a%3c Node selection by the customer will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a---%0a> Node selection will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a
host:1610515191=104.175.54.158
author:1610515109=
diff:1610515109:1610515063:=16c16%0a%3c Why collectible and not coin? Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the value of a couple sticks of gum, it is small enough to give pretty good granularity to transactions.%0a---%0a> Why collectible and not coin? Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the value of a couple sticks of gum, it is small enough to give pretty good granularity to payments.%0a
host:1610515109=104.175.54.158
author:1610515063=
diff:1610515063:1610514950:=16c16%0a%3c Why collectible and not coin? Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly "collectible" is a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the value of a couple sticks of gum, it is small enough to give pretty good granularity to payments.%0a---%0a> Why collectible and not coin? Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly collectible are a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the value of a couple sticks of gum, it is small enough to give pretty good granularity to payments.%0a
host:1610515063=104.175.54.158
author:1610514950=
diff:1610514950:1610513747:=14,16d13%0a%3c %0a%3c !!Collectible%0a%3c Why collectible and not coin? Firstly it is advantageous from a reglulation standpoint to use collectibles instead of currency since there are less regulations on them.  Secondly collectible are a more accurate term for our network.  Collectibles by nature cannot be divided and each one takes work to produce.  This is the case with our network.  Each mining reward is indivisible and must be  traded whole.  With each collectible roughly the value of a couple sticks of gum, it is small enough to give pretty good granularity to payments.%0a
host:1610514950=104.175.54.158
author:1610513747=
diff:1610513747:1610513433:=168,174d167%0a%3c # First the giver has a collectible with a public key that he owns the private key to.  Then he writes a message.  Next he signs the message and public key with his private key.  He sends this to the node(s).  %0a%3c %0a%3c # Next the giver sends his private key of the collectible to the receiver.  %0a%3c %0a%3c # The receiver then creates a new desired public key for the collectible.  She also writes a message.  She then signs the entire transaction with private key of her newly desired public key%0a%3c %0a%3c # The receiver also signs it with the giver's private key to prove she owns it.%0a
host:1610513747=107.181.177.135
author:1610513433=
diff:1610513433:1610513416:=167c167%0a%3c %25width=750px%25Attach:contracts.png%0a---%0a> %25width=1000px%25Attach:contracts.png%0a
host:1610513433=107.181.177.135
author:1610513416=
diff:1610513416:1610513397:=167c167%0a%3c %25width=1000px%25Attach:contracts.png%0a---%0a> %25width=500px%25Attach:contracts.png%0a
host:1610513416=107.181.177.135
author:1610513397=
diff:1610513397:1610513084:=167c167%0a%3c %25width=500px%25Attach:contracts.png%0a---%0a> Attach:contracts.png%0a
host:1610513397=107.181.177.135
author:1610513084=
diff:1610513084:1610505285:=166,167d165%0a%3c !!!!!!Contracts format%0a%3c Attach:contracts.png%0a
host:1610513084=107.181.177.135
author:1610505285=
diff:1610505285:1610505194:=149c149%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of collectibles for purposes of [[#node|node]] staking for example.  Collectibles on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked collectibles and vouches and the contracts of theirs and their customers. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and vouches and the contracts of theirs and their customers. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a152c152%0a%3c Staked collectibles are collectibles that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked collectibles they should provide this (sign for their key(s)) so that they come off as trustworthy.  See also [[#vouch|vouches]].%0a---%0a> Staked collectibles are collectibles that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked coins they should provide this (sign for their key(s)) so that they come off as trustworthy.  See also [[#vouch|vouches]].%0a157c157%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked collectibles, but also the collectibles that other nodes vouched for them.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked coins, but also the coins that other nodes vouched for them.%0a163,165c163,165%0a%3c Since contracts do not need to be signed for, on-demand, unlike vouches and staked collectibles, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these collectibles are now tied to identifying information and, as such, are not fully fungible.  %0a%3c %0a%3c Also either one of the nodes could be acting on behalf of one of their customers to publish these contracts for them.  In other words, you do not need to own your own node to make contracts, but you do need your own node to have staked collectibles or vouches.  The reason for this is contracts are linked to a collectible and published whereas staked collectibles and vouches are linked to a a node's public ip/identity.%0a---%0a> Since contracts do not need to be signed for, on-demand, unlike vouches and staked coins, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these coins are now tied to identifying information and, as such, are not fully fungible.  %0a> %0a> Also either one of the nodes could be acting on behalf of one of their customers to publish these contracts for them.  In other words, you do not need to own your own node to make contracts, but you do need your own node to have staked coins or vouches.  The reason for this is contracts are linked to a collectible and published whereas staked coins and vouches are linked to a a node's public ip/identity.%0a
host:1610505285=107.181.177.135
author:1610505194=
diff:1610505194:1610505137:=124,128c124,128%0a%3c The nodes, by setting and enforcing the [[#length|bit length]] of the number that miners factor (difficulty), emission of the collectible is controlled.%0a%3c %0a%3c The emission has no upper limit.  We believe that miners, nodes, and customers are all essential, and always essential.  And if emission is ever throttled, then that is saying we want miners to quit, which we never do.  Emission must be able to scale up with more people joining/using the network and demand, just like if there is more gold demand there will be more gold mined.%0a%3c %0a%3c Emission is controlled that for every enthusiast PC worth of computing power that is on earth mining, there will be one collectible added to the ledger per week.  So if the world has 5,000 PC's worth of power mining the collectible, then 5,000 collectibles will be added to the ledger every week.  See [[#ledger|ledger]] for some calculations predicting emission. This will keep the value of the collectible quite stable as long as the nodes are controlling difficulty well and the amount of miners will scale up with demand for the collectibles.%0a---%0a> The nodes, by setting and enforcing the [[#length|bit length]] of the number that miners factor (difficulty), emission of the coin is controlled.%0a> %0a> The emission has no upper limit.  We believe that miners, nodes, and customers are all essential, and always essential.  And if emmission is ever throttled, then that is saying we want miners to quit, which we never do.  Emission must be able to scale up with more people joining/using the network and demand, just like if there is more gold demand there will be more gold mined.%0a> %0a> Emission is controlled that for every enthusiast PC worth of computing power that is on earth mining, there will be one collectible added to the ledger per week.  So if the world has 5,000 PC's worth of power mining the collectible, then 5,000 collectibles will be added to the ledger every week.  See [[#ledger|ledger]] for some calculations predicting emission. This will keep the value of the coin quite stable as long as the nodes are controlling difficulty well and the amount of miners will scale up with demand for the collectibles.%0a
host:1610505194=107.181.177.135
author:1610505137=
diff:1610505137:1610505112:=89c89%0a%3c Nodes can stake collectibles, get other nodes to vouch for them, set good policies, and be responsive to customers, to build trust with the community.%0a---%0a> Nodes can stake coins, get other nodes to vouch for them, set good policies, and be responsive to customers, to build trust with the community.%0a
host:1610505137=107.181.177.135
author:1610505112=
diff:1610505112:1610505070:=81c81%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple collectibles under one public key except for reasons of [[#stake|staking]].  The more collectibles in a public key, the less fungible it is (since it [likely] cannot be easily split up into smaller pieces ever again) and because there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple coins under one public key except for reasons of [[#stake|staking]].  The more coins in a public key, the less fungible it is (since it [likely] cannot be easily split up into smaller pieces ever again) and because there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a
host:1610505112=107.181.177.135
author:1610505070=
diff:1610505070:1610504914:=67c67%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake collectibles (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a
host:1610505070=107.181.177.135
author:1610504914=
diff:1610504914:1610504897:=13c13%0a%3c Node selection will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the future of the network.%0a---%0a> Node selection will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the network.%0a
host:1610504914=107.181.177.135
author:1610504897=
diff:1610504897:1610504782:=13c13%0a%3c Node selection will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistently good actor that has put a lot at stake in the network.%0a---%0a> Node selection will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistently good actor.%0a
host:1610504897=107.181.177.135
author:1610504782=
diff:1610504782:1610504717:=9c9%0a%3c "Trust-less" might be a good term for it.  But "trust" is replaced with "faith".  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks affecting a significant percentage of coins besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a---%0a> "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks affecting a significant percentage of coins besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a
host:1610504782=107.181.177.135
author:1610504717=
diff:1610504717:1610504683:=13c13%0a%3c Node selection will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistently good actor.%0a---%0a> Node selection will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistent good actor.%0a
host:1610504717=107.181.177.135
author:1610504683=
diff:1610504683:1610504522:=4,5c4,5%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  %0a%3c %0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  Since reputation is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], it is difficult to know exactly what you must do to improve your reputation other than being "good".%0a> %0a12,13d11%0a%3c %0a%3c Node selection will be primarily based on reputation. Reputation is a combination of many factors, and is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], so it is difficult to know exactly what you must do to improve your reputation other than being "good".  This makes it difficult for the nodes to carry out an attack, since reputation is slow to build and is not formulaic on how to achieve it other than being a consistent good actor.%0a
host:1610504683=107.181.177.135
author:1610504522=
diff:1610504522:1610504122:=4c4%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.  Since reputation is based on human [[https://en.wikipedia.org/wiki/Heuristic|heuristics]], it is difficult to know exactly what you must do to improve your reputation other than being "good".%0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.%0a
host:1610504522=107.181.177.135
author:1610504122=
diff:1610504122:1610503933:=39c39%0a%3c # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]], then it is valid.  Alternatively the miner can submit the digital collectible to the [[#node|network of nodes]] immediately for safekeeping and so it always keeps it's value.%0a---%0a> # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]], then it is valid.  Alternatively the miner can submit the digital collectible to the [[#node|network of nodes]] immediatly for safekeeping and so it always keeps it's value.%0a
host:1610504122=107.181.177.135
author:1610503933=
diff:1610503933:1610494771:=4c4%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.  Reputation will be a big part of node selection for customers.%0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1610503933=107.181.177.135
author:1610494771=
diff:1610494771:1610439028:=159,161c159,161%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to 'node y' for expenses". Then when node y receives the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as a signed acknowledgement of the contract and by accepting the payment they are accepting the terms.  The reciever should leave a memo like: "accepting as full payment from customer".%0a%3c %0a%3c Since contracts do not need to be signed for, on-demand, unlike vouches and staked coins, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these coins are now tied to identifying information and, as such, are not fully fungible.  %0a---%0a> Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to 'node y' for expenses". Then when node y receives the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowledgement of the contract and by accepting the payment they are accepting the terms.  They should leave a memo like: "accepting as full payment from customer".%0a> %0a> Since contracts do not need to be signed for, on-demand, unlike vouches and staked coins, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these coins are now tied to an identity, the two nodes, and are not fully fungible.  %0a
host:1610494771=104.175.54.158
author:1610439028=
diff:1610439028:1610438508:=75c75%0a%3c Firstly you cannot simply tell the network to give a collectible to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via bluetooth or rfidm or QR code, or actually mailing the key or sending over encrypted online communication.%0a---%0a> Firstly you cannot simply tell the network to give a collectible to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via bluetooth or rfid, or actually mailing the key or sending over encrypted online communication.%0a
host:1610439028=92.38.148.60
author:1610438508=
diff:1610438508:1610438366:=145c145%0a%3c Proof of burn is accomplished by [[#keychange|transferring]] the collectible to a public key that provably no one could own the private key to.  Public keys are hashed from private keys, so if you create the public key "PaulWalkerisStillAlive1", it is impossible that you just so happen to have the private key to that public key.  So signing that you change the key to that burn address, you are verifying that the collectible is lost forever.  Proof of burn can even be used in this way for posting short messages for just the cost of burning a collectible.%0a---%0a> Proof of burn is accomplished by transferring the collectible to a public key that provably no one could own the private key to.  Public keys are hashed from private keys, so if you create the public key "PaulWalkerisStillAlive1", it is impossible that you just so happen to have the private key to that public key.  So signing that you change the key to that burn address, you are verifying that the collectible is lost forever.  Proof of burn can even be used in this way for posting short messages for just the cost of burning a collectible.%0a
host:1610438508=92.38.148.60
author:1610438366=
diff:1610438366:1610438270:=135c135%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|public net]]).  Collectibles should be given in person, such as payment via bluetooth or card like rfid, QR code, or magnetic strip; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|public net]]).  Collectibles should be given in person, such as payment via bluetooth or card; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a
host:1610438366=92.38.148.60
author:1610438270=
diff:1610438270:1610438160:=135c135%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible (except potentially in [[#keychange|certain circumstances]], but that would move the collectible to the [[#public|public net]]).  Collectibles should be given in person, such as payment via bluetooth or card; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible.  Collectibles should be given in person, such as payment via bluetooth or card; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a
host:1610438270=92.38.148.60
author:1610438160=
diff:1610438160:1610438089:=74c74%0a%3c !!!Changing collectible ownership request[[#keychange]]%0a---%0a> !!!Changing collectible ownership request%0a
host:1610438160=92.38.148.60
author:1610438089=
diff:1610438089:1610437998:=131c131%0a%3c The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a Privatenet and Publicnet.%0a---%0a> The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a Privatenet, Publicnet, and Contracts.%0a
host:1610438089=92.38.148.60
author:1610437998=
diff:1610437998:1610437849:=104c104%0a%3c !!!!!Setting bit length requirements [[#length]]%0a---%0a> !!!!!Bit length requirements [[#length]]%0a
host:1610437998=92.38.148.60
author:1610437849=
diff:1610437849:1610437749:=109c109%0a%3c # Difficulty should be set so that an enthusiast PC working full time can complete 1 challenge and thus earn one collectible every week.%0a---%0a> # Difficulty should be set so that an enthusiast PC working full time can complete 1 challenge and earn one collectible every week.%0a
host:1610437849=92.38.148.60
author:1610437749=
diff:1610437749:1610437445:=84c84%0a%3c Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as GIT) likely of SQL files.  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a---%0a> Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as GIT).  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a
host:1610437749=92.38.148.60
author:1610437445=
diff:1610437445:1610437349:=70c70%0a%3c As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the [[#requirements|requirements]], and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the new public key so they can verify the node recieved the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the new public key so they can verify the node recieved the request properly.%0a
host:1610437445=92.38.148.60
author:1610437349=
diff:1610437349:1610423695:=63c63%0a%3c Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring random challenges, there would be less risk to encryption keys being attacked for the value they hold or for other monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yourself.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a---%0a> Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring random challenges, there would be less risk to encryption keys being attacked for the value they hold, or for monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yourself.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a
host:1610437349=92.38.148.60
author:1610423695=
diff:1610423695:1610422845:=75,76d74%0a%3c Firstly you cannot simply tell the network to give a collectible to someone else's key, unlike digital coins.  With collectibles, you must actually transfer the private key to someone else.  This can be done via bluetooth or rfid, or actually mailing the key or sending over encrypted online communication.%0a%3c %0a
host:1610423695=92.38.148.60
author:1610422845=
diff:1610422845:1610421572:=65c65%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a
host:1610422845=92.38.148.60
author:1610421572=
diff:1610421572:1610421015:=15c15%0a%3c Mining does not need an internet connection and miners create and complete their own challenges that meet the [[#requirements|requirements]] of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.%0a---%0a> Mining is done offline and miners create and complete their own challenges that meet the [[#requirements|requirements]] of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.%0a
host:1610421572=92.38.148.60
author:1610421015=
diff:1610421015:1610420955:=9c9%0a%3c "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks affecting a significant percentage of coins besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a---%0a> "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting a significant percentage of coins besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a
host:1610421015=92.38.148.60
author:1610420955=
diff:1610420955:1610419296:=4c4%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining can be offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1610420955=92.38.148.60
author:1610419296=
diff:1610419296:1610418801:=124c124%0a%3c Emission is controlled that for every enthusiast PC worth of computing power that is on earth mining, there will be one collectible added to the ledger per week.  So if the world has 5,000 PC's worth of power mining the collectible, then 5,000 collectibles will be added to the ledger every week.  See [[#ledger|ledger]] for some calculations predicting emission. This will keep the value of the coin quite stable as long as the nodes are controlling difficulty well and the amount of miners will scale up with demand for the collectibles.%0a---%0a> Emission is controlled that for every enthusiast PC worth of computing power that is on earth mining, there will be one collectible added to the ledger per week.  So if the world has 5,000 PC's worth of power mining the collectible, then 5,000 collectibles will be added to the ledger every week.  This will keep the value of the coin quite stable as long as the nodes are controlling difficulty well and the amount of miners scale up with demand for the collectibles.%0a
host:1610419296=104.175.54.158
author:1610418801=
diff:1610418801:1610418665:=116c116%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor required is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610418801=104.175.54.158
author:1610418665=
diff:1610418665:1610418393:=116c116%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the [[#length|bit length]] of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610418665=104.175.54.158
author:1610418393=
diff:1610418393:1610395734:=75c75%0a%3c As seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible, and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a---%0a> A seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible, and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a96c96%0a%3c # Number to factor cannot have any leading or trailing zeroes or fives.%0a---%0a> # Number to factor cannot have any leading or trailing zeroes.%0a
host:1610418393=104.175.54.158
author:1610395734=
diff:1610395734:1610395517:=161c161%0a%3c Also either one of the nodes could be acting on behalf of one of their customers to publish these contracts for them.  In other words, you do not need to own your own node to make contracts, but you do need your own node to have staked coins or vouches.  The reason for this is contracts are linked to a collectible and published whereas staked coins and vouches are linked to a a node's public ip/identity.%0a---%0a> Also either one of the nodes could be acting on behalf of one of their customers to publish these contracts for them.  In other words, you do not need to own your own node to publish contracts, but you do need your own node to have staked coins or vouches.%0a
host:1610395734=193.34.232.23
author:1610395517=
diff:1610395517:1610395394:=143c143%0a%3c Proof of burn is accomplished by transferring the collectible to a public key that provably no one could own the private key to.  Public keys are hashed from private keys, so if you create the public key "PaulWalkerisStillAlive1", it is impossible that you just so happen to have the private key to that public key.  So signing that you change the key to that burn address, you are verifying that the collectible is lost forever.  Proof of burn can even be used in this way for posting short messages for just the cost of burning a collectible.%0a---%0a> Proof of burn is accomplished by transferring the collectible to a public key that provably no one could own the private key to.  Public keys are hashed from private keys, so if you create the public key "PaulWalkerisStillAlive1", it is impossible that you just so happen to have the private key to that public key.  So signing that you change the key to that burn address, you are verifying that the collectible is lost forever.%0a
host:1610395517=193.34.232.23
author:1610395394=
diff:1610395394:1610395358:=132c132%0a%3c !!!Privatenet[[#private]]%0a---%0a> !!!Privatenet%0a137,143d136%0a%3c %0a%3c !!!!Proof of Burn[[#burn]]%0a%3c Proof of burn is proving that you made a collectible unspendable.%0a%3c %0a%3c Proof of burn is an elegant solution to a complex problem.  Say you want to create a search engine where websites can bid on their search rankings for different search terms.  Great.  So who gets the collectibles that were bid? Instead of giving the collectibles to a 3rd party and making someone rich off this competition, proof of burn means that in essence the bid value is split between every holder of collectibles on the network by making collectibles more rare.%0a%3c %0a%3c Proof of burn is accomplished by transferring the collectible to a public key that provably no one could own the private key to.  Public keys are hashed from private keys, so if you create the public key "PaulWalkerisStillAlive1", it is impossible that you just so happen to have the private key to that public key.  So signing that you change the key to that burn address, you are verifying that the collectible is lost forever.%0a
host:1610395394=193.34.232.23
author:1610395358=
diff:1610395358:1610395266:=138c138%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and vouches and the contracts of theirs and their customers. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and vouches. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a149c149%0a%3c !!!!!Contracts%0a---%0a> !!!!Contracts%0a155a156,161%0a> !!!!!Proof of Burn[[#burn]]%0a> Proof of burn is proving that you made a collectible unspendable.%0a> %0a> Proof of burn is an elegant solution to a complex problem.  Say you want to create a search engine where websites can bid on their search rankings for different search terms.  Great.  So who gets the collectibles that were bid? Instead of giving the collectibles to a 3rd party and making someone rich off this competition, proof of burn means that in essence the bid value is split between every holder of collectibles on the network by making collectibles more rare.%0a> %0a> Proof of burn is accomplished by transferring the collectible to a public key that provably no one could own the private key to.  Public keys are hashed from private keys, so if you create the public key "PaulWalkerisStillAlive1", it is impossible that you just so happen to have the private key to that public key.  So signing that you change the key to that burn address, you are verifying that the collectible is lost forever.%0a
host:1610395358=193.34.232.23
author:1610395266=
diff:1610395266:1610395153:=149c149%0a%3c !!!!Contracts%0a---%0a> !!!Contracts%0a156c156%0a%3c !!!!!Proof of Burn[[#burn]]%0a---%0a> !!!!Proof of Burn[[#burn]]%0a
host:1610395266=193.34.232.23
author:1610395153=
diff:1610395153:1610395066:=18a19,23%0a> %0a> !!!Transferal of Collectible [[#transferal]]%0a> After a collectible is mined it goes either directly to a node for recording, is saved for later use, or the private key is given to a customer who then submits it to the network.  How this works is displayed in the diagram below.%0a> Attach:restible.png%0a> %0a46,50d50%0a%3c %0a%3c !!!Transferal of Collectible [[#transferal]]%0a%3c After a collectible is mined it goes either directly to a node for recording, is saved for later use, or the private key is given to a customer who then submits it to the network.  How this works is displayed in the diagram below.%0a%3c Attach:restible.png%0a%3c %0a
host:1610395153=193.34.232.23
author:1610395066=
diff:1610395066:1610395004:=9c9%0a%3c "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting a significant percentage of coins besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a---%0a> "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a
host:1610395066=193.34.232.23
author:1610395004=
diff:1610395004:1610394978:=9c9%0a%3c "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  It all boils down to faith in the Rich and Powerful.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a---%0a> "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  Faith in the Rich.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a
host:1610395004=193.34.232.23
author:1610394978=
diff:1610394978:1610394745:=9c9%0a%3c "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones, and the good ones will never be fooled.  Faith in the Rich.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a---%0a> "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones.  Faith in the Rich.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a
host:1610394978=193.34.232.23
author:1610394745=
diff:1610394745:1610394703:=11c11%0a%3c I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes staking collectibles, getting vouches, and maintaining good customer service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked collectibles]] and the staked collectibles of those [[#vouch|vouching]] for them), the community would simply switch to other node(s) all without any transactions being lost since the database is distributed by nature.%0a---%0a> I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes staking coins, getting vouches, and maintaining good customer service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked coins]] and the staked coins of those [[#vouch|vouching]] for them), the community would simply switch to other node(s) all without any transactions being lost since the database is distributed by nature.%0a
host:1610394745=193.34.232.23
author:1610394703=
diff:1610394703:1610394668:=140c140%0a%3c !!!!!Staked collectibles[[#stake]]%0a---%0a> !!!!!Staked collectibles%0a
host:1610394703=193.34.232.23
author:1610394668=
diff:1610394668:1610394565:=11c11%0a%3c I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes staking coins, getting vouches, and maintaining good customer service.  If a node is shown to be untrustworthy (and thus loose their [[#stake|staked coins]] and the staked coins of those [[#vouch|vouching]] for them), the community would simply switch to other node(s) all without any transactions being lost since the database is distributed by nature.%0a---%0a> I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes staking coins, getting vouches, and maintaining good customer service.  If a node is shown to be untrustworthy (and thus loose their staked coins and the staked coins of those vouching for them), the community would simply switch to other node(s) all without any transactions being lost since the database is distributed by nature.%0a
host:1610394668=193.34.232.23
author:1610394565=
diff:1610394565:1610394515:=9c9%0a%3c "Trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones.  Faith in the Rich.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a---%0a> "trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones.  Faith in the Rich.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a
host:1610394565=193.34.232.23
author:1610394515=
diff:1610394515:1610394399:=7,9c7,9%0a%3c Current cryptocurrency is "trust-less" with mechanisms that enforce a rigid and inflexible consensus.  However these mechanisms can always be gamed.  In the case of typical blockchain, the people with the most hashpower have the most vote, culminating in the possibility of owning 51%25 of the network and therefore controlling it entirely.  Proof-of-stake is similar, with the person(s) owning the most coins having more vote and ability to attack the network.%0a%3c %0a%3c "trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones.  Faith in the Rich.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin. State actors, given enough incentive, might even attack Bitcoin too someday.%0a---%0a> Current cryptocurrency is "trust-less" with mechanisms that enforce a rigid and inflexible consensus.  However these mechanisms can always be gamed.  In the case of typical blockchain, the people with the most hashpower have the most vote, culminating in the possibility of owning 51%25 of the network and therefore controlling it entirely.%0a> %0a> "trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin, and state actors, given enough incentive, might even attack it too someday.%0a
host:1610394515=193.34.232.23
author:1610394399=
diff:1610394399:1610394286:=18,22d17%0a%3c %0a%3c %0a%3c !!!Transferal of Collectible [[#transferal]]%0a%3c After a collectible is mined it goes either directly to a node for recording, is saved for later use, or the private key is given to a customer who then submits it to the network.  How this works is displayed in the diagram below.%0a%3c Attach:restible.png%0a
host:1610394399=193.34.232.23
author:1610394286=
diff:1610394286:1610394129:=12a13,14%0a> !!!Transferal of Collectible [[#transferal]]%0a> Attach:restible.png%0a
host:1610394286=193.34.232.23
author:1610394129=
diff:1610394129:1610393987:=176c176%0a%3c Reddit gnfs on gpu [[https://www.reddit.com/r/crypto/comments/pzzim/general_number_field_sieve/|#]]%0a---%0a> Reddit post masters thesis gnfs [[https://www.reddit.com/r/crypto/comments/pzzim/general_number_field_sieve/|#]]%0a
host:1610394129=193.34.232.23
author:1610393987=
diff:1610393987:1610393511:=143c143%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked collectibles, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked collectibles. In the picture below, we see that the node staked certain collectibles on the reputation of the node they are vouching for.  If the node they are vouching for ever becomes a bad node, then not only will the bad node loose all their staked coins, but also the coins that other nodes vouched for them.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked coins.%0a
host:1610393987=193.34.232.23
author:1610393511=
diff:1610393511:1610392270:=5,11d4%0a%3c %0a%3c !!!!Pitch%0a%3c Current cryptocurrency is "trust-less" with mechanisms that enforce a rigid and inflexible consensus.  However these mechanisms can always be gamed.  In the case of typical blockchain, the people with the most hashpower have the most vote, culminating in the possibility of owning 51%25 of the network and therefore controlling it entirely.%0a%3c %0a%3c "trust-less" might be a good term for it.  But "trust" is replaced with faith.  Faith that the bad actors will never be able to overwhelm the good ones.  This faith has shown itself to be unfounded by countless 51%25 attacks effecting nearly every coin besides bitcoin, and state actors, given enough incentive, might even attack it too someday.%0a%3c %0a%3c I prefer trust over faith.  Let us, as the customers, have the choice of which nodes to trust, and provide opportunities for them to win our trust.  Some of these opportunities can be nodes staking coins, getting vouches, and maintaining good customer service.  If a node is shown to be untrustworthy (and thus loose their staked coins and the staked coins of those vouching for them), the community would simply switch to other node(s) all without any transactions being lost since the database is distributed by nature.%0a
host:1610393511=193.34.232.23
author:1610392270=
diff:1610392270:1610392031:=65c65%0a%3c A seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible, and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  The node should notify the user of the new public key so they can verify the node received the request properly.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a---%0a> A seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible, and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a
host:1610392270=193.34.232.23
author:1610392031=
diff:1610392031:1610391966:=60c60%0a%3c As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and the proof of work factor.  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the new public key so they can verify the node recieved the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and Factor (proof of work).  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the new public key so they can verify the node recieved the request properly.%0a
host:1610392031=193.34.232.23
author:1610391966=
diff:1610391966:1610391892:=56,57d55%0a%3c %0a%3c Below we will propose some example ways for miners/customers to interact with nodes.  Of course these things can be automated if desired so this will be a simplification for illustration.%0a
host:1610391966=193.34.232.23
author:1610391892=
diff:1610391892:1610391828:=58c58%0a%3c As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and Factor (proof of work).  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.  The node should notify the user of the new public key so they can verify the node recieved the request properly.%0a---%0a> As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and Factor (proof of work).  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.%0a
host:1610391892=193.34.232.23
author:1610391828=
diff:1610391828:1610391730:=67c67%0a%3c In order to prevent a man-in-the-middle attack during transit, the digital signature could be that of the hash of the old public key combined with the new public key.  This way someone intercepting the transmission can't use your signature as a blank check and change the new public key you requested to a different value without you knowing.%0a---%0a> In order to prevent a data insertion attack during transit, the digital signature could be that of the hash of the old public key and new public key.  This way someone intercepting the transmission on the way can't use your signature as a blank check and change the new public key you requested.%0a
host:1610391828=193.34.232.23
author:1610391730=
diff:1610391730:1610391236:=66,67d65%0a%3c %0a%3c In order to prevent a data insertion attack during transit, the digital signature could be that of the hash of the old public key and new public key.  This way someone intercepting the transmission on the way can't use your signature as a blank check and change the new public key you requested.%0a
host:1610391730=193.34.232.23
author:1610391236=
diff:1610391236:1610391003:=65c65%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple coins under one public key except for reasons of [[#stake|staking]].  The more coins in a public key, the less fungible it is (since it [likely] cannot be easily split up into smaller pieces ever again) and because there are more opportunities to link transactions to the same owner.  Before linking collectibles to the same public key for customers, nodes should give a warning.  Some nodes may refuse to have non-staked collectibles linked to the same public key.  This is for the network to decide and hopefully eventually reach consensus.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple coins under one public key except for reasons of [[#stake|staking]].  The more coins in a public key, the less fungible it is (since it [likely] cannot be easily split up into smaller pieces ever again) and because there are more opportunities to link transactions to the same owner.%0a
host:1610391236=193.34.232.23
author:1610391003=
diff:1610391003:1610390980:=
host:1610391003=193.34.232.23
author:1610390980=
diff:1610390980:1610390821:=65c65%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.  Again, it is undesirable to have multiple coins under one public key except for reasons of [[#stake|staking]].  The more coins in a public key, the less fungible it is (since it [likely] cannot be easily split up into smaller pieces ever again) and because there are more opportunities to link transactions to the same owner.%0a---%0a> If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.%0a
host:1610390980=193.34.232.23
author:1610390821=
diff:1610390821:1610390800:=65c65%0a%3c If there is a collision, and the new desired public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.%0a---%0a> If there is a collision, and that public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.%0a
host:1610390821=193.34.232.23
author:1610390800=
diff:1610390800:1610390632:=65c65%0a%3c If there is a collision, and that public key already exists, then it can either be denied by the node, depending on node rules, or it can be merged into the record of that public key.  In the latter case the public key would then contain 2 collectibles, but each containing their own separate proof of work.%0a---%0a> %0a
host:1610390800=193.34.232.23
author:1610390632=
diff:1610390632:1610390447:=142c142%0a%3c !!!!Proof of Burn[[#burn]]%0a---%0a> !!!!Proof of Burn%0a
host:1610390632=193.34.232.23
author:1610390447=
diff:1610390447:1610390408:=58c58%0a%3c As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, bit length of the random number that was factored, and Factor (proof of work).  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.%0a---%0a> As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, and Factor (proof of work).  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.%0a
host:1610390447=193.34.232.23
author:1610390408=
diff:1610390408:1610390386:=58d57%0a%3c As seen in the picture below, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, and Factor (proof of work).  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.%0a61c60%0a%3c %0a---%0a> As seen in the picture above, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, and Factor (proof of work).  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.%0a
host:1610390408=193.34.232.23
author:1610390386=
diff:1610390386:1610390358:=62d61%0a%3c A seen in the picture below, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible, and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  If the new public key has no private key, as in the case of [[#burn|proof of burn]], then no one can ever spend the collectible again.%0a64c63%0a%3c %0a---%0a> A seen in the picture above, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible, and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  If the new public key has no private key, as in the case of [[#burn|proof of burn]] then no one can ever spend the collectible again.%0a
host:1610390386=193.34.232.23
author:1610390358=
diff:1610390358:1610390125:=63d62%0a%3c A seen in the picture above, for a collectible that is already recorded in the network, in order to request a change in ownership is as follows.  The person enters the current public key of the collectible, signs for it proving they have the private key of the collectible, and then requests a new public key of their choosing.  If everything meets the requirements of the node, the user will be notified that their submission was successful.  If the new public key has no private key, as in the case of [[#burn|proof of burn]] then no one can ever spend the collectible again.%0a
host:1610390358=193.34.232.23
author:1610390125=
diff:1610390125:1610389956:=59,60d58%0a%3c %0a%3c As seen in the picture above, a miner or a primary owner of a collectible (a collectible that has never been recorded before in a node) simply needs to submit to his preferred node(s) the Public key, Nonce, and Factor (proof of work).  These would then be verified by the node that they meet all the requirements, and the user would be notified if the submission was accepted or what requirement was breached.%0a
host:1610390125=193.34.232.23
author:1610389956=
diff:1610389956:1610388333:=57,60d56%0a%3c !!!Submitting new collectibles to node%0a%3c Attach:record.png%0a%3c !!!Changing collectible ownership request%0a%3c Attach:keychange.png%0a
host:1610389956=193.34.232.23
author:1610388333=
diff:1610388333:1610388327:=
host:1610388333=193.34.232.23
author:1610388327=
diff:1610388327:1610387411:=108c108%0a%3c Doing some calculations based on Monero blockchain, they appear to have about 244,000 PC's worth of mining power.  This would mean if we scaled to the size of Monero, we would be adding 244,000 entries into our database per week, 12.7 million per year.  At 100 bytes per entry [[https://answers.microsoft.com/en-us/msoffice/forum/msoffice_access-mso_other-msoversion_other/how-many-record-microsoft-access-can-hold/967f1817-aba9-44fa-b058-1b895c25fa19|#]] this equates to only 1.27 GB per year, much less than Bitcoin or other cryptocurrencies.  Our protocol is very light.  Here are some resources about database size solutions [[https://serverfault.com/questions/412774/fast-database-to-store-1-billion-records|#]] [[http://www.iasptk.com/large-can-mysql-database-become/|#]].%0a---%0a> Doing some calculations based on Monero blockchain, they appear to have about 244,000 PC's worth of mining power.  This would mean if we scaled to the size of Monero, we would be adding 244,000 entries into our database per week, 12.7 million per year.  At 100 bytes per entry [[https://answers.microsoft.com/en-us/msoffice/forum/msoffice_access-mso_other-msoversion_other/how-many-record-microsoft-access-can-hold/967f1817-aba9-44fa-b058-1b895c25fa19|#]] this equates to only 1.27 GB per year, much less than Bitcoin or other cryptocurrencies.  Our protocol is very light.%0a
host:1610388327=193.34.232.23
author:1610387411=
diff:1610387411:1610387232:=108c108%0a%3c Doing some calculations based on Monero blockchain, they appear to have about 244,000 PC's worth of mining power.  This would mean if we scaled to the size of Monero, we would be adding 244,000 entries into our database per week, 12.7 million per year.  At 100 bytes per entry [[https://answers.microsoft.com/en-us/msoffice/forum/msoffice_access-mso_other-msoversion_other/how-many-record-microsoft-access-can-hold/967f1817-aba9-44fa-b058-1b895c25fa19|#]] this equates to only 1.27 GB per year, much less than Bitcoin or other cryptocurrencies.  Our protocol is very light.%0a---%0a> Doing some calculations based on Monero blockchain, they appear to have about 244,000 PC's worth of mining power.  This would mean if we scaled to the size of Monero, we would be adding 244,000 entries into our database per week, 12.7 million per year.  At 100 bytes per entry [[https://answers.microsoft.com/en-us/msoffice/forum/msoffice_access-mso_other-msoversion_other/how-many-record-microsoft-access-can-hold/967f1817-aba9-44fa-b058-1b895c25fa19|#]] this equates to only 1.27 GB per year, much less than Bitcoin or other cyyptocurrencies.  Our protocol is very light.%0a
host:1610387411=193.34.232.23
author:1610387232=
diff:1610387232:1610387229:=
host:1610387232=193.34.232.23
author:1610387229=
diff:1610387229:1610372129:=107,108d106%0a%3c %0a%3c Doing some calculations based on Monero blockchain, they appear to have about 244,000 PC's worth of mining power.  This would mean if we scaled to the size of Monero, we would be adding 244,000 entries into our database per week, 12.7 million per year.  At 100 bytes per entry [[https://answers.microsoft.com/en-us/msoffice/forum/msoffice_access-mso_other-msoversion_other/how-many-record-microsoft-access-can-hold/967f1817-aba9-44fa-b058-1b895c25fa19|#]] this equates to only 1.27 GB per year, much less than Bitcoin or other cyyptocurrencies.  Our protocol is very light.%0a
host:1610387229=193.34.232.23
author:1610372129=
diff:1610372129:1610371780:=111c111%0a%3c Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key, then allows them to change the public key to a new one that they presumably know the private key for (alternatively see [[#burn|proof of burn]]).  The customer can then verify that they can sign for the new private key in order to prove ownership if desired.%0a---%0a> Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key, then allows them to change the key by hashing the old one with their new key.  The customer can then verify that they can sign for the new private key.%0a
host:1610372129=104.175.54.158
author:1610371780=
diff:1610371780:1610371212:=99c99%0a%3c The emission has no upper limit.  We believe that miners, nodes, and customers are all essential, and always essential.  And if emmission is ever throttled, then that is saying we want miners to quit, which we never do.  Emission must be able to scale up with more people joining/using the network and demand, just like if there is more gold demand there will be more gold mined.%0a---%0a> The emission has no upper limit.  We believe that miners, nodes, and customers are all essential, and always essential.  %0a
host:1610371780=104.175.54.158
author:1610371212=
diff:1610371212:1610342708:=55c55%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and then change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a
host:1610371212=104.175.54.158
author:1610342708=
diff:1610342708:1610340959:=143,145c143,145%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there are no trustworthy nodes, to start one themselves or compensate someone else to do it.%0a%3c %0a%3c 'Hodl'ing customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work.%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone else to do it.%0a> %0a> Hodling customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work.%0a
host:1610342708=104.175.54.158
author:1610340959=
diff:1610340959:1610340796:=130a131,132%0a> !!!!Key verification%0a> [[https://stackoverflow.com/questions/16879230/public-key-signing-verification#16879250|#]]%0a137,138d138%0a%3c !!!!Key verification%0a%3c [[https://stackoverflow.com/questions/16879230/public-key-signing-verification#16879250|#]]%0a
host:1610340959=193.34.232.23
author:1610340796=
diff:1610340796:1610340224:=122,123d121%0a%3c !!!!!!Vouches Format%0a%3c Attach:vouch.png%0a
host:1610340796=193.34.232.23
author:1610340224=
diff:1610340224:1610340100:=1d0%0a%3c [[!cryptics]]%0a
host:1610340224=193.34.232.23
author:1610340100=
diff:1610340100:1610340077:=145d144%0a%3c %0a147d145%0a%3c %0a
host:1610340100=193.34.232.23
author:1610340077=
diff:1610340077:1610339558:=143,146d142%0a%3c %0a%3c !!Other resources on DCN:%0a%3c [[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|Toppling the Blockchain]]%0a%3c [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|Bitcoin vs DCN]]%0a
host:1610340077=193.34.232.23
author:1610339558=
diff:1610339558:1610339498:=103c103%0a%3c The price is not controlled directly but I expect each collectible to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0029 coins of Monero which, at $150 per coin, earns you about 43 cents.%0a---%0a> The price is not controlled but I expect each collectible to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0029 coins of Monero which, at $150 per coin, earns you about 43 cents.%0a
host:1610339558=193.34.232.23
author:1610339498=
diff:1610339498:1610339413:=60,61d59%0a%3c !!!!Displaying Trust%0a%3c Nodes can stake coins, get other nodes to vouch for them, set good policies, and be responsive to customers, to build trust with the community.%0a
host:1610339498=193.34.232.23
author:1610339413=
diff:1610339413:1610339271:=60,62c60%0a%3c !!!Rights%0a%3c %0a%3c !!!!Setting public key requirements [[#publickey]]%0a---%0a> !!!Public key requirements [[#publickey]]%0a65c63%0a%3c !!!!Setting collectible requirements [[#requirements]]%0a---%0a> !!!Collectible requirements [[#requirements]]%0a76c74%0a%3c !!!!!Bit length requirements [[#length]]%0a---%0a> !!!!Bit length requirements [[#length]]%0a87c85%0a%3c !!!!Determining Factorization [[#fact]]%0a---%0a> !!!Factorization [[#fact]]%0a93c91%0a%3c !!!!Determining Emission [[#emission]]%0a---%0a> !!!Emission [[#emission]]%0a100c98%0a%3c !!!!Determining Price%0a---%0a> !!!Price%0a
host:1610339413=193.34.232.23
author:1610339271=
diff:1610339271:1610339189:=56,57c56%0a%3c !!!Responsibilities%0a%3c !!!!Source Control%0a---%0a> !!!Source Control%0a
host:1610339271=193.34.232.23
author:1610339189=
diff:1610339189:1610338649:=55,57d54%0a%3c %0a%3c !!!Source Control%0a%3c Nodes are basically required to keep source control of their [[#ledger|ledger]] over time (such as GIT).  This is especially important so that the other nodes and/or public can trace back to where a problem happened in a given ledger.  Also for [[#vouch|vouching]] it is critical so that a node can vouch for your ledger on a certain date and this can be traced back to what exactly a node is vouching for.%0a
host:1610339189=193.34.232.23
author:1610338649=
diff:1610338649:1610338535:=112c112%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to trust a vouching node even if you haven't worked with them, is to ask for the signature of the vouching nodes staked coins.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to gain this trust one way is to ask for the signature of the vouching nodes staked coins.%0a
host:1610338649=193.34.232.23
author:1610338535=
diff:1610338535:1610338099:=107c107%0a%3c Staked collectibles are collectibles that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked coins they should provide this (sign for their key(s)) so that they come off as trustworthy.  See also [[#vouch|vouches]].%0a---%0a> Staked collectibles are collectibles that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked coins they should provide this so that they come off as trustworthy.  See also [[#vouch|vouches]].%0a
host:1610338535=193.34.232.23
author:1610338099=
diff:1610338099:1610338025:=110d109%0a%3c Notice that this node has 5 collectibles staked between 2 different addresses.  Staking is one reason why you would want to have many collectibles under one key, that way you only have to sign once for multiple collectibles.%0a
host:1610338099=193.34.232.23
author:1610338025=
diff:1610338025:1610337969:=108c108%0a%3c !!!!!!Staked Collectible Format%0a---%0a> !!!!!!Example in the ledger%0a
host:1610338025=193.34.232.23
author:1610337969=
diff:1610337969:1610337379:=108,109d107%0a%3c !!!!!!Example in the ledger%0a%3c Attach:staked.png%0a
host:1610337969=193.34.232.23
author:1610337379=
diff:1610337379:1610337344:=102c102%0a%3c Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key, then allows them to change the key by hashing the old one with their new key.  The customer can then verify that they can sign for the new private key.%0a---%0a> Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key, then allows them to change the key by hasing the old one with thier new key.  The customer can then verify that they can sign for the new private key.%0a
host:1610337379=193.34.232.23
author:1610337344=
diff:1610337344:1610337030:=102d101%0a%3c Notice how the second entry has 2 keys.  The first key was for the original proof of work, and the second is for the changed key.  The node verifies that the customer signs for the first key, then allows them to change the key by hasing the old one with thier new key.  The customer can then verify that they can sign for the new private key.%0a
host:1610337344=193.34.232.23
author:1610337030=
diff:1610337030:1610336433:=100,101d99%0a%3c !!!!Privatenet format%0a%3c Attach:privatenet.png%0a
host:1610337030=193.34.232.23
author:1610336433=
diff:1610336433:1610336410:=97c97%0a%3c The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a Privatenet, Publicnet, and Contracts.%0a---%0a> The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a Publicnet, a Privatenet, and Contracts.%0a
host:1610336433=193.34.232.23
author:1610336410=
diff:1610336410:1610336330:=101c101%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and vouches. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true (or at least the ones they are vouching for) and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches; and any of their customers contracts that they are representing. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a
host:1610336410=193.34.232.23
author:1610336330=
diff:1610336330:1610336312:=107c107%0a%3c !!!Contracts%0a---%0a> !!!!!Contracts%0a
host:1610336330=193.34.232.23
author:1610336312=
diff:1610336312:1610336268:=97c97%0a%3c The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a Publicnet, a Privatenet, and Contracts.%0a---%0a> The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a Publicnet, and a Privatenet.%0a
host:1610336312=193.34.232.23
author:1610336268=
diff:1610336268:1610336186:=99c99%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible.  Collectibles should be given in person, such as payment via bluetooth or card; or sent encrypted over the internet via wallet-to-wallet or email etc.  But even if someone snoops on the transmission, unless they change the key of the collectible before the receiver of the transaction, they do not know the new key.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible.  Collectibles should be given in person, such as payment via bluetooth or card; or sent encrypted over the internet via wallet-to-wallet or email etc.%0a
host:1610336268=193.34.232.23
author:1610336186=
diff:1610336186:1610336151:=99c99%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next, is impossible.  Collectibles should be given in person, such as payment via bluetooth or card; or sent encrypted over the internet via wallet-to-wallet or email etc.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next is impossible.  Collectibles should be given in person, such as payment via bluetooth or card; or sent encrypted over the internet via wallet-to-wallet or email etc.%0a
host:1610336186=193.34.232.23
author:1610336151=
diff:1610336151:1610335679:=110,112c110%0a%3c Since contracts do not need to be signed for, on-demand, unlike vouches and staked coins, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these coins are now tied to an identity, the two nodes, and are not fully fungible.  %0a%3c %0a%3c Also either one of the nodes could be acting on behalf of one of their customers to publish these contracts for them.  In other words, you do not need to own your own node to publish contracts, but you do need your own node to have staked coins or vouches.%0a---%0a> Since contracts do not need to be signed for on-demand, unlike vouches and staked coins, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these coins are now tied to an identity, the two nodes, and are not fully fungible.  Either one of the nodes could be acting on behalf of one of their customers to create these contracts.%0a
host:1610336151=193.34.232.23
author:1610335679=
diff:1610335679:1610335636:=101c101%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches; and any of their customers contracts that they are representing. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches; and any of their customers that they are representing. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a
host:1610335679=193.34.232.23
author:1610335636=
diff:1610335636:1610335562:=101c101%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches; and any of their customers that they are representing. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a
host:1610335636=193.34.232.23
author:1610335562=
diff:1610335562:1610335467:=99c99%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next is impossible.  Collectibles should be given in person, such as payment via bluetooth or card; or sent encrypted over the internet via wallet-to-wallet or email etc.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next is impossible.%0a
host:1610335562=193.34.232.23
author:1610335467=
diff:1610335467:1610335448:=98,99d97%0a%3c !!!Privatenet%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next is impossible.%0a
host:1610335467=193.34.232.23
author:1610335448=
diff:1610335448:1610335369:=120c120,121%0a%3c %0a---%0a> !!!Privatenet%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next is impossible.%0a
host:1610335448=193.34.232.23
author:1610335369=
diff:1610335369:1610335218:=131,142c131%0a%3c lots of fast cores best for sieving [[https://www.researchgate.net/publication/257391254_Methods_and_Implementations_for_Integer_Factorization|#]]%0a%3c %0a%3c !!References%0a%3c %0a%3c [[http://www.weidai.com/bmoney.txt|B-money]]%0a%3c %0a%3c [[https://unenumerated.blogspot.com/2005/12/bit-gold.html|Bit gold]]%0a%3c %0a%3c [[https://bitcoin.org/bitcoin.pdf|Bitcoin]]%0a%3c %0a%3c [[https://nakamoto.com/the-cypherpunks/|The cypherpunks]]%0a%3c %0a---%0a> lots of fast cores best for sieving [[https://www.researchgate.net/publication/257391254_Methods_and_Implementations_for_Integer_Factorization|#]]%0a\ No newline at end of file%0a
host:1610335369=193.34.232.23
author:1610335218=
diff:1610335218:1610334581:=106,108c106%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to 'node y' for expenses". Then when node y receives the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowledgement of the contract and by accepting the payment they are accepting the terms.  They should leave a memo like: "accepting as full payment from customer".%0a%3c %0a%3c Since contracts do not need to be signed for on-demand, unlike vouches and staked coins, they could be in a separate part of the publicnet.  The only reason it needs to be in the publicnet is because these coins are now tied to an identity, the two nodes, and are not fully fungible.  Either one of the nodes could be acting on behalf of one of their customers to create these contracts.%0a---%0a> Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to node y for expenses". Then when node y receives the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowledgement of the contract and that they are willing to sign verifying that they accept the terms.%0a
host:1610335218=193.34.232.23
author:1610334581=
diff:1610334581:1610323631:=99c99%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicnet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicmet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a106c106%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to node y for expenses". Then when node y receives the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowledgement of the contract and that they are willing to sign verifying that they accept the terms.%0a---%0a> Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to node y for expenses". Then when node y recieves the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowlegement of the contract and that they are willing to sign verifying that they accept the terms.%0a
host:1610334581=193.34.232.23
author:1610323631=
diff:1610323631:1610268359:=3c3%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority over the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1610323631=104.175.54.158
author:1610268359=
diff:1610268359:1610268072:=128,129c128%0a%3c GPU can help with polynomial selection, 10-30× faster,%0a%3c lots of fast cores best for sieving [[https://www.researchgate.net/publication/257391254_Methods_and_Implementations_for_Integer_Factorization|#]]%0a\ No newline at end of file%0a---%0a> GPU can help with polynomial selection, 10-30× faster [[https://www.researchgate.net/publication/257391254_Methods_and_Implementations_for_Integer_Factorization|#]]%0a\ No newline at end of file%0a
host:1610268359=104.175.54.158
author:1610268072=
diff:1610268072:1610266368:=126,128c126%0a%3c Reddit post masters thesis gnfs [[https://www.reddit.com/r/crypto/comments/pzzim/general_number_field_sieve/|#]]%0a%3c %0a%3c GPU can help with polynomial selection, 10-30× faster [[https://www.researchgate.net/publication/257391254_Methods_and_Implementations_for_Integer_Factorization|#]]%0a\ No newline at end of file%0a---%0a> Reddit post masters thesis gnfs [[https://www.reddit.com/r/crypto/comments/pzzim/general_number_field_sieve/|#]]%0a\ No newline at end of file%0a
host:1610268072=104.175.54.158
author:1610266368=
diff:1610266368:1610263180:=123,126c123%0a%3c Hodling customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work.%0a%3c %0a%3c !!Links%0a%3c Reddit post masters thesis gnfs [[https://www.reddit.com/r/crypto/comments/pzzim/general_number_field_sieve/|#]]%0a\ No newline at end of file%0a---%0a> Hodling customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work.%0a\ No newline at end of file%0a
host:1610266368=104.175.54.158
author:1610263180=
diff:1610263180:1610263063:=99c99%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  Coins on the publicmet are not fully fungible, as a feature, due to their traceability. The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a
host:1610263180=104.175.54.158
author:1610263063=
diff:1610263063:1610203480:=119c119%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable, and as such, 100%25 fungible.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next is impossible.%0a---%0a> Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next is impossible.%0a
host:1610263063=104.175.54.158
author:1610203480=
diff:1610203480:1610203452:=123c123%0a%3c Hodling customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based fairly on PC-work.%0a\ No newline at end of file%0a---%0a> Hodling customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based on PC-work speed.%0a\ No newline at end of file%0a
host:1610203480=104.175.54.158
author:1610203452=
diff:1610203452:1610203417:=123c123%0a%3c Hodling customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requirements to increase emission.  This balance is hopefully what keeps emission constant and based on PC-work speed.%0a\ No newline at end of file%0a---%0a> Hodling customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requiremnts to increase emission.  This balance is hopefully what keeps emission constant and based on PC-work speed.%0a\ No newline at end of file%0a
host:1610203452=104.175.54.158
author:1610203417=
diff:1610203417:1610203230:=121c121%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone else to do it.%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a
host:1610203417=104.175.54.158
author:1610203230=
diff:1610203230:1610203082:=113c113%0a%3c Proof of burn is an elegant solution to a complex problem.  Say you want to create a search engine where websites can bid on their search rankings for different search terms.  Great.  So who gets the collectibles that were bid? Instead of giving the collectibles to a 3rd party and making someone rich off this competition, proof of burn means that in essence the bid value is split between every holder of collectibles on the network by making collectibles more rare.%0a---%0a> Proof of burn is an elegant solution to a complex problem.  Say you want to create a search engine where websites can bid on their search rankings for different search terms.  Great.  So who gets the collectibles that were bid? Instead of giving the money to a 3rd party and making someone rich off this competition, proof of burn means that in essence the bid value is split between every holder of collectibles on the network by making collectibles more rare.%0a
host:1610203230=104.175.54.158
author:1610203082=
diff:1610203082:1610202987:=111,113c111%0a%3c Proof of burn is proving that you made a collectible unspendable.%0a%3c %0a%3c Proof of burn is an elegant solution to a complex problem.  Say you want to create a search engine where websites can bid on their search rankings for different search terms.  Great.  So who gets the collectibles that were bid? Instead of giving the money to a 3rd party and making someone rich off this competition, proof of burn means that in essence the bid value is split between every holder of collectibles on the network by making collectibles more rare.%0a---%0a> Proof of burn is an elegant solution to a complex problem.  Say you want to create a search engine where websites can bid on their search rankings for different search terms.  Great.  So who gets the collectibles that were bid? Instead of giving the money to a 3rd party and making someone rich off this competition, proof of burn means that in essence they value is split between every holder of collectibles by making collectibles more rare.%0a
host:1610203082=104.175.54.158
author:1610202987=
diff:1610202987:1610202457:=111,113c111%0a%3c Proof of burn is an elegant solution to a complex problem.  Say you want to create a search engine where websites can bid on their search rankings for different search terms.  Great.  So who gets the collectibles that were bid? Instead of giving the money to a 3rd party and making someone rich off this competition, proof of burn means that in essence they value is split between every holder of collectibles by making collectibles more rare.%0a%3c %0a%3c Proof of burn is accomplished by transferring the collectible to a public key that provably no one could own the private key to.  Public keys are hashed from private keys, so if you create the public key "PaulWalkerisStillAlive1", it is impossible that you just so happen to have the private key to that public key.  So signing that you change the key to that burn address, you are verifying that the collectible is lost forever.%0a---%0a> %0a
host:1610202987=104.175.54.158
author:1610202457=
diff:1610202457:1610202344:=106c106%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to node y for expenses". Then when node y recieves the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowlegement of the contract and that they are willing to sign verifying that they accept the terms.%0a---%0a> Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to node y for expenses". Then when node y recieves the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowlegement of the contract and that they are willing to sign verifying it.%0a
host:1610202457=104.175.54.158
author:1610202344=
diff:1610202344:1610202209:=104c104%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.  Of course, that is if you trust the vouching node.  In order to gain this trust one way is to ask for the signature of the vouching nodes staked coins.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.%0a
host:1610202344=104.175.54.158
author:1610202209=
diff:1610202209:1610202058:=104c104%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node, and thus have verified their claims so that you don't have to.%0a---%0a> A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node.%0a
host:1610202209=104.175.54.158
author:1610202058=
diff:1610202058:1610201974:=104c104%0a%3c A vouch means that a node is willing to stake their own reputation that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node.%0a---%0a> A vouch means that a node is willing to sign that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node.%0a
host:1610202058=104.175.54.158
author:1610201974=
diff:1610201974:1610201927:=104c104%0a%3c A vouch means that a node is willing to sign that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their publicnet is also self evident that the node vouches for the other node.%0a---%0a> A vouch means that a node is willing to sign that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their public net is also self evident that the node vouches for the other node.%0a
host:1610201974=104.175.54.158
author:1610201927=
diff:1610201927:1610201762:=104c104%0a%3c A vouch means that a node is willing to sign that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins, or just the fact that a node vouches for another node in their public net is also self evident that the node vouches for the other node.%0a---%0a> A vouch means that a node is willing to sign that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins.%0a
host:1610201927=104.175.54.158
author:1610201762=
diff:1610201762:1610201193:=101,104c101,102%0a%3c !!!!!Staked collectibles%0a%3c Staked collectibles are collectibles that a certain node is claiming ownership of.  If you ping a node and ask for verification of their staked coins they should provide this so that they come off as trustworthy.  See also [[#vouch|vouches]].%0a%3c !!!!!Vouches[[#vouch]]%0a%3c A vouch means that a node is willing to sign that another node's publicnet is truthful and that they have personally verified every claim.  A vouch is useful because you can get confidence in a new node (new to you) with only 1 signature instead of having to request a dozen signatures from the new node.  The signature of a vouch likely would be the signature of the public key of staked coins.%0a---%0a> !!!!!Staked coins%0a> !!!!!Vouches%0a
host:1610201762=104.175.54.158
author:1610201193=
diff:1610201193:1610200941:=104c104%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to node y for expenses". Then when node y recieves the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowlegement of the contract and that they are willing to sign verifying it.%0a---%0a> Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to node y for expenses". Then when node y recieves the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowlegement of the contract.%0a
host:1610201193=104.175.54.158
author:1610200941=
diff:1610200941:1610199922:=99,105c99%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.  The publicnet of a node consists primarily of that single individual nodes staked coins and contracts and vouches. If someone wants to verify that an address (public key) in the publicnet belongs to the node, they can request a signature verification.  The more times something is signed, the worse security gets, so nodes can set a limit of one signature per day or something like that.  In order to help offset this, other nodes can vouch for you.  Basically the vouching node would need to only sign once to vouch that ALL your claims in your publicnet are true and they have verified them.  This way if someone wants to see if a certain node's claims are true, instead of asking for a signature verification for every claim, they could instead find another node who vouches for them and only require 1 signature.%0a%3c !!!!Components of the Publicnet%0a%3c !!!!!Staked coins%0a%3c !!!!!Vouches%0a%3c !!!!!Contracts%0a%3c Contracts are critical for enforcing promises on the network.  For example, a contract could be as simple as the "memo line" on a check.  So in the publicnet you can sign to the public key of a collectible "giving to node y for expenses". Then when node y recieves the private key from you for the collectible, if they sign for the transfer then they are acknowledging the contract.  Node y would then need to put this in their publicnet as well as an acknowlegement of the contract.%0a%3c %0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.%0a
host:1610200941=104.175.54.158
author:1610199922=
diff:1610199922:1610199845:=99c99%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#node|node]] staking for example.%0a---%0a> Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#stake|node staking]] for example.%0a
host:1610199922=104.175.54.158
author:1610199845=
diff:1610199845:1610199720:=99d98%0a%3c Publicnet is an opt-in area of the DCN and should only be used rarely for broadcasting contracts and claiming ownership of coins for purposes of [[#stake|node staking]] for example.%0a
host:1610199845=104.175.54.158
author:1610199720=
diff:1610199720:1610199041:=106c106%0a%3c Privatenet is the default network of a digital collectible network (DCN). It is 100%25 private and untraceable.  Each collectible has its own public key, so is unlinkable with other collectibles. A collectible never moves to another existing address, so using chain analytics to track a collectible from one owner to the next is impossible.%0a---%0a> %0a
host:1610199720=104.175.54.158
author:1610199041=
diff:1610199041:1610198987:=44c44%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network (DCN) that uses primes instead of [[#fact|factorizations]] as it's proof of work (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network (DCN) that uses primes instead of factorizations as it's proof of work (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a
host:1610199041=104.175.54.158
author:1610198987=
diff:1610198987:1610198871:=44c44%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network (DCN) that uses primes instead of factorizations as it's proof of work (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network that uses primes instead of prime factorizations (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a
host:1610198987=104.175.54.158
author:1610198871=
diff:1610198871:1610198821:=44c44%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be [[#saved|saved secretly]] to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network that uses primes instead of prime factorizations (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be saved secretly to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network that uses primes instead of prime factorizations (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a
host:1610198871=104.175.54.158
author:1610198821=
diff:1610198821:1610198740:=25c25%0a%3c # [[#saved]]The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, or seems to be by not having small factors [[https://math.stackexchange.com/questions/2239252/how-are-large-prime-numbers-found#2239271|#]], it can be [[#prime|saved secretly for use in RSA encryption]].%0a---%0a> # The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, or seems to be by not having small factors [[https://math.stackexchange.com/questions/2239252/how-are-large-prime-numbers-found#2239271|#]], it can be [[#prime|saved secretly for use in RSA encryption]].%0a
host:1610198821=104.175.54.158
author:1610198740=
diff:1610198740:1610198568:=42c42%0a%3c Knowing the speed of factoring large numbers, and the market price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data of these exact metrics, which is priceless.%0a---%0a> Knowing the speed of factoring large numbers, and the market price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data, which is priceless.%0a
host:1610198740=104.175.54.158
author:1610198568=
diff:1610198568:1610198476:=33c33%0a%3c # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]], then it is valid.  Alternatively the miner can submit the digital collectible to the [[#node|network of nodes]] immediatly for safekeeping and so it always keeps it's value.%0a---%0a> # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]], then it is valid.  Otherwise the miner can submit the digital collectible to the [[#node|network of nodes]] for safekeeping and so it always keeps it's value.%0a
host:1610198568=104.175.54.158
author:1610198476=
diff:1610198476:1610198359:=25c25%0a%3c # The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, or seems to be by not having small factors [[https://math.stackexchange.com/questions/2239252/how-are-large-prime-numbers-found#2239271|#]], it can be [[#prime|saved secretly for use in RSA encryption]].%0a---%0a> # The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, or seems to be by not having small factors [[https://math.stackexchange.com/questions/2239252/how-are-large-prime-numbers-found#2239271|#]], it can be saved secretly for use in RSA encryption.%0a
host:1610198476=104.175.54.158
author:1610198359=
diff:1610198359:1610198278:=43c43%0a%3c !!!!Prime number discovery [[#prime]]%0a---%0a> !!!!Prime number discovery%0a
host:1610198359=104.175.54.158
author:1610198278=
diff:1610198278:1610123937:=21c21%0a%3c # Next the miner uses a nonce of his choosing to hash the public key with, then completes the hash using something like Skein 1024, to generate a large random number.%0a---%0a> # Next the miner uses a nonce of his choosing to hash the public key with, using something like Skein 1024, to generate a large random number.%0a
host:1610198278=104.175.54.158
author:1610123937=
diff:1610123937:1610123908:=3c3%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]https://www.google.com/s2/favicons?domain=naturehacker.org&.png) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]] [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1610123937=104.175.54.158
author:1610123908=
diff:1610123908:1610119236:=3c3%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}[[https://www.naturehacker.org/2021/01/toppling-blockchain-prime-factorization.html|#]] [[https://www.naturehacker.org/2021/01/bitcoin-vs-digital-collectible-currency.html|#]]) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1610123908=104.175.54.158
author:1610119236=
diff:1610119236:1610119208:=25c25%0a%3c # The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, or seems to be by not having small factors [[https://math.stackexchange.com/questions/2239252/how-are-large-prime-numbers-found#2239271|#]], it can be saved secretly for use in RSA encryption.%0a---%0a> # The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, or seems to be by not having small factors [[[[https://math.stackexchange.com/questions/2239252/how-are-large-prime-numbers-found#2239271|#]], it can be saved secretly for use in RSA encryption.%0a
host:1610119236=104.175.54.158
author:1610119208=
diff:1610119208:1610099306:=25c25%0a%3c # The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, or seems to be by not having small factors [[[[https://math.stackexchange.com/questions/2239252/how-are-large-prime-numbers-found#2239271|#]], it can be saved secretly for use in RSA encryption.%0a---%0a> # The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, it can be saved secretly for use in RSA encryption.%0a
host:1610119208=104.175.54.158
author:1610099306=
diff:1610099306:1610099117:=108,110c108%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a%3c %0a%3c Hodling customers want nodes to increase requirements to reduce emission.  Buying customers want nodes to reduce requiremnts to increase emission.  This balance is hopefully what keeps emission constant and based on PC-work speed.%0a\ No newline at end of file%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a
host:1610099306=104.175.54.158
author:1610099117=
diff:1610099117:1610097905:=60c60%0a%3c The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the [[#miner|miners]] meet all the following requirements.  The nodes set the rules and ultimately the customers are liable to make sure their trusted nodes are setting good rules.  Here are some highly suggested requirements the nodes can set, some tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a---%0a> The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the miners meet all the following requirements.  The nodes set the rules and ultimately the customers are liable to make sure their trusted nodes are setting good rules.  Here are some highly suggested requirements the nodes can set, some tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a
host:1610099117=104.175.54.158
author:1610097905=
diff:1610097905:1610097861:=46,47c46,47%0a%3c Also the knowledge of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelihood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]]. Alternatively, if using the sieve of eratosthenes, these composites can be added to the sieve, speeding it up [[https://www.programming9.com/tutorials/competitive-programming/412-sieve-of-eratosthenes-fastest-algorithm-to-find-prime-numbers|#]]%0a%3c %0a---%0a> Also the knowledge of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]]. Alternatively, if using the sieve of eratosthenes, these composites can be added to the sieve, speeding it up [[https://www.programming9.com/tutorials/competitive-programming/412-sieve-of-eratosthenes-fastest-algorithm-to-find-prime-numbers|#]]%0a> %0a51,52c51,52%0a%3c !!!!Dis-incentivizing bad uses of technology%0a%3c Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring random challenges, there would be less risk to encryption keys being attacked for the value they hold, or for monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yourself.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a---%0a> !!!!Disincentivizing bad uses of technology%0a> Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring random challenges, there would be less risk to encryption keys bieng attacked for the value they hold, or for monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yourself.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a
host:1610097905=104.175.54.158
author:1610097861=
diff:1610097861:1610097853:=108c108%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and receive value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and recieve value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a
host:1610097861=104.175.54.158
author:1610097853=
diff:1610097853:1610097762:=108c108%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes; and recieve value from both.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a
host:1610097853=104.175.54.158
author:1610097762=
diff:1610097762:1610097669:=97c97%0a%3c The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].  It consists of a Publicnet, and a Privatenet.%0a---%0a> The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].%0a
host:1610097762=104.175.54.158
author:1610097669=
diff:1610097669:1610097610:=88c88%0a%3c The nodes, by setting and enforcing the [[#length|bit length]] of the number that miners factor (difficulty), emission of the coin is controlled.%0a---%0a> The nodes, by setting and enforcing the bit length of the number that miners factor (difficulty), emission of the coin is controlled.%0a
host:1610097669=104.175.54.158
author:1610097610=
diff:1610097610:1610097569:=84c84%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum and maximum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610097610=104.175.54.158
author:1610097569=
diff:1610097569:1610097511:=84c84%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course.  However I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610097569=104.175.54.158
author:1610097511=
diff:1610097511:1610097475:=84c84%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2, of the [[#length|bit length]]. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2 of the [[#length|bit length]]. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610097511=104.175.54.158
author:1610097475=
diff:1610097475:1610097377:=84c84%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2, and the maximum size be one bit greater than 1/2 of the [[#length|bit length]]. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610097475=104.175.54.158
author:1610097377=
diff:1610097377:1610097342:=79c79%0a%3c Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our "one collectible per PC-week" [[#emission|emission]] goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a---%0a> Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our "one collectible per PC-week" goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a
host:1610097377=104.175.54.158
author:1610097342=
diff:1610097342:1610097112:=79c79%0a%3c Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our "one collectible per PC-week" goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a---%0a> Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our one collectible per PC-week goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a
host:1610097342=104.175.54.158
author:1610097112=
diff:1610097112:1610097083:=54,55c54,55%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with each-other on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to a consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a%3c %0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a> %0a79c79%0a%3c Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our one collectible per PC-week goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a---%0a> Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our one collectible per pc-week goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a
host:1610097112=104.175.54.158
author:1610097083=
diff:1610097083:1610096976:=54c54%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.  They are also incentivized to come to consensus with the other nodes about what rules they impose on [[#requirements|collectible requirements]].%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.%0a
host:1610097083=104.175.54.158
author:1610096976=
diff:1610096976:1610096899:=84c84%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments ([[#length|bit length]] of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610096976=104.175.54.158
author:1610096899=
diff:1610096899:1610096874:=84c84%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size of the number, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610096899=104.175.54.158
author:1610096874=
diff:1610096874:1610096690:=84c84%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number, but less than half the size, needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610096874=104.175.54.158
author:1610096690=
diff:1610096690:1610096400:=82c82%0a%3c A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelihood we only need to find a single prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC, and is super-polynomial but sub-exponential [[https://en.wikipedia.org/wiki/General_number_field_sieve|#]]) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a---%0a> A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelihood we only need to find a single prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a
host:1610096690=104.175.54.158
author:1610096400=
diff:1610096400:1610096387:=82c82%0a%3c A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelihood we only need to find a single prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a---%0a> A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a
host:1610096400=104.175.54.158
author:1610096387=
diff:1610096387:1610096200:=82c82%0a%3c A full "prime factorization" is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a---%0a> A full "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a
host:1610096387=104.175.54.158
author:1610096200=
diff:1610096200:1610096155:=68c68%0a%3c # [[#fact|Factorization]] consists of finding one prime factor between 7/16th and one half the bit length.%0a---%0a> # [[#fact|Factorization]] consists of one prime factor between 7/16th and one half the bit length.%0a
host:1610096200=104.175.54.158
author:1610096155=
diff:1610096155:1610096071:=77c77%0a%3c # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have a max of roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go up and down on difficulty often, they may be colluding with speculating miners and should be suspect.%0a---%0a> # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have a max of roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go higher then lower on difficulty often, they may be colluding with speculating miners and should be suspect.%0a
host:1610096155=104.175.54.158
author:1610096071=
diff:1610096071:1610096029:=71c71%0a%3c The bit length of a number to factor is a variable that is controlled by the nodes.  The bit length requirement of the numbers to factor is the Difficulty.  Here are some rules the nodes should enforce.%0a---%0a> The bit length of a number to factor is a variable that is controlled by the nodes.  The bit length of the numbers to factor is the Difficulty.  Here are some rules the nodes should enforce.%0a
host:1610096071=104.175.54.158
author:1610096029=
diff:1610096029:1610095919:=73c73%0a%3c # Difficulty should be reevaluated every set interval and adjusted if needed.  This interval should be between 1 month and 1 year and should be consistent.%0a---%0a> # Difficulty should be reevaluated and adjusted if needed every set interval.  This interval should be between 1 month and 1 year and should be consistent.%0a
host:1610096029=104.175.54.158
author:1610095919=
diff:1610095919:1610095849:=68c68%0a%3c # [[#fact|Factorization]] consists of one prime factor between 7/16th and one half the bit length.%0a---%0a> # [[#fact|Factorization]] must be one prime factor between 7/16th and one half the bit length.%0a
host:1610095919=104.175.54.158
author:1610095849=
diff:1610095849:1610095780:=57c57%0a%3c Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].  I don't see why this requirement cannot change over time, to make network wide collision searches even less effective.%0a---%0a> Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].%0a
host:1610095849=104.175.54.158
author:1610095780=
diff:1610095780:1610095765:=54c54%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, also to increase the trust people have in them.%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, again to increase the trust people have in them.%0a
host:1610095780=104.175.54.158
author:1610095765=
diff:1610095765:1610095728:=54c54%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave, again to increase the trust people have in them.%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a
host:1610095765=104.175.54.158
author:1610095728=
diff:1610095728:1610095446:=5c5%0a%3c !!!Transferal of Collectible [[#transferal]]%0a---%0a> !!!Transferal of Collectible%0a
host:1610095728=104.175.54.158
author:1610095446=
diff:1610095446:1610095360:=
host:1610095446=104.175.54.158
author:1610095360=
diff:1610095360:1610095307:=6c6%0a%3c Attach:restible.png%0a---%0a> Attach:file.ext%0a
host:1610095360=104.175.54.158
author:1610095307=
diff:1610095307:1610094090:=4,6d3%0a%3c %0a%3c !!!Transferal of Collectible%0a%3c Attach:file.ext%0a
host:1610095307=104.175.54.158
author:1610094090=
diff:1610094090:1610094016:=36c36%0a%3c Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.  This software should be only used on a computer that is not connected to the internet, so it cannot be hacked.%0a---%0a> Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.%0a
host:1610094090=104.175.54.158
author:1610094016=
diff:1610094016:1610093959:=36c36%0a%3c Software and guides of how to factor large numbers have already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.%0a---%0a> Software and guides of how to factor large numbers has already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.%0a
host:1610094016=104.175.54.158
author:1610093959=
diff:1610093959:1610093912:=30c30%0a%3c # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]], then it is valid.  Otherwise the miner can submit the digital collectible to the [[#node|network of nodes]] for safekeeping and so it always keeps it's value.%0a---%0a> # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]] it is valid.  Otherwise the miner can submit the digital collectible to the [[#node|network of nodes]] for safekeeping and so it always keeps it's value.%0a
host:1610093959=104.175.54.158
author:1610093912=
diff:1610093912:1610093694:=29,30d28%0a%3c %0a%3c # This digital collectible can be stored "indefinitely" in secret by the miner.  As long as it continues to meet the [[#requirements|requirements]] of the [[#node|nodes]] it is valid.  Otherwise the miner can submit the digital collectible to the [[#node|network of nodes]] for safekeeping and so it always keeps it's value.%0a
host:1610093912=104.175.54.158
author:1610093694=
diff:1610093694:1610093585:=30c30,31%0a%3c # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the new owner of the collectible.  This step requires broadcasting the transaction to trusted [[#node|node(s)]] for storage on the [[#ledger|ledger]].%0a---%0a> # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the new owner of the collectible.  This step requires broadcasting the transaction to trusted [[#node|node(s)]].%0a> %0a
host:1610093694=104.175.54.158
author:1610093585=
diff:1610093585:1610093574:=33c33%0a%3c !!!How to mine [[#howto]]%0a---%0a> !!!How to mine%0a
host:1610093585=104.175.54.158
author:1610093574=
diff:1610093574:1610093408:=24c24%0a%3c # The miner now completes a [[#fact|factorization]] of the number (See [[#howto|how to mine]]) and records it.%0a---%0a> # The miner now completes a [[#fact|factorization]] of the number and records it.%0a
host:1610093574=104.175.54.158
author:1610093408=
diff:1610093408:1610093376:=35c35%0a%3c Software and guides of how to factor large numbers has already been developed and are mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.%0a---%0a> Software and guides of how to factor large numbers has already been developed and is mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.%0a
host:1610093408=104.175.54.158
author:1610093376=
diff:1610093376:1610093344:=35c35%0a%3c Software and guides of how to factor large numbers has already been developed and is mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#publickey|public key's]], and large random numbers.%0a---%0a> Software and guides of how to factor large numbers has already been developed and is mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#public|public key's]], and large random numbers.%0a
host:1610093376=104.175.54.158
author:1610093344=
diff:1610093344:1610093320:=35c35%0a%3c Software and guides of how to factor large numbers has already been developed and is mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, [[#public|public key's]], and large random numbers.%0a---%0a> Software and guides of how to factor large numbers has already been developed and is mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, public key's, and large random numbers.%0a
host:1610093344=104.175.54.158
author:1610093320=
diff:1610093320:1610087911:=35c35%0a%3c Software and guides of how to factor large numbers has already been developed and is mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.  But we do need to develop simple software to create strong and secure private keys, public key's, and large random numbers.%0a---%0a> Software and guides of how to factor large numbers has already been developed and is mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.%0a
host:1610093320=104.175.54.158
author:1610087911=
diff:1610087911:1610087878:=16c16%0a%3c # The miner then creates a [[#publickey|public key]] from the private key.  %0a---%0a> # The miner then creates a public key from the private key.  %0a
host:1610087911=104.175.54.158
author:1610087878=
diff:1610087878:1610087733:=52c52%0a%3c !!!Public key requirements [[#publickey]]%0a---%0a> !!!Public key requirements%0a
host:1610087878=104.175.54.158
author:1610087733=
diff:1610087733:1610087365:=6c6%0a%3c Mining is done offline and miners create and complete their own challenges that meet the [[#requirements|requirements]] of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.%0a---%0a> Mining is done offline and miners create and complete their own challenges that meet the requirements of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.%0a
host:1610087733=104.175.54.158
author:1610087365=
diff:1610087365:1610087308:=20c20%0a%3c # Then the miner truncates the number to the [[#length|bit length]] and other [[#requirements|requirements]] that the network of nodes require.%0a---%0a> # Then the miner truncates the number to the bit length and other [[#requirements|requirements]] that the network of nodes require.%0a
host:1610087365=104.175.54.158
author:1610087308=
diff:1610087308:1610085098:=12c12%0a%3c # First the miner see's what [[#length|bit length]] of number is required to be accepted by the network of nodes.  %0a---%0a> # First the miner see's what bit length of number is required to be accepted by the network of nodes.  %0a
host:1610087308=104.175.54.158
author:1610085098=
diff:1610085098:1610085046:=8c8%0a%3c Every time a [[#fact|factorization]] is completed that meets the [[#requirements|requirements]] of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation; which is the [[#emission|emission]].%0a---%0a> Every time a [[#fact|factorization]] is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation; which is the [[#emission|emission]].%0a
host:1610085098=104.175.54.158
author:1610085046=
diff:1610085046:1610084824:=6,8c6,8%0a%3c Mining is done offline and miners create and complete their own challenges that meet the requirements of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS [[#fact|factorization]] of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.%0a%3c %0a%3c Every time a [[#fact|factorization]] is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation; which is the [[#emission|emission]].%0a---%0a> Mining is done offline and miners create and complete their own challenges that meet the requirements of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS factorization of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.%0a> %0a> Every time a factorization is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation; which is the [[#emission|emission]].%0a
host:1610085046=104.175.54.158
author:1610084824=
diff:1610084824:1610084628:=3c3%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the network.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible network (DCN) (formerly called digital collectible currency {DCC}) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1610084824=104.175.54.158
author:1610084628=
diff:1610084628:1610084067:=50c50%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother on the free market to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a
host:1610084628=104.175.54.158
author:1610084067=
diff:1610084067:1610084007:=78c78%0a%3c A full "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single prime factor near half the size of the number to ensure, not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a---%0a> A full "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single prime factor near half the size of the number to ensure that not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a
host:1610084067=104.175.54.158
author:1610084007=
diff:1610084007:1610083492:=
host:1610084007=104.175.54.158
author:1610083492=
diff:1610083492:1610083456:=78c78%0a%3c A full "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single prime factor near half the size of the number to ensure that not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a---%0a> A full "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a
host:1610083492=104.175.54.158
author:1610083456=
diff:1610083456:1610083396:=64c64%0a%3c # [[#fact|Factorization]] must be one prime factor between 7/16th and one half the bit length.%0a---%0a> # [[#fact|Factorization]] must be one factor between 7/16th and one half the bit length.%0a
host:1610083456=104.175.54.158
author:1610083396=
diff:1610083396:1610083369:=76,81d75%0a%3c %0a%3c !!!Factorization [[#fact]]%0a%3c A full "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a%3c %0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a%3c %0a
host:1610083396=104.175.54.158
author:1610083369=
diff:1610083369:1610083349:=31a32,35%0a> !!!Factorization [[#fact]]%0a> A full "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a> %0a> We can say, for example, that one prime factor of at least 7/16th the size of the number needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610083369=104.175.54.158
author:1610083349=
diff:1610083349:1610082896:=68c68,70%0a%3c # [[#fact|Factorization]] must be one factor between 7/16th and one half the bit length.%0a---%0a> # Prime factorization must not include any factor longer than 1/2 the bit length.%0a> %0a> # Prime factorization must include at least one factor greater than 2/5 the bit length.%0a
host:1610083349=104.175.54.158
author:1610082896=
diff:1610082896:1610082718:=35c35%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable to change for difficulty adjustments (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the number needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610082896=104.175.54.158
author:1610082718=
diff:1610082718:1610082591:=35c35%0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the number needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> We can say, for example, that one prime factor of at least 7/16th the size of the nunber needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a
host:1610082718=104.175.54.158
author:1610082591=
diff:1610082591:1610082578:=33c33%0a%3c A full "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a---%0a> A "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a
host:1610082591=104.175.54.158
author:1610082578=
diff:1610082578:1610082548:=32c32%0a%3c !!!Factorization [[#fact]]%0a---%0a> !!!Prime Factorization [[#prime]]%0a
host:1610082578=104.175.54.158
author:1610082548=
diff:1610082548:1610082413:=24,28c24,28%0a%3c # The miner now completes a [[#fact|factorization]] of the number and records it.%0a%3c %0a%3c #The miner checks that the [[#fact|factorization]] meets the [[#requirements|requirements of the nodes]].%0a%3c %0a%3c # The public key, nonce, and [[#fact|factorization]] constitutes one "digital collectible".  The [[#fact|factorization]] is the "Proof of Work".%0a---%0a> # The miner now completes a [[#prime|prime factorization]] of the number and records it.%0a> %0a> #The miner checks that the [[#prime|prime factorization]] meets the [[#requirements|requirements of the nodes]].%0a> %0a> # The public key, nonce, and [[#prime|prime factorization]] constitutes one "digital collectible".  The [[#prime|prime factorization]] is the "Proof of Work".%0a
host:1610082548=104.175.54.158
author:1610082413=
diff:1610082413:1610082333:=33c33%0a%3c A "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only that GNFS is used (which cannot be sped up with GPU/FPGA/ASIC) as the majority of the computation effort (since finding small factors can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a---%0a> A "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only the GNFS is used as the majority of the computation effort (since finding small fqctkrs can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a
host:1610082413=104.175.54.158
author:1610082333=
diff:1610082333:1610081990:=33,35c33%0a%3c A "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only the GNFS is used as the majority of the computation effort (since finding small fqctkrs can be sped up with GPU [[https://eprint.iacr.org/2020/1265.pdf|#]]), but also that each challenge takes roughly the same amount of time.%0a%3c %0a%3c We can say, for example, that one prime factor of at least 7/16th the size of the nunber needs to be found.  Both the size of the factor, or the length of the number could be changed to change the difficulty of course, but I strongly suggest the minimum size of the factor be between 7/16th and 1/2. Also I suggest the minimum size of the factor is not changed unless absolutely necessary so that there is only one variable (bit length of the number to factor) to make it easier for nodes to reach consensus on the rules. %0a---%0a> A "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only the GNFS is used as the majority of the computation time, but also that each challenge takes roughly the same amount of time.%0a
host:1610082333=104.175.54.158
author:1610081990=
diff:1610081990:1610081880:=24,28c24,28%0a%3c # The miner now completes a [[#prime|prime factorization]] of the number and records it.%0a%3c %0a%3c #The miner checks that the [[#prime|prime factorization]] meets the [[#requirements|requirements of the nodes]].%0a%3c %0a%3c # The public key, nonce, and [[#prime|prime factorization]] constitutes one "digital collectible".  The [[#prime|prime factorization]] is the "Proof of Work".%0a---%0a> # The miner now completes a prime factorization of the number and records it.%0a> %0a> #The miner checks that the prime factorization meets the [[#requirements|requirements of the nodes]].%0a> %0a> # The public key, nonce, and prime factorization constitutes one "digital collectible".  The prime factorization is the "Proof of Work".%0a
host:1610081990=104.175.54.158
author:1610081880=
diff:1610081880:1610056848:=31,33d30%0a%3c %0a%3c !!!Prime Factorization [[#prime]]%0a%3c A "prime factorization" in full is unlikely to be necessary nor advantageous.  In all likelyhood we only need to find a single factor near half the size of the number to ensure that not only the GNFS is used as the majority of the computation time, but also that each challenge takes roughly the same amount of time.%0a
host:1610081880=104.175.54.158
author:1610056848=
diff:1610056848:1610056620:=99c99%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the essence of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the lifeblood of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a
host:1610056848=104.175.54.158
author:1610056620=
diff:1610056620:1610056547:=99c99%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the lifeblood of any endeavor.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the lifeblood.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a
host:1610056620=104.175.54.158
author:1610056547=
diff:1610056547:1610048138:=88c88%0a%3c The ledger is the distributed database of accepted collectibles stored and served by the [[#node|nodes]].%0a---%0a> %0a
host:1610056547=104.175.54.158
author:1610048138=
diff:1610048138:1610047901:=44c44%0a%3c The practice of factoring large numbers is a valuable tool both for creating our own strong encryption or breaking that of bad actors. The People having this power helps keep bad actors and those who would exert power over others in check.  Power to the people.%0a---%0a> Factoring large numbers is a valuable tool both for creating our own strong encryption or breaking that of bad actors. The People having this power helps keep bad actors and those who would exert power over others in check.  Power to the people.%0a
host:1610048138=104.175.54.158
author:1610047901=
diff:1610047901:1610047691:=36d35%0a%3c !!!!Determining security of a given bit length%0a38c37%0a%3c !!!!Prime number discovery%0a---%0a> %0a43d41%0a%3c !!!!People power%0a46d43%0a%3c !!!!Disincentivizing bad uses of technology%0a
host:1610047901=104.175.54.158
author:1610047691=
diff:1610047691:1610047594:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be saved secretly to create encryption yourself or given secretly to security researchers for use in encryption like RSA. If this is not desired, it could be published on another digital collectible network that uses primes instead of prime factorizations (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be saved secretly to create encryption yojrself or given secretly to security researchers for use in RSA encryption. If this is not desired, it could be published on another digital collectible network that uses primes instead of prime factorizations (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a
host:1610047691=104.175.54.158
author:1610047594=
diff:1610047594:1610047444:=49c49%0a%3c Nodes should set a public key requirement that is different than any other currency to prevent industry wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].%0a---%0a> Nodes should set a public key requirement that is different than any other currency to prevent coin wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].%0a
host:1610047594=104.175.54.158
author:1610047444=
diff:1610047444:1610047337:=46c46%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network. The nodes are the forefront of the network and compete with eachother to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network.  Think of them as the Cortex of the network. The nodes are the forefront of the network and compete with eachother to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a
host:1610047444=104.175.54.158
author:1610047337=
diff:1610047337:1610047278:=46c46%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network.  Think of them as the Cortex of the network. The nodes are the forefront of the network and compete with eachother to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network.  The nodes are the forefront of the network and compete with eachother to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a
host:1610047337=104.175.54.158
author:1610047278=
diff:1610047278:1610046850:=47,49d46%0a%3c %0a%3c !!!Public key requirements%0a%3c Nodes should set a public key requirement that is different than any other currency to prevent coin wide collision searches [[https://bitcointalk.org/index.php?topic=4453897.0|#]].%0a
host:1610047278=104.175.54.158
author:1610046850=
diff:1610046850:1610046537:=38,40c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be saved secretly to create encryption yojrself or given secretly to security researchers for use in RSA encryption. If this is not desired, it could be published on another digital collectible network that uses primes instead of prime factorizations (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  %0a%3c %0a%3c Also the knowledge of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]]. Alternatively, if using the sieve of eratosthenes, these composites can be added to the sieve, speeding it up [[https://www.programming9.com/tutorials/competitive-programming/412-sieve-of-eratosthenes-fastest-algorithm-to-find-prime-numbers|#]]%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be saved secretly to create encryption yojrself or given secretly to security researchers for use in RSA encryption. If this is not desired, it could be published on another digital collectible network that uses primes instead of prime factorizations (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]].%0a
host:1610046850=104.175.54.158
author:1610046537=
diff:1610046537:1610046313:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be saved secretly to create encryption yojrself or given secretly to security researchers for use in RSA encryption. If this is not desired, it could be published on another digital collectible network that uses primes instead of prime factorizations (which network again would be valuable to security researchers, so they can see the value of large prime numbers).  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]].%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]].%0a
host:1610046537=104.175.54.158
author:1610046313=
diff:1610046313:1610046268:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]].%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations like ours.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]].%0a
host:1610046313=104.175.54.158
author:1610046268=
diff:1610046268:1610046222:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is, in fact, prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations like ours.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]].%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations like ours.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]].%0a
host:1610046268=104.175.54.158
author:1610046222=
diff:1610046222:1610046063:=36c36%0a%3c Knowing the speed of factoring large numbers, and the market price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data, which is priceless.%0a---%0a> Knowing the speed of factoring large prime numbers, and the price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data, which is priceless.%0a
host:1610046222=104.175.54.158
author:1610046063=
diff:1610046063:1610045768:=42c42%0a%3c Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring random challenges, there would be less risk to encryption keys bieng attacked for the value they hold, or for monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yourself.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a---%0a> Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring random challenges, there would be less risk to encryption keys bieng attacked for the value they hold, or for monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yoursrlf.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a
host:1610046063=104.175.54.158
author:1610045768=
diff:1610045768:1610045721:=42c42%0a%3c Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring random challenges, there would be less risk to encryption keys bieng attacked for the value they hold, or for monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yoursrlf.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a---%0a> Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring, there would be less risk to encryption keys bieng attacked for the value they hold, or for monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yoursrlf.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a
host:1610045768=104.175.54.158
author:1610045721=
diff:1610045721:1610044690:=35c35%0a%3c !!!Real World Value of the DCN Mining Challenge%0a---%0a> !!!Real World Value of Mining Challenge%0a41,42d40%0a%3c %0a%3c Factoring computers could be used nefariously to try to crack high value keys, perhaps even keys that hold lots of bitcoin for example [[https://bitcointalk.org/index.php?topic=5157696.0|#]]. By giving monetary awards for factoring, there would be less risk to encryption keys bieng attacked for the value they hold, or for monetary compensation.  It would likely prove more valuable to create your own challenge on the network than to try to brute force a key.  For example, each key on our network will contain only 1 collectible, and breaking the key would be near infinitely harder than just mining your own collectible yoursrlf.  So our network incentivizes factoring computers to act in a good way instead of bad.%0a
host:1610045721=104.175.54.158
author:1610044690=
diff:1610044690:1610044102:=83,85d82%0a%3c %0a%3c !!!!Homomorphic swaps%0a%3c [[https://bitcointalk.org/index.php?topic=4980960.0|#]]%0a
host:1610044690=104.175.54.158
author:1610044102=
diff:1610044102:1610044058:=86c86%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue the network.  Customers are the lifeblood.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue thr network.  Customers are the lifeblood.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a
host:1610044102=104.175.54.158
author:1610044058=
diff:1610044058:1610044034:=86c86%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes, this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue thr network.  Customers are the lifeblood.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a---%0a> While it is a nice thought to think that everyone that uses the network will be miners and/or nodes. But this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue thr network.  Customers are the lifeblood.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a
host:1610044058=104.175.54.158
author:1610044034=
diff:1610044034:1610043731:=85,86c85%0a%3c !!Customer%0a%3c While it is a nice thought to think that everyone that uses the network will be miners and/or nodes. But this is not only impractical, but also undesirable.  If that were the case, no one would be bringing in outside value and thus there would be little incentive to continue thr network.  Customers are the lifeblood.  They compensate the nodes for maintaining the network, and the miners for creating collectibles.  They are both the customer of miners, and also the customer of nodes.  They are the lifeblood of the network and have ultimate authority over it.  They have veto power over node decisions by choosing which nodes to trust, and if there is no trustworthy nodes, to start one themselves or compensate someone to do it.%0a\ No newline at end of file%0a---%0a> !!Customer%0a\ No newline at end of file%0a
host:1610044034=104.175.54.158
author:1610043731=
diff:1610043731:1610043666:=84,85d83%0a%3c %0a%3c !!Customer%0a\ No newline at end of file%0a
host:1610043731=104.175.54.158
author:1610043666=
diff:1610043666:1610042951:=69c69%0a%3c The nodes, by setting and enforcing the bit length of the number that miners factor (difficulty), emission of the coin is controlled.%0a---%0a> By the nodes setting and enforcing the bit length of the number that miners factor (difficulty), emission of the coin is controlled.%0a
host:1610043666=104.175.54.158
author:1610042951=
diff:1610042951:1610042878:=64c64%0a%3c # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have a max of roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go higher then lower on difficulty often, they may be colluding with speculating miners and should be suspect.%0a---%0a> # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have a max of roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]], miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go higher then lower on difficulty often, they may be colluding with speculating miners and should be suspect.%0a
host:1610042951=104.175.54.158
author:1610042878=
diff:1610042878:1610042819:=64c64%0a%3c # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have a max of roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]], miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go higher then lower on difficulty often, they may be colluding with speculating miners and should be suspect.%0a---%0a> # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have at max a roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]], miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go higher then lower on difficulty often, they may be colluding with speculating miners and should be suspect.%0a
host:1610042878=104.175.54.158
author:1610042819=
diff:1610042819:1610042284:=64c64%0a%3c # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have at max a roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]], miners can speculate by mining numbers that are not currently acceptable but that they think would be in the future.  However, chances are that the difficulty will always increase and not decrease.  If certain nodes go higher then lower on difficulty often, they may be colluding with speculating miners and should be suspect.%0a---%0a> # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have at max a roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]], miners can speculate by mining numbers that are not currently acceptible but that they think would be in the future, however chances are that the difficulty will always increase and not decrease.  If certain nodes go higher then lower on difficulty, they may be colluding with speculating miners and should be suspect.%0a
host:1610042819=104.175.54.158
author:1610042284=
diff:1610042284:1610040901:=64c64%0a%3c # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between. This means each period would have at max a roughly 15-20%25 difference in work required than the previous period [[https://www.mersenneforum.org/showthread.php?t=23078|#]], miners can speculate by mining numbers that are not currently acceptible but that they think would be in the future, however chances are that the difficulty will always increase and not decrease.  If certain nodes go higher then lower on difficulty, they may be colluding with speculating miners and should be suspect.%0a---%0a> # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between.%0a
host:1610042284=104.175.54.158
author:1610040901=
diff:1610040901:1610040768:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations like ours.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]] [[https://en.m.wikipedia.org/wiki/Twin_prime|#]].%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations like ours.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]].%0a
host:1610040901=104.175.54.158
author:1610040768=
diff:1610040768:1610040680:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations like ours.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would probably have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]].%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations like ours.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]].%0a
host:1610040768=104.175.54.158
author:1610040680=
diff:1610040680:1610040584:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published on another digital collectible network that uses primes instead of prime factorizations like ours.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]].%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]].%0a
host:1610040680=104.175.54.158
author:1610040584=
diff:1610040584:1610040301:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would have a higher likelyhood than any random number [[https://www.researchgate.net/publication/240324818_The_Prime_Numbers_and_Their_Distribution|#]].%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would have a higher likelyhood than any random number.%0a
host:1610040584=104.175.54.158
author:1610040301=
diff:1610040301:1610040148:=38c38%0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.  For example researchers could check the primality of numbers near proven composite numbers, since the primality of these numbers would have a higher likelyhood than any random number.%0a---%0a> Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.%0a
host:1610040301=104.175.54.158
author:1610040148=
diff:1610040148:1610040121:=36c36%0a%3c Knowing the speed of factoring large prime numbers, and the price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data, which is priceless.%0a---%0a> Knowing the speed of factoring large prime numbers, and the price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data which is priceless.%0a
host:1610040148=104.175.54.158
author:1610040121=
diff:1610040121:1610039952:=36c36%0a%3c Knowing the speed of factoring large prime numbers, and the price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data which is priceless.%0a---%0a> Knowing the speed of factoring of a large prime number, and the price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data which is priceless.%0a
host:1610040121=104.175.54.158
author:1610039952=
diff:1610039952:1610039808:=25,26d24%0a%3c %0a%3c #The miner checks that the prime factorization meets the [[#requirements|requirements of the nodes]].%0a
host:1610039952=104.175.54.158
author:1610039808=
diff:1610039808:1610039648:=21,22d20%0a%3c %0a%3c # The miner then makes sure the number is not prime [[https://en.m.wikipedia.org/wiki/Primality_test|#]].  If it is, it can be saved secretly for use in RSA encryption.%0a
host:1610039808=104.175.54.158
author:1610039648=
diff:1610039648:1610039517:=36c36%0a%3c Factoring large numbers is a valuable tool both for creating our own strong encryption or breaking that of bad actors. The People having this power helps keep bad actors and those who would exert power over others in check.  Power to the people.%0a---%0a> Factoring large numbers is a valuable tool, and the People having this power helps keep bad actors and those who would exert power over others in check.  Power to the people.%0a
host:1610039648=104.175.54.158
author:1610039517=
diff:1610039517:1610039489:=
host:1610039517=104.175.54.158
author:1610039489=
diff:1610039489:1610039444:=32c32%0a%3c Knowing the speed of factoring of a large prime number, and the price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data which is priceless.%0a---%0a> The speed of factoring of a large prime number, and the price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data which is priceless.%0a
host:1610039489=104.175.54.158
author:1610039444=
diff:1610039444:1610039405:=36c36%0a%3c Factoring large numbers is a valuable tool, and the People having this power helps keep bad actors and those who would exert power over others in check.  Power to the people.%0a---%0a> Factoring large numbers is a valuable tool, and the people having this power helps keep bad actors and those who would exert power over others in check.%0a
host:1610039444=104.175.54.158
author:1610039405=
diff:1610039405:1610039209:=35,36d34%0a%3c %0a%3c Factoring large numbers is a valuable tool, and the people having this power helps keep bad actors and those who would exert power over others in check.%0a
host:1610039405=104.175.54.158
author:1610039209=
diff:1610039209:1610038891:=33,34d32%0a%3c %0a%3c Our network will also help discover large prime numbers.  Once in a while a miner will generate a number to factor that is in fact prime.  When this happens it can be given secretly to security researchers for use in RSA encryption or published.  Also the knowlege of which large numbers are composites, can help narrow down the search for primes by security researchers.%0a
host:1610039209=104.175.54.158
author:1610038891=
diff:1610038891:1610038269:=32c32%0a%3c The speed of factoring of a large prime number, and the price this is valued at, is of extreme importance to security researchers creating encryption standards.  Researchers are willing to pay tens of thousands of dollars for this information [[https://en.m.wikipedia.org/wiki/RSA_Factoring_Challenge|#]], and our network will provide them constant real time data which is priceless.%0a---%0a> The factoring of a large prime number%0a
host:1610038891=104.175.54.158
author:1610038269=
diff:1610038269:1610038254:=8c8%0a%3c Every time a factorization is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation; which is the [[#emission|emission]].%0a---%0a> Everytime a factorization is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation; which is the [[#emission|emission]].%0a
host:1610038269=104.175.54.158
author:1610038254=
diff:1610038254:1610038221:=8c8%0a%3c Everytime a factorization is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation; which is the [[#emission|emission]].%0a---%0a> Everytime a factorization is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation which is the [[#emission|emission]].%0a
host:1610038254=104.175.54.158
author:1610038221=
diff:1610038221:1610038174:=8c8%0a%3c Everytime a factorization is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other [[#requirements|requirements]]), one more collectible enters circulation which is the [[#emission|emission]].%0a---%0a> Everytime a factorization is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other requirements), one more collectible enters circulation which is the [[#emission|emission]].%0a
host:1610038221=104.175.54.158
author:1610038174=
diff:1610038174:1610038051:=8c8%0a%3c Everytime a factorization is completed that meets the requirements of the network of nodes ([[#length|difficulty]] and other requirements), one more collectible enters circulation which is the [[#emission|emission]].%0a---%0a> Everytime a factorization is completed that meets the requirements of the network of nodes, one more collectible enters circulation which is the [[#emission|emission]].%0a
host:1610038174=104.175.54.158
author:1610038051=
diff:1610038051:1610037942:=58c58%0a%3c Note: In 2021 it appears it will take factoring a roughly 442 bit (134 digit at 3.3 bit per decimal digit[[https://www.exploringbinary.com/ratio-of-bits-to-decimal-digits/|#]]) number to achieve our one collectible per pc-week goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a---%0a> Note: In 2021 it appears it will take factoring a roughly 442 bit number to achieve our one collectible per pc-week goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a
host:1610038051=104.175.54.158
author:1610037942=
diff:1610037942:1610037476:=57,58d56%0a%3c %0a%3c Note: In 2021 it appears it will take factoring a roughly 442 bit number to achieve our one collectible per pc-week goal [[https://www.mersenneforum.org/showthread.php?t=23078|#]].%0a
host:1610037942=104.175.54.158
author:1610037476=
diff:1610037476:1610037460:=29d28%0a%3c %0a
host:1610037476=104.175.54.158
author:1610037460=
diff:1610037460:1610037346:=28,29d27%0a%3c !!!How to mine%0a%3c Software and guides of how to factor large numbers has already been developed and is mature and can easily be found online [[https://www.mersenneforum.org/showthread.php?t=23078|#]]. Thus our digital collectible network does not need to include mining software.%0a
host:1610037460=104.175.54.158
author:1610037346=
diff:1610037346:1610037172:=29d28%0a%3c The factoring of a large prime number%0a
host:1610037346=104.175.54.158
author:1610037172=
diff:1610037172:1610037102:=27,28d26%0a%3c %0a%3c !!!Real World Value of Mining Challenge%0a
host:1610037172=104.175.54.158
author:1610037102=
diff:1610037102:1610036651:=28c28%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network.  The nodes are the forefront of the network and compete with eachother to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to the customer, the customer has to ask node(s) to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a---%0a> Nodes are not miners and have a huge and important role in a Digital Collectible Network.  The nodes are the forefront of the network and compete with eachother to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to someone, that someone has to ask the node to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a
host:1610037102=104.175.54.158
author:1610036651=
diff:1610036651:1610036276:=8c8%0a%3c Everytime a factorization is completed that meets the requirements of the network of nodes, one more collectible enters circulation which is the [[#emission|emission]].%0a---%0a> Everytime a a factorization is completed that meets the requirements of the network of nodes, one more collectible enters circulation which is the [[#emission|emission]].%0a
host:1610036651=104.175.54.158
author:1610036276=
diff:1610036276:1610036149:=60c60%0a%3c The price is not controlled but I expect each collectible to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0029 coins of Monero which, at $150 per coin, earns you about 43 cents.%0a---%0a> The price is not controlled but I expect each collectible to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0029 coins which, at $150 per coin, earns you about 43 cents.%0a
host:1610036276=104.175.54.158
author:1610036149=
diff:1610036149:1610035918:=60c60%0a%3c The price is not controlled but I expect each collectible to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0029 coins which, at $150 per coin, earns you about 43 cents.%0a---%0a> The price is not controlled but I expect each collectible to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0014 coins which, at $150 per coin, earns you about 20 cents.%0a
host:1610036149=104.175.54.158
author:1610035918=
diff:1610035918:1610035894:=55c55%0a%3c The emission has no upper limit.  We believe that miners, nodes, and customers are all essential, and always essential.  %0a---%0a> The emission has no upper limit.  We believe that miners, nodes, and customers are all essential and always essential.  %0a
host:1610035918=104.175.54.158
author:1610035894=
diff:1610035894:1610034860:=58,60d57%0a%3c %0a%3c !!!Price%0a%3c The price is not controlled but I expect each collectible to hold a value somewhere between $0.10 and $1.00 each in 2021 dollars.  This is based on the [[#emission|emission]] peg at one PC-week worth of work per collectible and how much that is valued on the Monero blockchain right now which is a predominantly CPU mined coin.  One PC-week currently earns you about 0.0014 coins which, at $150 per coin, earns you about 20 cents.%0a
host:1610035894=104.175.54.158
author:1610034860=
diff:1610034860:1610034823:=55c55%0a%3c The emission has no upper limit.  We believe that miners, nodes, and customers are all essential and always essential.  %0a---%0a> The emission has no upper limit.  We believe that miners, nodes, and customers are all always essential.  %0a
host:1610034860=104.175.54.158
author:1610034823=
diff:1610034823:1610033740:=57c57%0a%3c Emission is controlled that for every enthusiast PC worth of computing power that is on earth mining, there will be one collectible added to the ledger per week.  So if the world has 5,000 PC's worth of power mining the collectible, then 5,000 collectibles will be added to the ledger every week.  This will keep the value of the coin quite stable as long as the nodes are controlling difficulty well and the amount of miners scale up with demand for the collectibles.%0a---%0a> Emission is controlled that for every enthusiast PC worth of computing power that is on earth mining, there will be one collectible added to the ledger per week.  So if the world has 5,000 PC's worth of power mining the coin, then 5,000 coins will be added to the ledger every week.  This will keep the value of the coin quite stable as long as the nodes are controlling difficulty well and the amount of miners scale up with demand for the collectibles.%0a
host:1610034823=104.175.54.158
author:1610033740=
diff:1610033740:1610008807:=61,62d60%0a%3c !!!!Key verification%0a%3c [[https://stackoverflow.com/questions/16879230/public-key-signing-verification#16879250|#]]%0a
host:1610033740=104.175.54.158
author:1610008807=
diff:1610008807:1610008785:=60c60%0a%3c !!!Publicnet [[#public]]%0a---%0a> !!!Publicnet%0a
host:1610008807=104.175.54.158
author:1610008785=
diff:1610008785:1609996265:=28,29d27%0a%3c Nodes are not miners and have a huge and important role in a Digital Collectible Network.  The nodes are the forefront of the network and compete with eachother to be chosen by customers as a trusted node.  What this means is when a miner gives the collectible they mined to someone, that someone has to ask the node to accept the collectible and their change to the key associated with it.  Nodes will likely ask a fee for this service, and are incentivized to share the info they gain with other nodes to increase their trustworthiness.  They are also incentivized to stake coins (see [[#public|publicnet]]) that can be blacklisted if they misbehave again to increase the trust people have in them.%0a%3c %0a
host:1610008785=104.175.54.158
author:1609996265=
diff:1609996265:1609996213:=3c3%0a%3c A digital collectible network (DCN) (formerly called digital collectible currency {DCC}) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible network (DCN) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1609996265=104.175.54.158
author:1609996213=
diff:1609996213:1609996137:=3c3%0a%3c A digital collectible network (DCN) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible currency (DCC) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1609996213=104.175.54.158
author:1609996137=
diff:1609996137:1609996073:=29c29%0a%3c The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the miners meet all the following requirements.  The nodes set the rules and ultimately the customers are liable to make sure their trusted nodes are setting good rules.  Here are some highly suggested requirements the nodes can set, some tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a---%0a> The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the miners meet all the following requirements.  The nodes set the rules and ultimately the customers are liable to make sure their trusted nodes are setting good rules.  Here are some highoy suggested requrements the nodes can set, soke tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a
host:1609996137=104.175.54.158
author:1609996073=
diff:1609996073:1609995855:=29c29%0a%3c The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the miners meet all the following requirements.  The nodes set the rules and ultimately the customers are liable to make sure their trusted nodes are setting good rules.  Here are some highoy suggested requrements the nodes can set, soke tweaks might be needed or more rules implemented as needed to prevent miners from minimizing the difficulty of their challenge.%0a---%0a> The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the miners meet all the following requirements.%0a
host:1609996073=104.175.54.158
author:1609995855=
diff:1609995855:1609995736:=29c29%0a%3c The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.  The nodes verify that the proposed collectibles presented by the miners meet all the following requirements.%0a---%0a> The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.%0a
host:1609995855=104.175.54.158
author:1609995736=
diff:1609995736:1609994786:=51,55d50%0a%3c By the nodes setting and enforcing the bit length of the number that miners factor (difficulty), emission of the coin is controlled.%0a%3c %0a%3c The emission has no upper limit.  We believe that miners, nodes, and customers are all always essential.  %0a%3c %0a%3c Emission is controlled that for every enthusiast PC worth of computing power that is on earth mining, there will be one collectible added to the ledger per week.  So if the world has 5,000 PC's worth of power mining the coin, then 5,000 coins will be added to the ledger every week.  This will keep the value of the coin quite stable as long as the nodes are controlling difficulty well and the amount of miners scale up with demand for the collectibles.%0a
host:1609995736=104.175.54.158
author:1609994786=
diff:1609994786:1609994714:=54c54%0a%3c !!!!Proof of Burn%0a---%0a> %0a
host:1609994786=104.175.54.158
author:1609994714=
diff:1609994714:1609994685:=4c4%0a%3c !!Mining [[#miner]]%0a---%0a> !!Mining%0a
host:1609994714=104.175.54.158
author:1609994685=
diff:1609994685:1609994632:=29c29%0a%3c The nodes set the requirements for collectibles they add to their [[#ledger|ledger]] for [[#miner|miners]] to abide by.%0a---%0a> The nodes set the requirements for collectibles they add to their [[#ledger|ledger]].%0a
host:1609994685=104.175.54.158
author:1609994632=
diff:1609994632:1609994605:=26c26%0a%3c # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the new owner of the collectible.  This step requires broadcasting the transaction to trusted [[#node|node(s)]].%0a---%0a> # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the new owner of the collectible.  This step requires broadcasting the transaction to trusted node(s).%0a
host:1609994632=104.175.54.158
author:1609994605=
diff:1609994605:1609994583:=27c27%0a%3c !!Nodes [[#node]]%0a---%0a> !!Nodes%0a
host:1609994605=104.175.54.158
author:1609994583=
diff:1609994583:1609994258:=26c26%0a%3c # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the new owner of the collectible.  This step requires broadcasting the transaction to trusted node(s).%0a---%0a> # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the new owner of the collectible.%0a
host:1609994583=104.175.54.158
author:1609994258=
diff:1609994258:1609992450:=42,48d41%0a%3c The bit length of a number to factor is a variable that is controlled by the nodes.  The bit length of the numbers to factor is the Difficulty.  Here are some rules the nodes should enforce.%0a%3c %0a%3c # Difficulty should be reevaluated and adjusted if needed every set interval.  This interval should be between 1 month and 1 year and should be consistent.%0a%3c %0a%3c # Difficulty should be set so that an enthusiast PC working full time can complete 1 challenge and earn one collectible every week.%0a%3c %0a%3c # Difficulty, which is the bit length of the number to factor to be accepted by the network, should only be adjusted up or down a maximum of 3 bits per adjustment interval.  So if difficulty is adjusted yearly, then if the bit length requirement this year is 500+, then next year it should be set to either 497+ or 503+ or somewhere in between.%0a
host:1609994258=104.175.54.158
author:1609992450=
diff:1609992450:1609991558:=3c3%0a%3c A digital collectible currency (DCC) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes wield full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible currency (DCC) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes weild full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1609992450=104.175.54.158
author:1609991558=
diff:1609991558:1609990972:=30,41d29%0a%3c %0a%3c # Number to factor needs to meet [[#length|bit length]] requirements.%0a%3c %0a%3c # Number to factor cannot have any leading or trailing zeroes.%0a%3c %0a%3c # Number to factor must be odd.%0a%3c %0a%3c # Prime factorization must not include any factor longer than 1/2 the bit length.%0a%3c %0a%3c # Prime factorization must include at least one factor greater than 2/5 the bit length.%0a%3c %0a%3c !!!!Bit length requirements [[#length]]%0a
host:1609991558=104.175.54.158
author:1609990972=
diff:1609990972:1609990918:=3c3%0a%3c A digital collectible currency (DCC) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, ownership is 100%25 private by default, and nodes compete on the free market for the customer's trust. Nodes weild full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible currency (DCC) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, and nodes compete on the free market for the customer's trust. Nodes weild full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a
host:1609990972=104.175.54.158
author:1609990918=
diff:1609990918:1609990901:=32c32%0a%3c !!Ledger [[#ledger]]%0a---%0a> !!Ledger%0a
host:1609990918=104.175.54.158
author:1609990901=
diff:1609990901:1609990833:=29d28%0a%3c The nodes set the requirements for collectibles they add to their [[#ledger|ledger]].%0a
host:1609990901=104.175.54.158
author:1609990833=
diff:1609990833:1609990710:=26c26%0a%3c # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the new owner of the collectible.%0a---%0a> # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the owner of the collectible.%0a
host:1609990833=104.175.54.158
author:1609990710=
diff:1609990710:1609990462:=3c3%0a%3c A digital collectible currency (DCC) is an alternative to current cryptocurrency technology.  The biggest differences are: it does not have a blockchain, mining is offline, and nodes compete on the free market for the customer's trust. Nodes weild full authority of the coin.  The customer has ultimate power over the nodes by deciding which node(s) to trust and voting with their feet, money, and work.%0a---%0a> A digital collectible currency (DCC) is an alternative to current cryptocurrency technology.  The biggest differences is it does not have a blockchain, mining is offline, and nodes compete on the freemarket for your trust.%0a
host:1609990710=104.175.54.158
author:1609990462=
diff:1609990462:1609990418:=29,30d28%0a%3c %0a%3c !!!Emission [[#emission]]%0a
host:1609990462=104.175.54.158
author:1609990418=
diff:1609990418:1609990219:=28c28%0a%3c !!!Collectible requirements [[#requirements]]%0a---%0a> %0a
host:1609990418=104.175.54.158
author:1609990219=
diff:1609990219:1609990061:=18c18%0a%3c # Next the miner uses a nonce of his choosing to hash the public key with, using something like Skein 1024, to generate a large random number.%0a---%0a> # Next the miner uses a nonce of his choosing to hash the public key with, using something like Skein 1024.  %0a
host:1609990219=104.175.54.158
author:1609990061=
diff:1609990061:1609989976:=8c8%0a%3c Everytime a a factorization is completed that meets the requirements of the network of nodes, one more collectible enters circulation which is the [[#emission|emission]].%0a---%0a> Everytine a a factorization is completed that meets the requirements of the network of nodes, one more collectible enters circulation which is the [[#emission|emission]].%0a
host:1609990061=104.175.54.158
author:1609989976=
diff:1609989976:1609989874:=7,8d6%0a%3c %0a%3c Everytine a a factorization is completed that meets the requirements of the network of nodes, one more collectible enters circulation which is the [[#emission|emission]].%0a
host:1609989976=104.175.54.158
author:1609989874=
diff:1609989874:1609988914:=7,24d6%0a%3c %0a%3c !!!Mining challenge%0a%3c %0a%3c # First the miner see's what bit length of number is required to be accepted by the network of nodes.  %0a%3c %0a%3c # The miner then creates a private key.  %0a%3c %0a%3c # The miner then creates a public key from the private key.  %0a%3c %0a%3c # Next the miner uses a nonce of his choosing to hash the public key with, using something like Skein 1024.  %0a%3c %0a%3c # Then the miner truncates the number to the bit length and other [[#requirements|requirements]] that the network of nodes require.%0a%3c %0a%3c # The miner now completes a prime factorization of the number and records it.%0a%3c %0a%3c # The public key, nonce, and prime factorization constitutes one "digital collectible".  The prime factorization is the "Proof of Work".%0a%3c %0a%3c # The miner can give the private key to another person, that person can then change the private key to something only they know, and they are now the owner of the collectible.%0a
host:1609989874=104.175.54.158
author:1609988914=
diff:1609988914:1609988737:=5,6c5%0a%3c !!!Overview%0a%3c Mining is done offline and miners create and complete their own challenges that meet the requirements of the network.  Challenges are designed to be completed by an enthusiast PC in one week.  The challenge utilizes GNFS factorization of large numbers which cannot be sped up with GPU's or FPGA's or ASICS's.%0a---%0a> %0a
host:1609988914=104.175.54.158
author:1609988737=
diff:1609988737:1609988508:=3d2%0a%3c A digital collectible currency (DCC) is an alternative to current cryptocurrency technology.  The biggest differences is it does not have a blockchain, mining is offline, and nodes compete on the freemarket for your trust.%0a
host:1609988737=104.175.54.158
author:1609988508=
diff:1609988508:1609988487:=1,2d0%0a%3c !!Overview%0a%3c %0a
host:1609988508=104.175.54.158
author:1609988487=
diff:1609988487:1609988487:=1,9d0%0a%3c !!Mining%0a%3c %0a%3c !!Nodes%0a%3c %0a%3c !!Ledger%0a%3c %0a%3c !!!Publicnet%0a%3c %0a%3c !!!Privatenet%0a
host:1609988487=104.175.54.158
