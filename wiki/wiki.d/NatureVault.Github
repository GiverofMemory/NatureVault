version=pmwiki-2.2.133 ordered=1 urlencoded=1
author=
charset=UTF-8
csum= !!Interesting repo list  interesting github repositories [[https://hackernoon.com/5-github-repositories-that-will-change-your-life|#]] 
ctime=1666210843
name=NatureVault.Github
rev=32
targets=
text=(:nogroupheader:)%0a(:Summary::)%0a(:Published::)%0a(:Author:[[~GiverofMemory]]:)%0a(:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site License]]:)%0a(:Update::)%0a(:Maintainer:[[~GiverofMemory]]:)%0a(:Creator:[[]]:)%0a(:Categories:[[!]]:)%0a(:Also:none:)%0a(:Archive:[[|Archive.is]], [[|Archive.org]]:)%0a(:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a%0a!!Autoupdate from webserver%0a%0a!!!Gitpush%0aRename this file to remove the .txt from the end Attach:gitpush.sh.txt (you may need to "show file extensions" in windows), edit the file to replace "token" in the url at the end of the file with your token you can set up while logged in at github.com, also replace "GiverofMemory" with the name of your github username for the repository, and replace "NatureVault" with the name of your repository.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set owner permissions and allow all permissions (700) especially execute. Group and public do not need to read write or execute (so leave those all blank).  Now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a%0a[@exec /home/protected/gitpush.sh@]%0a%0aReferences: [[https://stackoverflow.com/questions/16709404/how-to-automate-the-commit-and-push-process-git|#]][[https://stackoverflow.com/questions/10054318/how-do-i-provide-a-username-and-password-when-running-git-clone-gitremote-git|#]][[https://stackoverflow.com/questions/29776439/username-and-password-in-command-for-git-push|#]][[https://faq.nearlyfreespeech.net/full/runscript|#]]%0a%0aexample and discussion [[https://stackoverflow.com/questions/16709404/how-to-automate-the-commit-and-push-process-git|#]]%0a%0agithub autopush for windows [[https://github.com/GiverofMemory/GitHub-auto-push-for-Windows|#]]%0a%0a!!!Gitpull%0a%0aAttach:gitpull.sh.txt See above for instructions.  I have this one running every hour of every day since it will use little additional data.%0a%0a[@exec /home/protected/gitpull.sh@]%0a%0a!!Discord bot%0a%0aPost github commits for a certain repository to a discord channel of your choosing%0a%0aAdapted from this guide [[https://www.minitool.com/news/make-discord-webhooks-for-github.html|#]]%0a%0aIn discord go to server settings->apps->integrations->webhooks (server settings->webhooks)%0a%0aCopy the URL from the webhook in discord%0a%0aGo to your github repository and sign in%0a%0aIn github go to settings->webhooks%0a%0aClick "add webhook" and paste the discord webhook URL and add /discord to the end of it, into the payload URL column.%0a%0aContent type should be application/json%0a%0aChoose which events you want to trigger the bot%0a%0aClick add webhook button to finish%0a%0aFor more advanced customization see discord developer portal [[https://discord.com/developers/docs/resources/webhook|#]]%0a%0a!!Git Bash%0a%0aCreate shortcut [[https://dev.to/kvvpa/quick-git-bash-shortcut-tutorial-5417|#]]%0a%0a!!!Password%0a%0aSpecial characters that need to be escaped [[https://fabianlee.org/2016/09/07/git-calling-git-clone-using-password-with-special-character/|#]] [[https://amalgjose.com/2021/02/27/how-to-handle-special-character-in-the-git-credentials/|#]] full list [[https://github.com/OWASP/www-community/blob/master/pages/password-special-characters.md|#]]%0a%0a!!Commits%0a%0aCommits do not re-upload the whole file, only just a little bit more than the changes themselves [[https://www.quora.com/Does-git-uploads-whole-file-or-just-the-change-of-code-while-commit|#]]%0a%0a!!!.git folder%0a%0a[[https://www.toolsqa.com/git/dot-git-folder/|#]]%0a%0a!!!.gitignore%0a%0afile that tells github which files or folders to not sync [[https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files|#]]%0a%0asimple explanation [[https://devdojo.com/bobbyiliev/how-to-exclude-files-from-your-git-project-using-gitignore|#]]%0a%0aIt may be harder to prevent syncing with an upstream repo [[https://stackoverflow.com/questions/25315687/ignore-specific-files-when-pulling-from-forked-upstream-origin|#]]%0a%0a!!Repo tricks%0a%0aForking your own repo [[https://web.archive.org/web/20210127095219/https://github.community/t/alternatives-to-forking-into-the-same-account/10200|#]] probably best to just create a totally new repo and add a remote [[https://web.archive.org/web/20210321211850/https://docs.github.com/en/github/using-git/adding-a-remote|#]] or just fork it with a different github account and give both users permissions on both repos. Or you can just manage two separate repos by copying and pasting on your own computer and pushing to github (lets be honest this is probably most sustainable and encourages offline backups).%0a%0a!!!License%0a%0aGithub searches the file to see if it closely matches with a license they have on file in order to display that license in the upper right corner of your repo.  If you want to use a template create a new file using github.com and name it license.  After you select a template you can rename the file name to whatever as long as the content of the file is kept.%0a%0a!!Interesting repo list%0a%0ainteresting github repositories [[https://hackernoon.com/5-github-repositories-that-will-change-your-life|#]]
time=1674856614
author:1674856614=
diff:1674856614:1671557738:=88,91d87%0a%3c %0a%3c !!Interesting repo list%0a%3c %0a%3c interesting github repositories [[https://hackernoon.com/5-github-repositories-that-will-change-your-life|#]]%0a\ No newline at end of file%0a
author:1671557738=
diff:1671557738:1671557496:=24,25d23%0a%3c %0a%3c github autopush for windows [[https://github.com/GiverofMemory/GitHub-auto-push-for-Windows|#]]%0a
author:1671557496=
diff:1671557496:1667837591:=22,23d21%0a%3c %0a%3c example and discussion [[https://stackoverflow.com/questions/16709404/how-to-automate-the-commit-and-push-process-git|#]]%0a
author:1667837591=
diff:1667837591:1667766808:=80,83d79%0a%3c %0a%3c !!!License%0a%3c %0a%3c Github searches the file to see if it closely matches with a license they have on file in order to display that license in the upper right corner of your repo.  If you want to use a template create a new file using github.com and name it license.  After you select a template you can rename the file name to whatever as long as the content of the file is kept.%0a
author:1667766808=
diff:1667766808:1667766702:=72,73d71%0a%3c %0a%3c simple explanation [[https://devdojo.com/bobbyiliev/how-to-exclude-files-from-your-git-project-using-gitignore|#]]%0a
author:1667766702=
diff:1667766702:1667766487:=72,73d71%0a%3c %0a%3c It may be harder to prevent syncing with an upstream repo [[https://stackoverflow.com/questions/25315687/ignore-specific-files-when-pulling-from-forked-upstream-origin|#]]%0a
author:1667766487=
diff:1667766487:1667046114:=68,71d67%0a%3c %0a%3c !!!.gitignore%0a%3c %0a%3c file that tells github which files or folders to not sync [[https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files|#]]%0a
author:1667046114=
diff:1667046114:1667045912:=59c59%0a%3c Special characters that need to be escaped [[https://fabianlee.org/2016/09/07/git-calling-git-clone-using-password-with-special-character/|#]] [[https://amalgjose.com/2021/02/27/how-to-handle-special-character-in-the-git-credentials/|#]] full list [[https://github.com/OWASP/www-community/blob/master/pages/password-special-characters.md|#]]%0a---%0a> Special characters [[https://fabianlee.org/2016/09/07/git-calling-git-clone-using-password-with-special-character/|#]] [[https://amalgjose.com/2021/02/27/how-to-handle-special-character-in-the-git-credentials/|#]]%0a
author:1667045912=
diff:1667045912:1667045511:=59c59%0a%3c Special characters [[https://fabianlee.org/2016/09/07/git-calling-git-clone-using-password-with-special-character/|#]] [[https://amalgjose.com/2021/02/27/how-to-handle-special-character-in-the-git-credentials/|#]]%0a---%0a> Special characters [[https://fabianlee.org/2016/09/07/git-calling-git-clone-using-password-with-special-character/|#]]%0a
author:1667045511=
diff:1667045511:1666635301:=56,59d55%0a%3c %0a%3c !!!Password%0a%3c %0a%3c Special characters [[https://fabianlee.org/2016/09/07/git-calling-git-clone-using-password-with-special-character/|#]]%0a
author:1666635301=
diff:1666635301:1666635179:=17,18c17,18%0a%3c Rename this file to remove the .txt from the end Attach:gitpush.sh.txt (you may need to "show file extensions" in windows), edit the file to replace "token" in the url at the end of the file with your token you can set up while logged in at github.com, also replace "GiverofMemory" with the name of your github username for the repository, and replace "NatureVault" with the name of your repository.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set owner permissions and allow all permissions (700) especially execute. Group and public do not need to read write or execute (so leave those all blank).  Now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a%3c %0a---%0a> Rename this file to remove the .txt from the end Attach:gitpush.sh.txt (you may need to "show file extensions" in windows), edit the file to replace "token" in the url at the end of the file with your token you can set up while logged in at github.com, also replace "GiverofMemory" with the name of your github username for the repository, and replace "NatureVault" with the name of your repository.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  Now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a> %0a26,27d25%0a%3c %0a%3c [@exec /home/protected/gitpull.sh@]%0a
author:1666635179=
diff:1666635179:1666635106:=25c25%0a%3c Attach:gitpull.sh.txt See above for instructions.  I have this one running every hour of every day since it will use little additional data.%0a---%0a> Attach:gitpull.sh%0a
author:1666635106=
diff:1666635106:1666471348:=16d15%0a%3c !!!Gitpush%0a22,25d20%0a%3c %0a%3c !!!Gitpull%0a%3c %0a%3c Attach:gitpull.sh%0a
author:1666471348=
diff:1666471348:1666471037:=53,56d52%0a%3c %0a%3c !!!.git folder%0a%3c %0a%3c [[https://www.toolsqa.com/git/dot-git-folder/|#]]%0a
author:1666471037=
diff:1666471037:1666454858:=49,52d48%0a%3c %0a%3c !!Commits%0a%3c %0a%3c Commits do not re-upload the whole file, only just a little bit more than the changes themselves [[https://www.quora.com/Does-git-uploads-whole-file-or-just-the-change-of-code-while-commit|#]]%0a
author:1666454858=
diff:1666454858:1666454211:=52c52%0a%3c Forking your own repo [[https://web.archive.org/web/20210127095219/https://github.community/t/alternatives-to-forking-into-the-same-account/10200|#]] probably best to just create a totally new repo and add a remote [[https://web.archive.org/web/20210321211850/https://docs.github.com/en/github/using-git/adding-a-remote|#]] or just fork it with a different github account and give both users permissions on both repos. Or you can just manage two separate repos by copying and pasting on your own computer and pushing to github (lets be honest this is probably most sustainable and encourages offline backups).%0a---%0a> Forking your own repo [[https://web.archive.org/web/20210127095219/https://github.community/t/alternatives-to-forking-into-the-same-account/10200|#]] probably best to just create a totally new repo and add a remote [[https://web.archive.org/web/20210321211850/https://docs.github.com/en/github/using-git/adding-a-remote|#]] or just fork it with a different github account and give both users permissions on both repos.%0a
author:1666454211=
diff:1666454211:1666453903:=52c52%0a%3c Forking your own repo [[https://web.archive.org/web/20210127095219/https://github.community/t/alternatives-to-forking-into-the-same-account/10200|#]] probably best to just create a totally new repo and add a remote [[https://web.archive.org/web/20210321211850/https://docs.github.com/en/github/using-git/adding-a-remote|#]] or just fork it with a different github account and give both users permissions on both repos.%0a---%0a> Forking your own repo [[https://web.archive.org/web/20210127095219/https://github.community/t/alternatives-to-forking-into-the-same-account/10200|#]]%0a
author:1666453903=
diff:1666453903:1666280405:=49,52d48%0a%3c %0a%3c !!Repo tricks%0a%3c %0a%3c Forking your own repo [[https://web.archive.org/web/20210127095219/https://github.community/t/alternatives-to-forking-into-the-same-account/10200|#]]%0a
author:1666280405=
diff:1666280405:1666280371:=28c28,29%0a%3c In discord go to server settings->apps->integrations->webhooks (server settings->webhooks)%0a---%0a> In discord go to server settings->apps->integrations->webhooks %0a> (//basically//) server settings->webhooks%0a
author:1666280371=
diff:1666280371:1666280279:=28,29c28%0a%3c In discord go to server settings->apps->integrations->webhooks %0a%3c (//basically//) server settings->webhooks%0a---%0a> In discord go to server settings->apps->integrations->webhooks //basically// server settings->webhooks%0a
author:1666280279=
diff:1666280279:1666280260:=20c20,26%0a%3c References: [[https://stackoverflow.com/questions/16709404/how-to-automate-the-commit-and-push-process-git|#]][[https://stackoverflow.com/questions/10054318/how-do-i-provide-a-username-and-password-when-running-git-clone-gitremote-git|#]][[https://stackoverflow.com/questions/29776439/username-and-password-in-command-for-git-push|#]][[https://faq.nearlyfreespeech.net/full/runscript|#]]%0a---%0a> References: [[https://stackoverflow.com/questions/16709404/how-to-automate-the-commit-and-push-process-git|#]]%0a> %0a> [[https://stackoverflow.com/questions/10054318/how-do-i-provide-a-username-and-password-when-running-git-clone-gitremote-git|#]]%0a> %0a> [[https://stackoverflow.com/questions/29776439/username-and-password-in-command-for-git-push|#]]%0a> %0a> [[https://faq.nearlyfreespeech.net/full/runscript|#]]%0a
author:1666280260=
diff:1666280260:1666278549:=19,26d18%0a%3c %0a%3c References: [[https://stackoverflow.com/questions/16709404/how-to-automate-the-commit-and-push-process-git|#]]%0a%3c %0a%3c [[https://stackoverflow.com/questions/10054318/how-do-i-provide-a-username-and-password-when-running-git-clone-gitremote-git|#]]%0a%3c %0a%3c [[https://stackoverflow.com/questions/29776439/username-and-password-in-command-for-git-push|#]]%0a%3c %0a%3c [[https://faq.nearlyfreespeech.net/full/runscript|#]]%0a
author:1666278549=
diff:1666278549:1666229221:=43,46d42%0a%3c %0a%3c !!Git Bash%0a%3c %0a%3c Create shortcut [[https://dev.to/kvvpa/quick-git-bash-shortcut-tutorial-5417|#]]%0a
author:1666229221=
diff:1666229221:1666211204:=20,42c20%0a%3c !!Discord bot%0a%3c %0a%3c Post github commits for a certain repository to a discord channel of your choosing%0a%3c %0a%3c Adapted from this guide [[https://www.minitool.com/news/make-discord-webhooks-for-github.html|#]]%0a%3c %0a%3c In discord go to server settings->apps->integrations->webhooks //basically// server settings->webhooks%0a%3c %0a%3c Copy the URL from the webhook in discord%0a%3c %0a%3c Go to your github repository and sign in%0a%3c %0a%3c In github go to settings->webhooks%0a%3c %0a%3c Click "add webhook" and paste the discord webhook URL and add /discord to the end of it, into the payload URL column.%0a%3c %0a%3c Content type should be application/json%0a%3c %0a%3c Choose which events you want to trigger the bot%0a%3c %0a%3c Click add webhook button to finish%0a%3c %0a%3c For more advanced customization see discord developer portal [[https://discord.com/developers/docs/resources/webhook|#]]%0a---%0a> !!Discord bot%0a\ No newline at end of file%0a
author:1666211204=
diff:1666211204:1666211131:=16c16%0a%3c Rename this file to remove the .txt from the end Attach:gitpush.sh.txt (you may need to "show file extensions" in windows), edit the file to replace "token" in the url at the end of the file with your token you can set up while logged in at github.com, also replace "GiverofMemory" with the name of your github username for the repository, and replace "NatureVault" with the name of your repository.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  Now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a---%0a> Rename this file to remove the .txt from the end Attach:gitpush.sh.txt (you may need to "show file extensions" in windows), edit the file to include your github token at the url at the end of the file, also replace "GiverofMemory" with the name of your github username for the repository, and replace "NatureVault" with the name of your repository.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a
author:1666211131=
diff:1666211131:1666211093:=16c16%0a%3c Rename this file to remove the .txt from the end Attach:gitpush.sh.txt (you may need to "show file extensions" in windows), edit the file to include your github token at the url at the end of the file, also replace "GiverofMemory" with the name of your github username for the repository, and replace "NatureVault" with the name of your repository.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a---%0a> Rename this file to remove the .txt from the end (you may need to "show file extensions" in windows) Attach:gitpush.sh.txt, edit the file to include your github token at the url at the end of the file, also replace "GiverofMemory" with the name of your github username for the repository, and replace "NatureVault" with the name of your repository.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a
author:1666211093=
diff:1666211093:1666210998:=16c16%0a%3c Rename this file to remove the .txt from the end (you may need to "show file extensions" in windows) Attach:gitpush.sh.txt, edit the file to include your github token at the url at the end of the file, also replace "GiverofMemory" with the name of your github username for the repository, and replace "NatureVault" with the name of your repository.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a---%0a> Rename this file to remove the .txt from the end (you may need to "show file extensions" in windows) Attach:gitpush.sh.txt, edit the file to include your github token at the url at the end of the file.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a
author:1666210998=
diff:1666210998:1666210960:=16c16%0a%3c Rename this file to remove the .txt from the end (you may need to "show file extensions" in windows) Attach:gitpush.sh.txt, edit the file to include your github token at the url at the end of the file.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a---%0a> Rename this file to remove the .txt Attach:gitpush.sh.txt, edit the file to include your github token at the url at the end of the file.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a
author:1666210960=
diff:1666210960:1666210916:=16,18c16,19%0a%3c Rename this file to remove the .txt Attach:gitpush.sh.txt, edit the file to include your github token at the url at the end of the file.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver (and set it as a daily scheduled task) using something like:%0a%3c %0a%3c [@exec /home/protected/gitpush.sh@]%0a---%0a> Rename this file to remove the .txt Attach:gitpush.sh.txt, edit the file to include your github token at the url at the end of the file.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver using something like:%0a> %0a> [@cd /%0a> exec /home/protected/gitpush.sh@]%0a
author:1666210916=
diff:1666210916:1666210893:=18a19%0a> %0a
author:1666210893=
diff:1666210893:1666210843:=18,20c18,20%0a%3c [@cd /%0a%3c %0a%3c exec /home/protected/gitpush.sh@]%0a---%0a> cd /%0a> %0a> exec /home/protected/gitpush.sh%0a
author:1666210843=
diff:1666210843:1666210843:=1,22d0%0a%3c (:nogroupheader:)%0a%3c (:Summary::)%0a%3c (:Published::)%0a%3c (:Author:[[~GiverofMemory]]:)%0a%3c (:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site License]]:)%0a%3c (:Update::)%0a%3c (:Maintainer:[[~GiverofMemory]]:)%0a%3c (:Creator:[[]]:)%0a%3c (:Categories:[[!]]:)%0a%3c (:Also:none:)%0a%3c (:Archive:[[|Archive.is]], [[|Archive.org]]:)%0a%3c (:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a%3c %0a%3c !!Autoupdate from webserver%0a%3c %0a%3c Rename this file to remove the .txt Attach:gitpush.sh.txt, edit the file to include your github token at the url at the end of the file.  Then upload this file to your webserver (probably the /home/protected folder) using FTP is easiest using filezilla.  Then right click the file in filezilla and set permissions and allow all permissions especially execute.  now you can execute the script from your webserver using something like:%0a%3c %0a%3c cd /%0a%3c %0a%3c exec /home/protected/gitpush.sh%0a%3c %0a%3c !!Discord bot%0a\ No newline at end of file%0a
