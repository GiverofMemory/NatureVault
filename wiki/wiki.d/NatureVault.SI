version=pmwiki-2.2.133 ordered=1 urlencoded=1
author=
charset=UTF-8
csum=So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, weights, or anything else or any combination.  Of course it can be given an exclusion list of things like "and" "but" and formatting things like [@%25green%25@], etc.  More tuning factors could also be added like for example "disregard any words following 'not' or 'but'" or "more highly weight words following 'high' or 'important'" or things like that. 
ctime=1682174704
name=NatureVault.SI
rev=11
targets=NatureVault.AI,NatureVault.Personality,NatureVault.GoldenRatio
text=(:nogroupheader:)%0a(:Summary:Search Intelligence to find you relevant words or phrases proximal to your search query:)%0a(:Published::)%0a(:Author:[[~GiverofMemory]]:)%0a(:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site License]]:)%0a(:Update::)%0a(:Maintainer:[[~GiverofMemory]]:)%0a(:Creator:[[]]:)%0a(:Categories:[[!]] [[!]] [[!]] [[!]]:)%0a(:Also:none:)%0a(:Archive:[[|Archive.is]], [[|Archive.org]]:)%0a(:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a(:Redirect: Replace this text with desired PageName and delete the colon after "Redirect":)%0a%0aSee also [[AI]]%0a%0aSI - Search Intelligence - Helping you generate new ideas%0a%0aSearch Intelligence to find you relevant words or phrases (or something else) proximal to your search query%0a%0aName also a reference to Si-Ne collaboration in [[personality]] which basically entails that doing things and memory (Si) helps you generate ideas and new perspectives (Ne)%0a%0a!!Method 1%0a%0aSo lets say you search NatureVault for "Ulcer bacteria".  What it does is it goes through it's index of saved page text and gives them a ranking on proximity of these two words, ranking high the closer in proximity the words are.  Then perhaps it looks for a median or average distance between the words in indexed pages and calibrates it to say something like 68.2%25 ([[golden ratio]]) of pages that include both of these words have them within 10 words apart.  Next it generates a frequency plot with which words occur most commonly in proximity of these words.  So lets say it calibrates to 10 words as mentioned before.  Then it would give you a frequency plot of which words are within 10 words before, between, or after these words. For example it would look for:%0a%0a**%25green%25word word word word word word h pylori word word word%25%25 %25red%25ulcer%25%25 %25green%25 word word word word e coli word word word word word%25%25 %25red%25bacteria%25%25 %25green%25 word word word word word word word stomach word word%25%25**%0a%0aSo lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, weights, or anything else or any combination.%0a%0aOf course it can be given an exclusion list of things like "and" "but" and formatting things like [@%25green%25@], etc.  More tuning factors could also be added like for example "disregard any words following 'not' or 'but'" or "more highly weight words following 'high' or 'important'" or things like that.%0a%0a!!Method 2%0a%0aAn easier but less focused method would be use above methodology but to simply look at the entire page of every page that includes both of these words and look at frequency of words on every (or a selected subset) of pages.  So instead of looking at 30 words like the above example, we look at all the words on each page and display frequency data on however many the user wants or a predefined number.
time=1682177279
author:1682177279=
diff:1682177279:1682176797:=29,31c29,31%0a%3c So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, weights, or anything else or any combination.%0a%3c %0a%3c Of course it can be given an exclusion list of things like "and" "but" and formatting things like [@%25green%25@], etc.  More tuning factors could also be added like for example "disregard any words following 'not' or 'but'" or "more highly weight words following 'high' or 'important'" or things like that.%0a---%0a> So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a> %0a> Of course it can be given an exclusion list of things like "and" "but" and formatting things like [@%25green%25@], etc.%0a
author:1682176797=
diff:1682176797:1682176311:=31c31%0a%3c Of course it can be given an exclusion list of things like "and" "but" and formatting things like [@%25green%25@], etc.%0a---%0a> Of course it can be given an exclusion list of things like "and" "but" and formatting things like %25green%25, etc.%0a
author:1682176311=
diff:1682176311:1682176090:=29c29%0a%3c So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a---%0a> So lets say the result of our search for "ulcer bacteria" would be something like "word (26/30, 87%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a
author:1682176090=
diff:1682176090:1682175997:=29c29%0a%3c So lets say the result of our search for "ulcer bacteria" would be something like "word (26/30, 87%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a---%0a> So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a
author:1682175997=
diff:1682175997:1682175890:=25c25%0a%3c So lets say you search NatureVault for "Ulcer bacteria".  What it does is it goes through it's index of saved page text and gives them a ranking on proximity of these two words, ranking high the closer in proximity the words are.  Then perhaps it looks for a median or average distance between the words in indexed pages and calibrates it to say something like 68.2%25 ([[golden ratio]]) of pages that include both of these words have them within 10 words apart.  Next it generates a frequency plot with which words occur most commonly in proximity of these words.  So lets say it calibrates to 10 words as mentioned before.  Then it would give you a frequency plot of which words are within 10 words before, between, or after these words. For example it would look for:%0a---%0a> So lets say you search NatureVault for "Ulcer bacteria".  What it does is it goes through it's index of saved page text and gives them a ranking on proximity of these two words, ranking high the closer in proximity the words are.  Then perhaps it looks for a median or average distance between the words in indexed pages and calibrates it to say something like 68%25 of pages that include both of these words have them within 10 words apart.  Next it generates a frequency plot with which words occur most commonly in proximity of these words.  So lets say it calibrates to 10 words as mentioned before.  Then it would give you a frequency plot of which words are within 10 words before, between, or after these words. For example it would look for %0a
author:1682175890=
diff:1682175890:1682175539:=20,21d19%0a%3c %0a%3c Name also a reference to Si-Ne collaboration in [[personality]] which basically entails that doing things and memory (Si) helps you generate ideas and new perspectives (Ne)%0a
author:1682175539=
diff:1682175539:1682175403:=25,29c25,27%0a%3c **%25green%25word word word word word word h pylori word word word%25%25 %25red%25ulcer%25%25 %25green%25 word word word word e coli word word word word word%25%25 %25red%25bacteria%25%25 %25green%25 word word word word word word word stomach word word%25%25**%0a%3c %0a%3c So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)" "stomach (1/30, 3%25), since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a%3c %0a%3c Of course it can be given an exclusion list of things like "and" "but" and formatting things like %25green%25, etc.%0a---%0a> **%25green%25word word word word word word h pylori word word word%25%25 ulcer %25green%25 word word word word e coli word word word word word%25%25 bacteria %25green%25 word word word word word word word stomach word word%25%25**%0a> %0a> So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)", since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a
author:1682175403=
diff:1682175403:1682174789:=21,22d20%0a%3c !!Method 1%0a%3c %0a27,31c25%0a%3c So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)", since we only have 1 page we are searching (of course any number of pages could be looked at and averaged/weighted average of any subset or full set).  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a%3c %0a%3c !!Method 2%0a%3c %0a%3c An easier but less focused method would be use above methodology but to simply look at the entire page of every page that includes both of these words and look at frequency of words on every (or a selected subset) of pages.  So instead of looking at 30 words like the above example, we look at all the words on each page and display frequency data on however many the user wants or a predefined number. %0a\ No newline at end of file%0a---%0a> So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)", since we only have 1 page we are searching.  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a\ No newline at end of file%0a
author:1682174789=
diff:1682174789:1682174757:=19c19%0a%3c Search Intelligence to find you relevant words or phrases (or something else) proximal to your search query%0a---%0a> Search Intelligence to find you relevant words or phrases proximal to your search query%0a
author:1682174757=
diff:1682174757:1682174704:=21,25c21%0a%3c So lets say you search NatureVault for "Ulcer bacteria".  What it does is it goes through it's index of saved page text and gives them a ranking on proximity of these two words, ranking high the closer in proximity the words are.  Then perhaps it looks for a median or average distance between the words in indexed pages and calibrates it to say something like 68%25 of pages that include both of these words have them within 10 words apart.  Next it generates a frequency plot with which words occur most commonly in proximity of these words.  So lets say it calibrates to 10 words as mentioned before.  Then it would give you a frequency plot of which words are within 10 words before, between, or after these words. For example it would look for %0a%3c %0a%3c **%25green%25word word word word word word h pylori word word word%25%25 ulcer %25green%25 word word word word e coli word word word word word%25%25 bacteria %25green%25 word word word word word word word stomach word word%25%25**%0a%3c %0a%3c So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)", since we only have 1 page we are searching.  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a\ No newline at end of file%0a---%0a> So lets say you search NatureVault for "Ulcer bacteria".  What it does is it goes through it's index of saved page text and gives them a ranking on proximity of these two words, ranking high the closer in proximity the words are.  Then perhaps it looks for a median or average distance between the words in indexed pages and calibrates it to say something like 68%25 of pages that include both of these words have them within 10 words apart.  Next it generates a frequency plot with which words occur most commonly in proximity of these words.  So lets say it calibrates to 10 words as mentioned before.  Then it would give you a frequency plot of which words are within 10 words before, between, or after these words. For example it would look for %25green%25word word word word word word h pylori word word word%25%25 ulcer %25green%25 word word word word e coli word word word word word%25%25 bacteria %25green%25 word word word word word word word stomach word word%25%25  So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)", since we only have 1 page we are searching.  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a\ No newline at end of file%0a
author:1682174704=
diff:1682174704:1682174704:=1,21d0%0a%3c (:nogroupheader:)%0a%3c (:Summary:Search Intelligence to find you relevant words or phrases proximal to your search query:)%0a%3c (:Published::)%0a%3c (:Author:[[~GiverofMemory]]:)%0a%3c (:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site License]]:)%0a%3c (:Update::)%0a%3c (:Maintainer:[[~GiverofMemory]]:)%0a%3c (:Creator:[[]]:)%0a%3c (:Categories:[[!]] [[!]] [[!]] [[!]]:)%0a%3c (:Also:none:)%0a%3c (:Archive:[[|Archive.is]], [[|Archive.org]]:)%0a%3c (:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a%3c (:Redirect: Replace this text with desired PageName and delete the colon after "Redirect":)%0a%3c %0a%3c See also [[AI]]%0a%3c %0a%3c SI - Search Intelligence - Helping you generate new ideas%0a%3c %0a%3c Search Intelligence to find you relevant words or phrases proximal to your search query%0a%3c %0a%3c So lets say you search NatureVault for "Ulcer bacteria".  What it does is it goes through it's index of saved page text and gives them a ranking on proximity of these two words, ranking high the closer in proximity the words are.  Then perhaps it looks for a median or average distance between the words in indexed pages and calibrates it to say something like 68%25 of pages that include both of these words have them within 10 words apart.  Next it generates a frequency plot with which words occur most commonly in proximity of these words.  So lets say it calibrates to 10 words as mentioned before.  Then it would give you a frequency plot of which words are within 10 words before, between, or after these words. For example it would look for %25green%25word word word word word word h pylori word word word%25%25 ulcer %25green%25 word word word word e coli word word word word word%25%25 bacteria %25green%25 word word word word word word word stomach word word%25%25  So lets say the result of our search for "ulcer bacteria" would be something like "word (27/30, 90%25)" "e coli (1/30, 3%25)" "h pylori (1/30, 3%25)", since we only have 1 page we are searching.  It could display these results in any way imaginable, from a heatmap, to a sizemap, to a graph, etc and it can represent percentages, numbers, or anything else or any combination.%0a\ No newline at end of file%0a
