version=pmwiki-2.2.133 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36
author=
charset=UTF-8
csum=!!!!Name 
ctime=1626005493
host=68.231.69.235
name=CryptoProjects.BlockchainDesign
rev=57
targets=Category.Cryptics
text=(:Summary:The Quintessential Blockchain:)%0a(:Published:7/11/21:)%0a(:Author:[[~GiverofMemory]]:)%0a(:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site License]]:)%0a(:Update::)%0a(:Maintainer:[[~GiverofMemory]]:)%0a(:Creator:[[]]:)%0a(:Categories:[[!Cryptics]]:)%0a(:Also:none:)%0a(:Archive:[[https://archive.is/MoTtA|Archive.is]], [[https://web.archive.org/web/20210711144243/https://www.naturevault.org/wiki/pmwiki.php/CryptoProjects/BlockchainDesign|Archive.org]]:)%0a(:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a%0a!!BlockTock%0aEvery block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address (address that contains a [[https://ethereum.stackexchange.com/questions/51647/the-difference-between-contract-address-and-wallet-address|codehash]]) that holds at least 1 initial block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled for contracts.%0a%0aA list of all contract addresses (as opposed to user/external addresses) that contain at least 1,000,000 coins is kept as a separate file/database on every node, similar to how a UTXO list is kept on Bitcoin nodes.%0a%0aThe 1 million coin minimum is mostly done to disincentive people from making tons of accounts to farm this dust.  Also it will help minimize the amount of address outputs on the coinbase transaction.  Each dust transaction will be 0.0001 coins so it would take 10,000 blocks just to farm a single coin.%0a%0aBasically BlockTock is like a heartbeat that makes a smart contract "self aware".  Every 6 seconds it can check itself and see if a function is ready to run.%0a%0a!!Parameters%0a!!!!Name%0a%0a!!!!Consensus mechanism%0a*Proof of work; GPU (ProgPoW) mined 75%25, CPU (Yespower or RandomX with high parameters) mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on off-time, they need less rewards to incentivize them to mine than GPU miners do, who usually have mining farms that they need to be mining constantly to recoup investment costs.  Since we do not allow ASIC's, it reduces our environmental impact and also reduces the advantage to large chip/board makers like Bitmain that can be using unreleased technology to gain an advantage.%0a!!!!Blocktime%0a*6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved (63.66%25 of 2.2%25 so our orphan rate can get down to 1.4%25).  In reality I expect our network to start with about a 50%25 orphan rate and over a year or two get down to around 10%25.  Anything under 10%25 I feel is a success.  Also our Proof of Work method outlined above will help us resist network attacks even if our orphan rate is high [[https://blog.ethereum.org/2014/07/11/toward-a-12-second-block-time/|#]].%0a!!!!Block size%0a*No max block size.  Min fee per kb explained below and also burning half the transaction fee will prevent massive block attacks.  [[#transep|Transep]] will nullify the slow propagation speed of large blocks.%0a*Min fee per kb (set to adjust average blocksize) set by the devs and can be adjusted without a hardfork, or allow each node to set their own min fee.  Half of fee is burned (to prevent malicious miners making huge blocks).  If masternodes are used for [[#transep|transep]] then the split can be 40%25 burned, 10%25 to the masternode, and 50%25 to the miner.%0a*Turing complete programming language like Solidity and/or Haskell.%0a!!!!Block reward%0a*Block reward is 1 million coins per block and this grows at 1%25 per year to continue incentivizing mining forever and keeping fees negligible forever.%0a!!!!Checkpoints%0a*Rolling 10 block checkpoint like bitcoin cash and also 11 block maturity time.  So this means it only takes 66 seconds to be able to spend mined coins, and only 1 minute to have a transaction that is 100%25 immutable.%0a!!!!Decimals%0a*Coin will have 4 decimals which is over 10,000 more units than Bitcoin while the numbers also being more human readable.%0a!!Reputation system%0aWe will use account addresses like Ethereum instead of UTXO like Bitcoin.  Then we will have a system that keeps track of how many coins an address has completed contracts for.  So say an address borrows 1000 coins and pays back 900 after the allotted time.  This will mean the account is in deficit of 100 coins and so the reputation for that contract for that address would be 90%25.  If that were the only completed contract done by that address, that would be their total reputation.  Lets say the address was supposed to be paid back 100 coins a month.  It is month 2 and the address has paid back 200 coins.  This means everything is perfectly on schedule so they would have a 100%25 rating.%0a%0aSo lets say someone has a 95%25 rating and wants to borrow coins.  A person might give them a 5%25+ interest rate because they know on average they will only get back 95%25 of what they loaned.  So if you lend them 1000 coins you can expect them to give back 950 so you charge them 5%25 more to try to hedge for this.  So instead of owing you back 100 coins a month for 10 months, they would owe you 105 coins a month for 10 months to repay the loan.%0a%0a!!Transep [[#transep]]%0a%0a[[https://www.naturevault.org/wiki/pmwiki.php/NatureVault/Transep|Transep]] stands for "transaction separation".  It is similar to Segwit, but instead of just separating the signatures from the broadcast block we separate all of the block data.  All that is broadcast is the block header.  This is just a few hundred bytes and thus should transverse the network nearly instantly so we can achieve a low orphan rate on our 6 second blocktime.  Every node would be receiving blocks full of data, and they know that only the blocks whose header makes it into the "blockchain" is an accepted block and should be retained in memory.
time=1626014885
author:1626014885=
diff:1626014885:1626014860:=23d22%0a%3c !!!!Name%0a
host:1626014885=68.231.69.235
author:1626014860=
diff:1626014860:1626014832:=23,24d22%0a%3c %0a%3c !!!!Consensus mechanism%0a
host:1626014860=68.231.69.235
author:1626014832=
diff:1626014832:1626014813:=26c26%0a%3c !!!!Block size%0a---%0a> !!!Block size%0a30c30%0a%3c !!!!Block reward%0a---%0a> !!!Block reward%0a32c32%0a%3c !!!!Checkpoints%0a---%0a> !!!Checkpoints%0a34c34%0a%3c !!!!Decimals%0a---%0a> !!!Decimals%0a
host:1626014832=68.231.69.235
author:1626014813=
diff:1626014813:1626014795:=24c24%0a%3c !!!!Blocktime%0a---%0a> !!!Blocktime%0a
host:1626014813=68.231.69.235
author:1626014795=
diff:1626014795:1626014707:=24d23%0a%3c !!!Blocktime%0a26d24%0a%3c !!!Block size%0a30d27%0a%3c !!!Block reward%0a32d28%0a%3c !!!Checkpoints%0a34d29%0a%3c !!!Decimals%0a
host:1626014795=68.231.69.235
author:1626014707=
diff:1626014707:1626014588:=18c18%0a%3c The 1 million coin minimum is mostly done to disincentive people from making tons of accounts to farm this dust.  Also it will help minimize the amount of address outputs on the coinbase transaction.  Each dust transaction will be 0.0001 coins so it would take 10,000 blocks just to farm a single coin.%0a---%0a> The 1 million coin minimum is mostly done to disincentive people from making tons of accounts to farm this dust.  Also it will help minimize the amount of address outputs on the coinbase transaction.%0a
host:1626014707=68.231.69.235
author:1626014588=
diff:1626014588:1626014570:=10c10%0a%3c (:Archive:[[https://archive.is/MoTtA|Archive.is]], [[https://web.archive.org/web/20210711144243/https://www.naturevault.org/wiki/pmwiki.php/CryptoProjects/BlockchainDesign|Archive.org]]:)%0a---%0a> (:Archive:[[https://archive.is/MoTtA|Archive.is]], [[|Archive.org]]:)%0a
host:1626014588=68.231.69.235
author:1626014570=
diff:1626014570:1626014547:=1c1%0a%3c (:Summary:The Quintessential Blockchain:)%0a---%0a> (:Summary::)%0a
host:1626014570=68.231.69.235
author:1626014547=
diff:1626014547:1626014527:=2c2%0a%3c (:Published:7/11/21:)%0a---%0a> (:Published::)%0a
host:1626014547=68.231.69.235
author:1626014527=
diff:1626014527:1626014479:=10c10%0a%3c (:Archive:[[https://archive.is/MoTtA|Archive.is]], [[|Archive.org]]:)%0a---%0a> (:Archive:[[|Archive.is]], [[|Archive.org]]:)%0a
host:1626014527=68.231.69.235
author:1626014479=
diff:1626014479:1626014138:=0a1%0a> (:nogroupheader:)%0a
host:1626014479=68.231.69.235
author:1626014138=
diff:1626014138:1626013635:=26c26%0a%3c *No max block size.  Min fee per kb explained below and also burning half the transaction fee will prevent massive block attacks.  [[#transep|Transep]] will nullify the slow propagation speed of large blocks.%0a---%0a> *No max block size.  Min fee per kb explained below and also burning half the transaction fee will prevent massive block attacks.%0a
host:1626014138=68.231.69.235
author:1626013635=
diff:1626013635:1626013506:=30c30%0a%3c *Rolling 10 block checkpoint like bitcoin cash and also 11 block maturity time.  So this means it only takes 66 seconds to be able to spend mined coins, and only 1 minute to have a transaction that is 100%25 immutable.%0a---%0a> *Rolling 10 block checkpoint like bitcoin cash and also 11 block maturity time.  So this means it only takes 66 seconds to be able to spend mined coins.%0a
host:1626013635=68.231.69.235
author:1626013506=
diff:1626013506:1626013459:=26c26%0a%3c *No max block size.  Min fee per kb explained below and also burning half the transaction fee will prevent massive block attacks.%0a---%0a> *No max block size.%0a
host:1626013506=68.231.69.235
author:1626013459=
diff:1626013459:1626013211:=25c25%0a%3c *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved (63.66%25 of 2.2%25 so our orphan rate can get down to 1.4%25).  In reality I expect our network to start with about a 50%25 orphan rate and over a year or two get down to around 10%25.  Anything under 10%25 I feel is a success.  Also our Proof of Work method outlined above will help us resist network attacks even if our orphan rate is high [[https://blog.ethereum.org/2014/07/11/toward-a-12-second-block-time/|#]].%0a---%0a> *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] [[https://blog.ethereum.org/2014/07/11/toward-a-12-second-block-time/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved (63.66%25 of 2.2%25 so our orphan rate can get down to 1.4%25).  In reality I expect our network to start with about a 50%25 orphan rate and over a year or two get down to around 10%25.  Anything under 10%25 I feel is a success.  Also our Proof of Work method outlined above will help us resist network attacks even if our orphan rate is high.%0a
host:1626013459=68.231.69.235
author:1626013211=
diff:1626013211:1626013075:=24c24%0a%3c *Proof of work; GPU (ProgPoW) mined 75%25, CPU (Yespower or RandomX with high parameters) mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on off-time, they need less rewards to incentivize them to mine than GPU miners do, who usually have mining farms that they need to be mining constantly to recoup investment costs.  Since we do not allow ASIC's, it reduces our environmental impact and also reduces the advantage to large chip/board makers like Bitmain that can be using unreleased technology to gain an advantage.%0a---%0a> *Proof of work; GPU (ProgPoW) mined 75%25, CPU (Yespower or RandomX with high parameters) mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on off-time, they need less rewards to incentivize them to mine than GPU miners do who usually have mining farms that they need to be mining constantly to recoup investment costs.  Since we do not allow ASIC's, it reduces our environmental impact and also reduces the advantage to large chip/board makers like Bitmain that can be using unreleased technology to gain an advantage.%0a
host:1626013211=68.231.69.235
author:1626013075=
diff:1626013075:1626012886:=25c25%0a%3c *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] [[https://blog.ethereum.org/2014/07/11/toward-a-12-second-block-time/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved (63.66%25 of 2.2%25 so our orphan rate can get down to 1.4%25).  In reality I expect our network to start with about a 50%25 orphan rate and over a year or two get down to around 10%25.  Anything under 10%25 I feel is a success.  Also our Proof of Work method outlined above will help us resist network attacks even if our orphan rate is high.%0a---%0a> *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] [[https://blog.ethereum.org/2014/07/11/toward-a-12-second-block-time/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved (63.66%25 of 2.2%25 so our orphan rate can get down to 1.4%25)%0a
host:1626013075=68.231.69.235
author:1626012886=
diff:1626012886:1626012520:=25c25%0a%3c *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] [[https://blog.ethereum.org/2014/07/11/toward-a-12-second-block-time/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved (63.66%25 of 2.2%25 so our orphan rate can get down to 1.4%25)%0a---%0a> *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved (63.66%25 of 2.2%25 so our orphan rate can get down to 1.4%25)%0a
host:1626012886=68.231.69.235
author:1626012520=
diff:1626012520:1626012489:=27c27%0a%3c *Min fee per kb (set to adjust average blocksize) set by the devs and can be adjusted without a hardfork, or allow each node to set their own min fee.  Half of fee is burned (to prevent malicious miners making huge blocks).  If masternodes are used for [[#transep|transep]] then the split can be 40%25 burned, 10%25 to the masternode, and 50%25 to the miner.%0a---%0a> *Min fee per kb (set to adjust average blocksize) set by the devs and can be adjusted without a hardfork, or allow each node to set their own min fee, and half of fee is burned (to prevent malicious miners making huge blocks).  If masternodes are used for [[#transep|transep]] then the split can be 40%25 burned, 10%25 to the masternode, and 50%25 to the miner.%0a
host:1626012520=68.231.69.235
author:1626012489=
diff:1626012489:1626012284:=27c27%0a%3c *Min fee per kb (set to adjust average blocksize) set by the devs and can be adjusted without a hardfork, or allow each node to set their own min fee, and half of fee is burned (to prevent malicious miners making huge blocks).  If masternodes are used for [[#transep|transep]] then the split can be 40%25 burned, 10%25 to the masternode, and 50%25 to the miner.%0a---%0a> *Min fee per kb (set to adjust average blocksize) or allow each node to set their own min fee, and half of fee is burned (to prevent malicious miners making huge blocks).  If masternodes are used for [[#transep|transep]] then the split can be 40%25 burned, 10%25 to the masternode, and 50%25 to the miner.%0a
host:1626012489=68.231.69.235
author:1626012284=
diff:1626012284:1626011953:=25c25%0a%3c *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved (63.66%25 of 2.2%25 so our orphan rate can get down to 1.4%25)%0a---%0a> *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved.%0a
host:1626012284=68.231.69.235
author:1626011953=
diff:1626011953:1626011797:=25c25%0a%3c *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate [[https://www.pingdom.com/blog/theoretical-vs-real-world-speed-limit-of-ping/|#]] when the network is working at max speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved.%0a---%0a> *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate when the network is working full speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved.%0a
host:1626011953=68.231.69.235
author:1626011797=
diff:1626011797:1626011536:=24c24%0a%3c *Proof of work; GPU (ProgPoW) mined 75%25, CPU (Yespower or RandomX with high parameters) mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on off-time, they need less rewards to incentivize them to mine than GPU miners do who usually have mining farms that they need to be mining constantly to recoup investment costs.  Since we do not allow ASIC's, it reduces our environmental impact and also reduces the advantage to large chip/board makers like Bitmain that can be using unreleased technology to gain an advantage.%0a---%0a> *Proof of work; GPU (ProgPoW) mined 75%25, CPU (Yespower or RandomX with high parameters) mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on off-time, they need less rewards to incentivize them to mine than GPU miners do who usually have mining farms that they need to be mining constantly to recoup investment costs.  Since we do not allow ASIC's it reduces our environmental impact and also reduces the advantage to large chip/board makers like Bitmain that can be using unreleased technology to gain an advantage.%0a
host:1626011797=68.231.69.235
author:1626011536=
diff:1626011536:1626011471:=33c33%0a%3c We will use account addresses like Ethereum instead of UTXO like Bitcoin.  Then we will have a system that keeps track of how many coins an address has completed contracts for.  So say an address borrows 1000 coins and pays back 900 after the allotted time.  This will mean the account is in deficit of 100 coins and so the reputation for that contract for that address would be 90%25.  If that were the only completed contract done by that address, that would be their total reputation.  Lets say the address was supposed to be paid back 100 coins a month.  It is month 2 and the address has paid back 200 coins.  This means everything is perfectly on schedule so they would have a 100%25 rating.%0a---%0a> We will use account addresses like Ethereum instead of UTXO like Bitcoin.  Then we will have a system that keeps track of how many coins an address has completed contracts for.  So say an address borrows 1000 coins and pays back 900 after the allotted time.  This will mean the account is in deficit of 100 coins and so the reputation for that contract would be 90%25.  Lets say the address was supposed to be paid back 100 coins a month.  It is month 2 and the address has paid back 200 coins.  This means everything is perfectly on schedule so they would have a 100%25 rating.%0a
host:1626011536=68.231.69.235
author:1626011471=
diff:1626011471:1626011145:=24c24%0a%3c *Proof of work; GPU (ProgPoW) mined 75%25, CPU (Yespower or RandomX with high parameters) mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on off-time, they need less rewards to incentivize them to mine than GPU miners do who usually have mining farms that they need to be mining constantly to recoup investment costs.  Since we do not allow ASIC's it reduces our environmental impact and also reduces the advantage to large chip/board makers like Bitmain that can be using unreleased technology to gain an advantage.%0a---%0a> *Proof of work; GPU (ProgPoW) mined 75%25, CPU (Yespower or RandomX with high parameters) mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on offtime, they need less rewards to incentivize them to mine than GPU miners do who usually have mining farms that they need to be mining constantly to recoup investment costs.  Since we do not allow ASIC's it reduces our environmental impact and also reduces the advantage to large chip/board makers like Bitmain that can be using unreleased technology to gain an advantage.%0a
host:1626011471=68.231.69.235
author:1626011145=
diff:1626011145:1626011124:=39c39%0a%3c [[https://www.naturevault.org/wiki/pmwiki.php/NatureVault/Transep|Transep]] stands for "transaction separation".  It is similar to Segwit, but instead of just separating the signatures from the broadcast block we separate all of the block data.  All that is broadcast is the block header.  This is just a few hundred bytes and thus should transverse the network nearly instantly so we can achieve a low orphan rate on our 6 second blocktime.  Every node would be receiving blocks full of data, and they know that only the blocks whose header makes it into the "blockchain" is an accepted block and should be retained in memory.%0a\ No newline at end of file%0a---%0a> [[https://www.naturevault.org/wiki/pmwiki.php/NatureVault/Transep|Transep]] stands for "transaction separation".  It is similar to segwit, but instead of just separating the signatures from the broadcast block we separate all of the block data.  All that is broadcast is the block header.  This is just a few hundred bytes and thus should transverse the network nearly instantly so we can achieve a low orphan rate on our 6 second blocktime.  Every node would be recieving blocks full of data, and they know that only the blocks whose header makes it into the "blockchain" is an accepted block and should be retained in memory.%0a\ No newline at end of file%0a
host:1626011145=68.231.69.235
author:1626011124=
diff:1626011124:1626011112:=37c37%0a%3c !!Transep [[#transep]]%0a---%0a> !!Transep%0a
host:1626011124=68.231.69.235
author:1626011112=
diff:1626011112:1626010954:=27c27%0a%3c *Min fee per kb (set to adjust average blocksize) or allow each node to set their own min fee, and half of fee is burned (to prevent malicious miners making huge blocks).  If masternodes are used for [[#transep|transep]] then the split can be 40%25 burned, 10%25 to the masternode, and 50%25 to the miner.%0a---%0a> *Min fee per kb (set to adjust average blocksize) or allow each node to set their own min fee, and half of fee is burned (to prevent malicious miners making huge blocks).%0a
host:1626011112=68.231.69.235
author:1626010954=
diff:1626010954:1626009872:=35,39c35%0a%3c So lets say someone has a 95%25 rating and wants to borrow coins.  A person might give them a 5%25+ interest rate because they know on average they will only get back 95%25 of what they loaned.  So if you lend them 1000 coins you can expect them to give back 950 so you charge them 5%25 more to try to hedge for this.  So instead of owing you back 100 coins a month for 10 months, they would owe you 105 coins a month for 10 months to repay the loan.%0a%3c %0a%3c !!Transep%0a%3c %0a%3c [[https://www.naturevault.org/wiki/pmwiki.php/NatureVault/Transep|Transep]] stands for "transaction separation".  It is similar to segwit, but instead of just separating the signatures from the broadcast block we separate all of the block data.  All that is broadcast is the block header.  This is just a few hundred bytes and thus should transverse the network nearly instantly so we can achieve a low orphan rate on our 6 second blocktime.  Every node would be recieving blocks full of data, and they know that only the blocks whose header makes it into the "blockchain" is an accepted block and should be retained in memory.%0a\ No newline at end of file%0a---%0a> So lets say someone has a 95%25 rating and wants to borrow coins.  A person might give them a 5%25+ interest rate because they know on average they will only get back 95%25 of what they loaned.  So if you lend them 1000 coins you can expect them to give back 950 so you charge them 5%25 more to try to hedge for this.  So instead of owing you back 100 coins a month for 10 months, they would owe you 105 coins a month for 10 months to repay the loan.%0a\ No newline at end of file%0a
host:1626010954=68.231.69.235
author:1626009872=
diff:1626009872:1626009555:=20,21d19%0a%3c %0a%3c Basically BlockTock is like a heartbeat that makes a smart contract "self aware".  Every 6 seconds it can check itself and see if a function is ready to run.%0a
host:1626009872=68.231.69.235
author:1626009555=
diff:1626009555:1626009496:=15c15%0a%3c Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address (address that contains a [[https://ethereum.stackexchange.com/questions/51647/the-difference-between-contract-address-and-wallet-address|codehash]]) that holds at least 1 initial block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled for contracts.%0a---%0a> Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address (address that contains a [[https://ethereum.stackexchange.com/questions/51647/the-difference-between-contract-address-and-wallet-address|codehash]]) that holds at least 1 starting block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled for contracts.%0a
host:1626009555=68.231.69.235
author:1626009496=
diff:1626009496:1626009291:=15c15%0a%3c Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address (address that contains a [[https://ethereum.stackexchange.com/questions/51647/the-difference-between-contract-address-and-wallet-address|codehash]]) that holds at least 1 starting block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled for contracts.%0a---%0a> Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address that holds at least 1 starting block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled for contracts.%0a
host:1626009496=68.231.69.235
author:1626009291=
diff:1626009291:1626009170:=15c15%0a%3c Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address that holds at least 1 starting block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled for contracts.%0a---%0a> Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address that holds at least 1 starting block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled.%0a
host:1626009291=68.231.69.235
author:1626009170=
diff:1626009170:1626009143:=23c23%0a%3c *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate when the network is working full speed.  Also if signals are sent through earth instead of around it, the orphan rate can nearly be further halved.%0a---%0a> *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate when the network is working full speed.  Also if signals are sent through earth instead of around it this number can nearly be halved further.%0a
host:1626009170=68.231.69.235
author:1626009143=
diff:1626009143:1626008908:=23c23%0a%3c *6 second blocktime.  This gives a theoretical fairness of 97.8%25 and thus a roughly 2.2%25 orphan rate when the network is working full speed.  Also if signals are sent through earth instead of around it this number can nearly be halved further.%0a---%0a> *6 second blocktime.%0a
host:1626009143=68.231.69.235
author:1626008908=
diff:1626008908:1626008824:=29d28%0a%3c *Coin will have 4 decimals which is over 10,000 more units than Bitcoin while the numbers also being more human readable.%0a
host:1626008908=68.231.69.235
author:1626008824=
diff:1626008824:1626008643:=
host:1626008824=68.231.69.235
author:1626008643=
diff:1626008643:1626008320:=18,19d17%0a%3c %0a%3c The 1 million coin minimum is mostly done to disincentive people from making tons of accounts to farm this dust.  Also it will help minimize the amount of address outputs on the coinbase transaction.%0a
host:1626008643=68.231.69.235
author:1626008320=
diff:1626008320:1626007937:=
host:1626008320=68.231.69.235
author:1626007937=
diff:1626007937:1626007918:=17c17%0a%3c A list of all contract addresses (as opposed to user/external addresses) that contain at least 1,000,000 coins is kept as a separate file/database on every node, similar to how a UTXO list is kept on Bitcoin nodes.%0a---%0a> A list of all contract addresses (as opposed to user/external addresses) that contain at least 1,000,000 coins is kept as a separate file/database on every node, similar to how a UTXOP list is kept on Bitcoin nodes.%0a
host:1626007937=68.231.69.235
author:1626007918=
diff:1626007918:1626007830:=15,17c15%0a%3c Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address that holds at least 1 starting block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled.%0a%3c %0a%3c A list of all contract addresses (as opposed to user/external addresses) that contain at least 1,000,000 coins is kept as a separate file/database on every node, similar to how a UTXOP list is kept on Bitcoin nodes.%0a---%0a> Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address that holds equal to or more than 1 starting block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled.%0a
host:1626007918=68.231.69.235
author:1626007830=
diff:1626007830:1626007790:=15c15%0a%3c Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address that holds equal to or more than 1 starting block worth of coins (1 million coins; this is constant forever).  This works as a "call" for functions that need to be scheduled.%0a---%0a> Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address that holds equal to or more than 1 block worth of coins (1 million coins).  This works as a "call" for functions that need to be scheduled.%0a
host:1626007830=68.231.69.235
author:1626007790=
diff:1626007790:1626007771:=23c23%0a%3c *Block reward is 1 million coins per block and this grows at 1%25 per year to continue incentivizing mining forever and keeping fees negligible forever.%0a---%0a> *Block reward is 10 million coins per minute and this grows at 1%25 per year to continue incentivizing mining forever and keeping fees negligible forever.%0a
host:1626007790=68.231.69.235
author:1626007771=
diff:1626007771:1626007533:=24c24%0a%3c *Rolling 10 block checkpoint like bitcoin cash and also 11 block maturity time.  So this means it only takes 66 seconds to be able to spend mined coins.%0a---%0a> %0a
host:1626007771=68.231.69.235
author:1626007533=
diff:1626007533:1626007522:=15c15%0a%3c Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase transaction]] sends a dust transaction to every contract address that holds equal to or more than 1 block worth of coins (1 million coins).  This works as a "call" for functions that need to be scheduled.%0a---%0a> Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase reward]] sends a dust transaction to every contract address that holds equal to or more than 1 block worth of coins (1 million coins).  This works as a "call" for functions that need to be scheduled.%0a
host:1626007533=68.231.69.235
author:1626007522=
diff:1626007522:1626007410:=15c15%0a%3c Every block's [[https://blog.cex.io/education/coinbase-transaction-12088|coinbase reward]] sends a dust transaction to every contract address that holds equal to or more than 1 block worth of coins (1 million coins).  This works as a "call" for functions that need to be scheduled.%0a---%0a> Every block sends a dust transaction to every contract address that holds equal to or more than 1 block worth of coins (1 million coins).  This works as a "call" for functions that need to be scheduled.%0a
host:1626007522=68.231.69.235
author:1626007410=
diff:1626007410:1626007291:=15c15%0a%3c Every block sends a dust transaction to every contract address that holds equal to or more than 1 block worth of coins (1 million coins).  This works as a "call" for functions that need to be scheduled.%0a---%0a> Every block sends a dust transaction to every contract address that holds equal to or more than 1 minute worth of block rewards (10 million coins).  This functions as a call for functions that need to be scheduled.%0a
host:1626007410=68.231.69.235
author:1626007291=
diff:1626007291:1626007257:=19,21c19,21%0a%3c *6 second blocktime.%0a%3c *No max block size.%0a%3c *Min fee per kb (set to adjust average blocksize) or allow each node to set their own min fee, and half of fee is burned (to prevent malicious miners making huge blocks).%0a---%0a> *6 second blocktime%0a> *No max block size%0a> *Min fee per kb (to adjust average blocksize) or allow each node to set their own min fee, and half of fee is burned (to prevent malicious miners making huge blocks)%0a
host:1626007291=68.231.69.235
author:1626007257=
diff:1626007257:1626007215:=23c23%0a%3c *Block reward is 10 million coins per minute and this grows at 1%25 per year to continue incentivizing mining forever and keeping fees negligible forever.%0a---%0a> *Block reward is 10 million coins per minute and this grows at 1%25 per year to continue incentivizing mining forever.%0a
host:1626007257=68.231.69.235
author:1626007215=
diff:1626007215:1626007075:=18c18%0a%3c *Proof of work; GPU (ProgPoW) mined 75%25, CPU (Yespower or RandomX with high parameters) mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on offtime, they need less rewards to incentivize them to mine than GPU miners do who usually have mining farms that they need to be mining constantly to recoup investment costs.  Since we do not allow ASIC's it reduces our environmental impact and also reduces the advantage to large chip/board makers like Bitmain that can be using unreleased technology to gain an advantage.%0a---%0a> *Proof of work; GPU mined 75%25, CPU mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on offtime, they need less rewards to incentivize them to mine than GPU miners do who usually have mining farms that they need to be mining constantly to recoup investment costs.%0a
host:1626007215=68.231.69.235
author:1626007075=
diff:1626007075:1626006991:=18c18%0a%3c *Proof of work; GPU mined 75%25, CPU mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.  Also since many CPU's sit idle on offtime, they need less rewards to incentivize them to mine than GPU miners do who usually have mining farms that they need to be mining constantly to recoup investment costs.%0a---%0a> *Proof of work; GPU mined 75%25, CPU mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.%0a
host:1626007075=68.231.69.235
author:1626006991=
diff:1626006991:1626006839:=18c18%0a%3c *Proof of work; GPU mined 75%25, CPU mined 25%25.  This is done to increase security; so to 51%25 attack the blockchain you would need 2/3rds of the GPU hashrate instead of just half.  Also something like AWS cannot be used to attack the network since CPU only accounts for 25%25 of the hashpower.%0a---%0a> *Proof of work GPU mined%0a
host:1626006991=68.231.69.235
author:1626006839=
diff:1626006839:1626005677:=15,16c15%0a%3c Every block sends a dust transaction to every contract address that holds equal to or more than 1 minute worth of block rewards (10 million coins).  This functions as a call for functions that need to be scheduled.%0a%3c %0a---%0a> Every block sends a dust transaction to every contract address that holds equal to or more than 1 minute worth of block rewards.  This functions as a call for functions that need to be scheduled.%0a23,28c22,23%0a%3c *Block reward is 10 million coins per minute and this grows at 1%25 per year to continue incentivizing mining forever.%0a%3c %0a%3c !!Reputation system%0a%3c We will use account addresses like Ethereum instead of UTXO like Bitcoin.  Then we will have a system that keeps track of how many coins an address has completed contracts for.  So say an address borrows 1000 coins and pays back 900 after the allotted time.  This will mean the account is in deficit of 100 coins and so the reputation for that contract would be 90%25.  Lets say the address was supposed to be paid back 100 coins a month.  It is month 2 and the address has paid back 200 coins.  This means everything is perfectly on schedule so they would have a 100%25 rating.%0a%3c %0a%3c So lets say someone has a 95%25 rating and wants to borrow coins.  A person might give them a 5%25+ interest rate because they know on average they will only get back 95%25 of what they loaned.  So if you lend them 1000 coins you can expect them to give back 950 so you charge them 5%25 more to try to hedge for this.  So instead of owing you back 100 coins a month for 10 months, they would owe you 105 coins a month for 10 months to repay the loan.%0a\ No newline at end of file%0a---%0a> %0a> !!Reputation system%0a\ No newline at end of file%0a
host:1626006839=68.231.69.235
author:1626005677=
diff:1626005677:1626005646:=17d16%0a%3c *Proof of work GPU mined%0a
host:1626005677=68.231.69.235
author:1626005646=
diff:1626005646:1626005596:=20c20%0a%3c *Turing complete programming language like Solidity and/or Haskell.%0a---%0a> *%0a
host:1626005646=68.231.69.235
author:1626005596=
diff:1626005596:1626005493:=15c15%0a%3c Every block sends a dust transaction to every contract address that holds equal to or more than 1 minute worth of block rewards.  This functions as a call for functions that need to be scheduled.%0a---%0a> %0a
host:1626005596=68.231.69.235
author:1626005493=
diff:1626005493:1626005493:=1,22d0%0a%3c (:nogroupheader:)%0a%3c (:Summary::)%0a%3c (:Published::)%0a%3c (:Author:[[~GiverofMemory]]:)%0a%3c (:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site License]]:)%0a%3c (:Update::)%0a%3c (:Maintainer:[[~GiverofMemory]]:)%0a%3c (:Creator:[[]]:)%0a%3c (:Categories:[[!Cryptics]]:)%0a%3c (:Also:none:)%0a%3c (:Archive:[[|Archive.is]], [[|Archive.org]]:)%0a%3c (:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a%3c %0a%3c !!BlockTock%0a%3c %0a%3c !!Parameters%0a%3c *6 second blocktime%0a%3c *No max block size%0a%3c *Min fee per kb (to adjust average blocksize) or allow each node to set their own min fee, and half of fee is burned (to prevent malicious miners making huge blocks)%0a%3c *%0a%3c %0a%3c !!Reputation system%0a\ No newline at end of file%0a
host:1626005493=68.231.69.235
