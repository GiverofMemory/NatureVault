version=pmwiki-2.2.133 ordered=1 urlencoded=1
author=
charset=UTF-8
csum=See also [[Proof of Work]], [[oPoW]], [[scrypt]], [[yescrypt]], [[yespower]] 
ctime=1661968953
name=CryptoProjects.PoW
rev=31
targets=CryptoProjects.ProofOfWork,CryptoProjects.OPoW,CryptoProjects.Scrypt,CryptoProjects.Yescrypt,CryptoProjects.Yespower,CryptoProjects.PoBS,CryptoProjects.PoS,CryptoProjects.ASIC,CryptoProjects.DAG,CryptoProjects.MiningPool,CryptoProjects.Randomx,CryptoProjects.Progpow,Category.Cryptics
text=(:nogroupheader:)%0a(:Summary::)%0a(:Published::)%0a(:Author:[[~GiverofMemory]]:)%0a(:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site License]]:)%0a(:Update::)%0a(:Maintainer:[[~GiverofMemory]]:)%0a(:Creator:[[]]:)%0a(:Categories:[[!Cryptics]]:)%0a(:Also:none:)%0a(:Archive:[[|Archive.is]], [[|Archive.org]]:)%0a(:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a%0aSee also [[Proof of Work]], [[oPoW]], [[scrypt]], [[yescrypt]], [[yespower]]%0a%0aAn improvement to Proof of Work is [[PoBS]] and will avoid a proof of work ban.%0a%0aProof of work suffers from 2 problems, ASIC's and Mining pools.  If these two problems were solved there would be a near negligible power use above something like proof of stake [[PoS]].%0a%0a!![[ASIC]]s%0a%0aASIC's are a gaming of the system, which system was designed for CPU's to be able to mine the cryptocurrency.  Asics are chip designs that allow people to use more power than otherwise possible to mine the cryptocurrency, with the tradeoff that they can no longer be used for general purpose computing.%0a%0aUncertainty and cost are two factors that thwart asic takeover of an algorithm.  Ideally the memory requirement for the pow would grow unpredictably.  Besides that doubling the memory requirement every ~2.6 years [[ https://www.quora.com/Has-Moores-Law-had-a-greater-effect-on-CPU-logic-versus-cache-and-if-so-why|#]] the same time difficulty doubles via koomeys law, should work pretty well too because it will keep the cost prohibitively high to justify an asic maker to make a asic versus just making a cpu.%0a%0aHistory of asic resistance [[https://medium.com/@Linzhi/what-is-memory-hard-45a363b59dfe|#]], for a CPU only coin you target the L2+L3 cache size to track top of the line CPU's and are bigger than GPU's L2+L3.  Also explains TMTO attack, which [[yespower]] fixed.%0a%0aVideo on asic design [[https://youtu.be/_enGUG_Jbi4|#]] memory bandwidth is not an issue, memory size requirement, especially if it is growing unpredictably, is the most difficult problem to solve on asics because it leads to cost and communication problems due to the memory being stored in lots of different places for cost reasons.%0a%0aMemory size requirement ([[DAG]]) calender for various coins [[https://minerstat.com/dag-size-calculator|#]].  Looks like doubling in memory req every 2.6 years is the only way to prevent asics.%0a%0aWe have to be cognizant of why we want to make the algorithm harder and if we are not achieving new functionality, it might not make sense to waste resources [[https://youtu.be/7xKQ3SMnM7Q?t=567|#]].  However something like [[PoBS]] could be a good usecase for why we are hashing large amounts of data, to incentivize saving it.  Also nodes should somehow be rewarded, but preventing [[mining pool]]s would help to fuse miners and nodes into the same people.%0a%0aProposal on how to make monero [[Randomx]] asic resistance permanently [[https://www.reddit.com/r/Monero/comments/x63emj/how_to_make_randomx_asic_resistant_forever_memory/|#]] [[https://www.reddit.com/r/Monero/comments/xbemv8/comment/io166fl/?utm_source=share&utm_medium=web2x&context=3|#]]%0a%0aBob Rao hardware audit of [[progpow]] [[https://github.com/ethereum-cat-herders/progpow-audit/blob/master/Bob%2520Rao%2520-%2520ProgPOW%2520Hardware%2520Audit%2520Report%2520Final.pdf|#]]%0a%0aCache increasing at faster rate than moores law [[https://qr.ae/pvglTA|#]]%0a%0aasic expert henry quan [[https://medium.com/@Henry_ePIC|#]]%0a%0aRandom logic does not provide much asic resistance [[https://medium.com/@Linzhi/eip-1057-progpow-open-chip-design-for-only-1-cost-power-increase-eip-1057-progpow-d106d9baa6eb|#]] [[https://github.com/ethereum-cat-herders/progpow-audit/blob/master/Bob%2520Rao%2520-%2520ProgPOW%2520Hardware%2520Audit%2520Report%2520Final.pdf|#]]%0a%0aHistory of monero's algorithm changes [[https://monero.stackexchange.com/questions/11197/what-pow-hashing-algorithms-did-monero-historically-use|#]]  monero hashrate chart to compare the dates to [[https://www.coinwarz.com/mining/monero/hashrate-chart|#]]%0a%0aProof of Blockchain (PoBC) with random blockchain accesses [[https://bitcointalk.org/index.php?topic=575013|#]]%0a%0a[[PoBS]]%0a%0aAsic resistance is to make mining more difficult than just converting energy into coins, but making the difficulty to make a miner also be a factor [[https://arxiv.org/pdf/1911.05193.pdf|#]].%0a!![[Mining pool]]s%0a%0aOnly the number of pool operators, not individual miners effect a cryptocurrencies decentralization.  If there are only for example 5 mining pools, then if 3 of 5 are paid off or blackmailed then the network is compromised.  If there are no mining pools then thousands or millions of people would have to be compromised.%0a%0aTherefore every person in a pool that is not the pool operator is wasted hashpower.%0a%0aHere we learn that to design for asic resistance, we need to target the greatest amount of internal memory possible on consumer-ish hardware but not to go above that since external memory is orders of magnitude slower [[https://youtu.be/6pEKCe7J_14?t=481|#]]%0a
time=1664264120
author:1664264120=
diff:1664264120:1664264090:=14c14%0a%3c See also [[Proof of Work]], [[oPoW]], [[scrypt]], [[yescrypt]], [[yespower]]%0a---%0a> See also [[Proof of Work]], [[oPoW]]%0a
author:1664264090=
diff:1664264090:1664261925:=14c14%0a%3c See also [[Proof of Work]], [[oPoW]]%0a---%0a> See also [[Proof of Work]]%0a
author:1664261925=
diff:1664261925:1663731163:=50d49%0a%3c Asic resistance is to make mining more difficult than just converting energy into coins, but making the difficulty to make a miner also be a factor [[https://arxiv.org/pdf/1911.05193.pdf|#]].%0a
author:1663731163=
diff:1663731163:1662971209:=13,14d12%0a%3c %0a%3c See also [[Proof of Work]]%0a
author:1662971209=
diff:1662971209:1662971157:=45,46d44%0a%3c %0a%3c [[PoBS]]%0a
author:1662971157=
diff:1662971157:1662928511:=43,44d42%0a%3c %0a%3c Proof of Blockchain (PoBC) with random blockchain accesses [[https://bitcointalk.org/index.php?topic=575013|#]]%0a
author:1662928511=
diff:1662928511:1662600994:=32c32%0a%3c Proposal on how to make monero [[Randomx]] asic resistance permanently [[https://www.reddit.com/r/Monero/comments/x63emj/how_to_make_randomx_asic_resistant_forever_memory/|#]] [[https://www.reddit.com/r/Monero/comments/xbemv8/comment/io166fl/?utm_source=share&utm_medium=web2x&context=3|#]]%0a---%0a> Proposal on how to make monero [[Randomx]] asic resistance permanently [[https://www.reddit.com/r/Monero/comments/x63emj/how_to_make_randomx_asic_resistant_forever_memory/|#]]%0a
author:1662600994=
diff:1662600994:1662600853:=42c42%0a%3c History of monero's algorithm changes [[https://monero.stackexchange.com/questions/11197/what-pow-hashing-algorithms-did-monero-historically-use|#]]  monero hashrate chart to compare the dates to [[https://www.coinwarz.com/mining/monero/hashrate-chart|#]]%0a---%0a> History of monero's algorithm changes [[https://monero.stackexchange.com/questions/11197/what-pow-hashing-algorithms-did-monero-historically-use|#]]%0a
author:1662600853=
diff:1662600853:1662584159:=41,42d40%0a%3c %0a%3c History of monero's algorithm changes [[https://monero.stackexchange.com/questions/11197/what-pow-hashing-algorithms-did-monero-historically-use|#]]%0a
author:1662584159=
diff:1662584159:1662514985:=39,40d38%0a%3c %0a%3c Random logic does not provide much asic resistance [[https://medium.com/@Linzhi/eip-1057-progpow-open-chip-design-for-only-1-cost-power-increase-eip-1057-progpow-d106d9baa6eb|#]] [[https://github.com/ethereum-cat-herders/progpow-audit/blob/master/Bob%2520Rao%2520-%2520ProgPOW%2520Hardware%2520Audit%2520Report%2520Final.pdf|#]]%0a
author:1662514985=
diff:1662514985:1662512324:=24c24%0a%3c History of asic resistance [[https://medium.com/@Linzhi/what-is-memory-hard-45a363b59dfe|#]], for a CPU only coin you target the L2+L3 cache size to track top of the line CPU's and are bigger than GPU's L2+L3.  Also explains TMTO attack, which [[yespower]] fixed.%0a---%0a> History of asic resistance [[https://medium.com/@Linzhi/what-is-memory-hard-45a363b59dfe|#]], for a CPU only coin you target the L2+L3 cache size to track top of the line CPU's and are bigger than GPU's L2+L3%0a
author:1662512324=
diff:1662512324:1662366121:=37,39d36%0a%3c %0a%3c asic expert henry quan [[https://medium.com/@Henry_ePIC|#]]%0a%3c %0a
author:1662366121=
diff:1662366121:1662353525:=35,36d34%0a%3c %0a%3c Cache increasing at faster rate than moores law [[https://qr.ae/pvglTA|#]]%0a
author:1662353525=
diff:1662353525:1662353291:=34c34%0a%3c Bob Rao hardware audit of [[progpow]] [[https://github.com/ethereum-cat-herders/progpow-audit/blob/master/Bob%2520Rao%2520-%2520ProgPOW%2520Hardware%2520Audit%2520Report%2520Final.pdf|#]]%0a---%0a> Bob Rao hardware audit of [[ProgPow]] [[https://github.com/ethereum-cat-herders/progpow-audit/blob/master/Bob%2520Rao%2520-%2520ProgPOW%2520Hardware%2520Audit%2520Report%2520Final.pdf|#]]%0a
author:1662353291=
diff:1662353291:1662351428:=33,34d32%0a%3c %0a%3c Bob Rao hardware audit of [[ProgPow]] [[https://github.com/ethereum-cat-herders/progpow-audit/blob/master/Bob%2520Rao%2520-%2520ProgPOW%2520Hardware%2520Audit%2520Report%2520Final.pdf|#]]%0a
author:1662351428=
diff:1662351428:1662351328:=24c24%0a%3c History of asic resistance [[https://medium.com/@Linzhi/what-is-memory-hard-45a363b59dfe|#]], for a CPU only coin you target the L2+L3 cache size to track top of the line CPU's and are bigger than GPU's L2+L3%0a---%0a> History of asic resistance [[https://medium.com/@Linzhi/what-is-memory-hard-45a363b59dfe|#]]%0a
author:1662351328=
diff:1662351328:1662351301:=32c32%0a%3c Proposal on how to make monero [[Randomx]] asic resistance permanently [[https://www.reddit.com/r/Monero/comments/x63emj/how_to_make_randomx_asic_resistant_forever_memory/|#]]%0a---%0a> Proposal on how to make monero [[RandomX]] asic resistance permanently [[https://www.reddit.com/r/Monero/comments/x63emj/how_to_make_randomx_asic_resistant_forever_memory/|#]]%0a
author:1662351301=
diff:1662351301:1662351286:=32c32%0a%3c Proposal on how to make monero [[RandomX]] asic resistance permanently [[https://www.reddit.com/r/Monero/comments/x63emj/how_to_make_randomx_asic_resistant_forever_memory/|#]]%0a---%0a> Proposal on how to make monero [[randomX]] asic resistance permanently [[https://www.reddit.com/r/Monero/comments/x63emj/how_to_make_randomx_asic_resistant_forever_memory/|#]]%0a
author:1662351286=
diff:1662351286:1662266851:=31,32d30%0a%3c %0a%3c Proposal on how to make monero [[randomX]] asic resistance permanently [[https://www.reddit.com/r/Monero/comments/x63emj/how_to_make_randomx_asic_resistant_forever_memory/|#]]%0a
author:1662266851=
diff:1662266851:1662266439:=30c30%0a%3c We have to be cognizant of why we want to make the algorithm harder and if we are not achieving new functionality, it might not make sense to waste resources [[https://youtu.be/7xKQ3SMnM7Q?t=567|#]].  However something like [[PoBS]] could be a good usecase for why we are hashing large amounts of data, to incentivize saving it.  Also nodes should somehow be rewarded, but preventing [[mining pool]]s would help to fuse miners and nodes into the same people.%0a---%0a> We have to be cognizant of why we want to make the algorithm harder and if we are not achieving new functionality, it might not make sense to waste resources [[https://youtu.be/7xKQ3SMnM7Q?t=567|#]].  However something like [[PoBS]] could be a good usecase for why we are hashing large amounts of data, to incentivize saving it.%0a
author:1662266439=
diff:1662266439:1662262991:=29,30d28%0a%3c %0a%3c We have to be cognizant of why we want to make the algorithm harder and if we are not achieving new functionality, it might not make sense to waste resources [[https://youtu.be/7xKQ3SMnM7Q?t=567|#]].  However something like [[PoBS]] could be a good usecase for why we are hashing large amounts of data, to incentivize saving it.%0a
author:1662262991=
diff:1662262991:1662213989:=34,35d33%0a%3c %0a%3c Here we learn that to design for asic resistance, we need to target the greatest amount of internal memory possible on consumer-ish hardware but not to go above that since external memory is orders of magnitude slower [[https://youtu.be/6pEKCe7J_14?t=481|#]]%0a
author:1662213989=
diff:1662213989:1662184147:=27,28d26%0a%3c %0a%3c Memory size requirement ([[DAG]]) calender for various coins [[https://minerstat.com/dag-size-calculator|#]].  Looks like doubling in memory req every 2.6 years is the only way to prevent asics.%0a
author:1662184147=
diff:1662184147:1662184050:=26c26%0a%3c Video on asic design [[https://youtu.be/_enGUG_Jbi4|#]] memory bandwidth is not an issue, memory size requirement, especially if it is growing unpredictably, is the most difficult problem to solve on asics because it leads to cost and communication problems due to the memory being stored in lots of different places for cost reasons.%0a---%0a> Video on asic design [[https://youtu.be/_enGUG_Jbi4|#]] memory bandwidth is not an issue, memory size requirement, especially if it is growing unpredictably, is the most difficult problem to solve on asics because it leads to cost and communication problems due to the memory being stored in lots of different places.%0a
author:1662184050=
diff:1662184050:1662183655:=26c26%0a%3c Video on asic design [[https://youtu.be/_enGUG_Jbi4|#]] memory bandwidth is not an issue, memory size requirement, especially if it is growing unpredictably, is the most difficult problem to solve on asics because it leads to cost and communication problems due to the memory being stored in lots of different places.%0a---%0a> Video on asic design [[https://youtu.be/_enGUG_Jbi4|#]]%0a
author:1662183655=
diff:1662183655:1662180779:=26d25%0a%3c Video on asic design [[https://youtu.be/_enGUG_Jbi4|#]]%0a
author:1662180779=
diff:1662180779:1662180631:=23,24d22%0a%3c %0a%3c History of asic resistance [[https://medium.com/@Linzhi/what-is-memory-hard-45a363b59dfe|#]]%0a
author:1662180631=
diff:1662180631:1661969209:=21,22d20%0a%3c %0a%3c Uncertainty and cost are two factors that thwart asic takeover of an algorithm.  Ideally the memory requirement for the pow would grow unpredictably.  Besides that doubling the memory requirement every ~2.6 years [[ https://www.quora.com/Has-Moores-Law-had-a-greater-effect-on-CPU-logic-versus-cache-and-if-so-why|#]] the same time difficulty doubles via koomeys law, should work pretty well too because it will keep the cost prohibitively high to justify an asic maker to make a asic versus just making a cpu.%0a
author:1661969209=
diff:1661969209:1661969087:=16,17c16,17%0a%3c Proof of work suffers from 2 problems, ASIC's and Mining pools.  If these two problems were solved there would be a near negligible power use above something like proof of stake [[PoS]].%0a%3c %0a---%0a> Proof of work suffers from 2 problems:%0a> %0a19,20d18%0a%3c %0a%3c ASIC's are a gaming of the system, which system was designed for CPU's to be able to mine the cryptocurrency.  Asics are chip designs that allow people to use more power than otherwise possible to mine the cryptocurrency, with the tradeoff that they can no longer be used for general purpose computing.%0a
author:1661969087=
diff:1661969087:1661968953:=21,24d20%0a%3c %0a%3c Only the number of pool operators, not individual miners effect a cryptocurrencies decentralization.  If there are only for example 5 mining pools, then if 3 of 5 are paid off or blackmailed then the network is compromised.  If there are no mining pools then thousands or millions of people would have to be compromised.%0a%3c %0a%3c Therefore every person in a pool that is not the pool operator is wasted hashpower.%0a
author:1661968953=
diff:1661968953:1661968953:=1,20d0%0a%3c (:nogroupheader:)%0a%3c (:Summary::)%0a%3c (:Published::)%0a%3c (:Author:[[~GiverofMemory]]:)%0a%3c (:License:[[https://en.m.wikipedia.org/wiki/Res_communis|Site License]]:)%0a%3c (:Update::)%0a%3c (:Maintainer:[[~GiverofMemory]]:)%0a%3c (:Creator:[[]]:)%0a%3c (:Categories:[[!Cryptics]]:)%0a%3c (:Also:none:)%0a%3c (:Archive:[[|Archive.is]], [[|Archive.org]]:)%0a%3c (:Download:[[{$FullName}?action=print|URL]],[[https://www.web2pdfconvert.com/|PDF from URL]]:)%0a%3c %0a%3c An improvement to Proof of Work is [[PoBS]] and will avoid a proof of work ban.%0a%3c %0a%3c Proof of work suffers from 2 problems:%0a%3c %0a%3c !![[ASIC]]s%0a%3c %0a%3c !![[Mining pool]]s%0a
